{"version":3,"file":"SignedOutOrRedirect.js","sourceRoot":"","sources":["../../../../src/components/auth/SignedOutOrRedirect.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AACA,+CAAmD;AACnD,gDAA6C;AAE7C;;GAEG;AACI,MAAM,mBAAmB,GAAG,CAAC,KAA4C,EAAE,EAAE;IAClF,MAAM,CAAC,UAAU,EAAE,aAAa,CAAC,GAAG,IAAA,gBAAQ,EAAC,KAAK,CAAC,CAAC;IACpD,MAAM,EAAE,IAAI,EAAE,QAAQ,EAAE,GAAG,KAAK,CAAC;IAEjC,MAAM,EAAE,IAAI,EAAE,UAAU,EAAE,GAAG,IAAA,iBAAO,GAAE,CAAC;IAEvC,IAAA,iBAAS,EAAC,GAAG,EAAE;QACb,IAAI,CAAC,UAAU,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,EAAE;YACvC,aAAa,CAAC,IAAI,CAAC,CAAC;YACpB,MAAM,WAAW,GAAG,IAAI,GAAG,CAAC,IAAI,EAAE,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;YAC1D,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC,CAAC;SAChD;IACH,CAAC,EAAE,CAAC,UAAU,EAAE,UAAU,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC;IAEzC,IAAI,CAAC,IAAI,IAAI,CAAC,UAAU,EAAE;QACxB,OAAO,8DAAG,QAAQ,CAAI,CAAC;KACxB;SAAM;QACL,OAAO,IAAI,CAAC;KACb;AACH,CAAC,CAAC;AAnBW,QAAA,mBAAmB,uBAmB9B","sourcesContent":["import type { ReactNode } from \"react\";\nimport React, { useEffect, useState } from \"react\";\nimport { useAuth } from \"../../auth/useAuth\";\n\n/**\n * Renders its `children` if the current `Session` is signed out, otherwise redirects the browser to the `path` prop. Uses `window.location.assign` to perform the redirect.\n */\nexport const SignedOutOrRedirect = (props: { path: string; children: ReactNode }) => {\n  const [redirected, setRedirected] = useState(false);\n  const { path, children } = props;\n\n  const { user, isSignedIn } = useAuth();\n\n  useEffect(() => {\n    if (!redirected && (isSignedIn || user)) {\n      setRedirected(true);\n      const redirectUrl = new URL(path, window.location.origin);\n      window.location.assign(redirectUrl.toString());\n    }\n  }, [redirected, isSignedIn, path, user]);\n\n  if (!user && !isSignedIn) {\n    return <>{children}</>;\n  } else {\n    return null;\n  }\n};\n"]}