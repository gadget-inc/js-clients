{"version":3,"file":"SignedOut.js","sourceRoot":"","sources":["../../../../src/components/auth/SignedOut.tsx"],"names":[],"mappings":";;;;;;AACA,kDAA0B;AAC1B,uDAAoD;AACpD,mDAA6D;AAE7D;;GAEG;AACI,MAAM,SAAS,GAAG,CAAC,KAA8B,EAAE,EAAE;IAC1D,MAAM,EAAE,OAAO,EAAE,IAAI,EAAE,GAAG,IAAA,iBAAO,GAAE,CAAC;IACpC,IAAI,CAAC,OAAO,IAAI,IAAA,0BAAkB,EAAC,OAAO,CAAC,IAAI,CAAC,IAAI,EAAE;QACpD,OAAO,8DAAG,KAAK,CAAC,QAAQ,CAAI,CAAC;KAC9B;SAAM;QACL,OAAO,IAAI,CAAC;KACb;AACH,CAAC,CAAC;AAPW,QAAA,SAAS,aAOpB","sourcesContent":["import type { ReactNode } from \"react\";\nimport React from \"react\";\nimport { useAuth } from \"../../../src/auth/useAuth\";\nimport { isSessionSignedOut } from \"../../../src/auth/utils\";\n\n/**\n * Renders its `children` if the current `Session` is signed out (no associated `User`), otherwise renders nothing.\n */\nexport const SignedOut = (props: { children: ReactNode }) => {\n  const { session, user } = useAuth();\n  if (!session || isSessionSignedOut(session) || !user) {\n    return <>{props.children}</>;\n  } else {\n    return null;\n  }\n};\n"]}