{"version":3,"file":"useSignOut.js","sourceRoot":"","sources":["../../../src/auth/useSignOut.ts"],"names":[],"mappings":";;;AAAA,iCAAmC;AACnC,6DAA8E;AAC9E,mDAAgD;AAChD,uCAAoC;AAEpC;;;GAGG;AACI,MAAM,UAAU,GAAG,GAAG,EAAE;IAC7B,MAAM,GAAG,GAAG,IAAA,uBAAM,GAAE,CAAC;IACrB,MAAM,IAAI,GAAG,IAAA,iBAAO,GAAE,CAAC;IACvB,MAAM,OAAO,GAAG,IAAA,kBAAU,EAAC,2CAA0B,CAAC,CAAC;IACvD,MAAM,0BAA0B,GAAG,OAAO,EAAE,IAAI,CAAC,0BAA0B,CAAC;IAC5E,IAAI,0BAA0B,IAAK,GAAW,CAAC,IAAI,CAAC,0BAA0B,CAAC,EAAE;QAC/E,6DAA6D;QAC7D,aAAa;QACb,MAAM,CAAC,EAAE,aAAa,CAAC,GAAG,IAAA,qBAAS,EAAE,GAAW,CAAC,IAAI,CAAC,0BAA0B,CAAC,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;QACvG,oEAAoE;QACpE,OAAO,GAAG,EAAE,CAAC,aAAa,CAAC,IAAK,CAAC,EAAE,CAAC,CAAC;KACtC;SAAM;QACL,MAAM,IAAI,KAAK,CAAC,kDAAkD,0BAA0B,sCAAsC,CAAC,CAAC;KACrI;AACH,CAAC,CAAC;AAdW,QAAA,UAAU,cAcrB","sourcesContent":["import { useContext } from \"react\";\nimport { GadgetConfigurationContext, useApi } from \"../../src/GadgetProvider\";\nimport { useAction } from \"../../src/useAction\";\nimport { useUser } from \"./useUser\";\n\n/**\n * Returns a callback that will POST to the configured `signOutPath` on the `Provider`, and then redirect the user to the returned URL.\n * @returns The callback to sign out the `User`\n */\nexport const useSignOut = () => {\n  const api = useApi();\n  const user = useUser();\n  const context = useContext(GadgetConfigurationContext);\n  const signOutActionApiIdentifier = context?.auth.signOutActionApiIdentifier;\n  if (signOutActionApiIdentifier && (api as any).user[signOutActionApiIdentifier]) {\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    const [, signOutAction] = useAction((api as any).user[signOutActionApiIdentifier], { suspense: true });\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    return () => signOutAction(user!.id);\n  } else {\n    throw new Error(`missing configured signOutActionApiIdentifier '${signOutActionApiIdentifier}' on the \\`api.user\\` model manager.`);\n  }\n};\n"]}