{"version":3,"file":"useSignOut.js","sourceRoot":"","sources":["../../../src/auth/useSignOut.ts"],"names":[],"mappings":";;;AAAA,iCAAiE;AACjE,6DAA8E;AAC9E,mDAAgD;AAChD,uCAAoC;AAEpC;;;GAGG;AACI,MAAM,UAAU,GAAG,CAAC,IAA+D,EAAE,EAAE;IAC5F,MAAM,iBAAiB,GAAG,IAAI,EAAE,iBAAiB,IAAI,IAAI,CAAC;IAC1D,MAAM,cAAc,GAAG,IAAI,EAAE,cAAc,CAAC;IAC5C,MAAM,GAAG,GAAG,IAAA,uBAAM,GAAE,CAAC;IACrB,MAAM,IAAI,GAAG,IAAA,iBAAO,GAAE,CAAC;IACvB,MAAM,OAAO,GAAG,IAAA,kBAAU,EAAC,2CAA0B,CAAC,CAAC;IACvD,oEAAoE;IACpE,MAAM,EAAE,0BAA0B,EAAE,UAAU,EAAE,GAAG,OAAQ,CAAC,IAAI,CAAC;IACjE,IAAI,0BAA0B,IAAK,GAAW,CAAC,IAAI,CAAC,0BAA0B,CAAC,EAAE;QAC/E,6DAA6D;QAC7D,aAAa;QACb,MAAM,CAAC,EAAE,QAAQ,EAAE,KAAK,EAAE,EAAE,aAAa,CAAC,GAAG,IAAA,qBAAS,EAAE,GAAW,CAAC,IAAI,CAAC,0BAA0B,CAAC,CAAC,CAAC;QACtG,MAAM,CAAC,UAAU,EAAE,aAAa,CAAC,GAAG,IAAA,gBAAQ,EAAC,KAAK,CAAC,CAAC;QACpD,IAAA,iBAAS,EAAC,GAAG,EAAE;YACb,IAAI,UAAU,IAAI,CAAC,IAAI,IAAI,QAAQ;gBAAE,OAAO;YAE5C,IAAI,KAAK;gBAAE,MAAM,KAAK,CAAC;iBAClB,IAAI,iBAAiB,EAAE;gBAC1B,aAAa,CAAC,IAAI,CAAC,CAAC;gBACpB,MAAM,WAAW,GAAG,IAAI,GAAG,CAAC,cAAc,IAAI,UAAU,EAAE,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;gBAClF,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC,CAAC;aAChD;QACH,CAAC,EAAE,CAAC,UAAU,EAAE,QAAQ,EAAE,KAAK,EAAE,cAAc,EAAE,iBAAiB,EAAE,UAAU,EAAE,aAAa,EAAE,IAAI,CAAC,CAAC,CAAC;QACtG,oEAAoE;QACpE,OAAO,IAAA,eAAO,EACZ,GAAG,EAAE,CAAC,KAAK,IAAI,EAAE;YACf,aAAa,CAAC,KAAK,CAAC,CAAC;YACrB,oEAAoE;YACpE,MAAM,aAAa,CAAC,EAAE,EAAE,EAAE,IAAK,CAAC,EAAE,EAAE,CAAC,CAAC;QACxC,CAAC,EACD,CAAC,IAAI,EAAE,aAAa,CAAC,CACtB,CAAC;KACH;SAAM;QACL,MAAM,IAAI,KAAK,CAAC,kDAAkD,0BAA0B,sCAAsC,CAAC,CAAC;KACrI;AACH,CAAC,CAAC;AAnCW,QAAA,UAAU,cAmCrB","sourcesContent":["import { useContext, useEffect, useMemo, useState } from \"react\";\nimport { GadgetConfigurationContext, useApi } from \"../../src/GadgetProvider\";\nimport { useAction } from \"../../src/useAction\";\nimport { useUser } from \"./useUser\";\n\n/**\n * Returns a callback that will call the configured `signOutActionApiIdentifier` on the `User` model and optionally redirect (by default).\n * @returns The `Promise` to call to execute the `signOut` action. Will automatically redirect to the configured `signInPath` unless the `redirect: false` option is provided.\n */\nexport const useSignOut = (opts?: { redirectOnSuccess?: boolean; redirectToPath?: string }) => {\n  const redirectOnSuccess = opts?.redirectOnSuccess ?? true;\n  const redirectToPath = opts?.redirectToPath;\n  const api = useApi();\n  const user = useUser();\n  const context = useContext(GadgetConfigurationContext);\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n  const { signOutActionApiIdentifier, signInPath } = context!.auth;\n  if (signOutActionApiIdentifier && (api as any).user[signOutActionApiIdentifier]) {\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    const [{ fetching, error }, signOutAction] = useAction((api as any).user[signOutActionApiIdentifier]);\n    const [redirected, setRedirected] = useState(false);\n    useEffect(() => {\n      if (redirected || !user || fetching) return;\n\n      if (error) throw error;\n      else if (redirectOnSuccess) {\n        setRedirected(true);\n        const redirectUrl = new URL(redirectToPath ?? signInPath, window.location.origin);\n        window.location.assign(redirectUrl.toString());\n      }\n    }, [redirected, fetching, error, redirectToPath, redirectOnSuccess, signInPath, signOutAction, user]);\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    return useMemo(\n      () => async () => {\n        setRedirected(false);\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        await signOutAction({ id: user!.id });\n      },\n      [user, signOutAction]\n    );\n  } else {\n    throw new Error(`missing configured signOutActionApiIdentifier '${signOutActionApiIdentifier}' on the \\`api.user\\` model manager.`);\n  }\n};\n"]}