{"version":3,"file":"InternalModelManager.js","sourceRoot":"","sources":["../../src/InternalModelManager.ts"],"names":[],"mappings":"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","sourcesContent":["import { GadgetConnection } from \"./GadgetConnection\";\nimport { GadgetRecord } from \"./GadgetRecord\";\nimport { GadgetRecordList } from \"./GadgetRecordList\";\nimport { GadgetTransaction } from \"./GadgetTransaction\";\nimport { assert, assertMutationSuccess, assertOperationSuccess, camelize, capitalize, hydrateConnection, hydrateRecord } from \"./support\";\n\nconst internalErrorsDetails = `\nfragment InternalErrorsDetails on ExecutionError {\n  code\n  message\n  ...on InvalidRecordError {\n    validationErrors {\n      apiIdentifier\n      message\n    }\n  }\n}\n`;\n\nconst internalHydrationPlan = (modelApiIdentifer: string) => `\n  gadgetMeta {\n    hydrations(modelName: \"${modelApiIdentifer}\")\n  }\n`;\n\nexport const internalFindOneQuery = (apiIdentifier: string) => {\n  const capitalizedApiIdentifier = capitalize(apiIdentifier);\n  return `\n    query InternalFind${capitalizedApiIdentifier}($id: GadgetID!) {\n      ${internalHydrationPlan(apiIdentifier)}\n      internal {\n        ${apiIdentifier}(id: $id)\n      }\n    }\n    `;\n};\n\nexport const internalFindManyQuery = (apiIdentifier: string) => {\n  const capitalizedApiIdentifier = capitalize(apiIdentifier);\n  return `\n    query InternalFindMany${capitalizedApiIdentifier}(\n      $after: String\n      $before: String\n      $first: Int\n      $last: Int\n      $search: String\n      $sort: [${capitalizedApiIdentifier}Sort!]\n      $filter: [${capitalizedApiIdentifier}Filter!]\n    ) {\n      ${internalHydrationPlan(apiIdentifier)}\n      internal {\n        list${capitalizedApiIdentifier}(\n          after: $after\n          before: $before\n          first: $first\n          last: $last\n          search: $search\n          sort: $sort\n          filter: $filter\n        ) {\n          edges {\n            cursor\n            node\n          }\n          pageInfo {\n            hasNextPage\n            hasPreviousPage\n            startCursor\n            endCursor\n          }\n        }\n      }\n    }\n    `;\n};\n\nexport const internalCreateMutation = (apiIdentifier: string) => {\n  const capitalizedApiIdentifier = capitalize(apiIdentifier);\n  return `\n    ${internalErrorsDetails}\n    \n    mutation InternalCreate${capitalizedApiIdentifier}($record: Internal${capitalizedApiIdentifier}Input) {\n      ${internalHydrationPlan(apiIdentifier)}\n      internal {\n        create${capitalizedApiIdentifier}(${apiIdentifier}: $record) {\n          success\n          errors {\n            ... InternalErrorsDetails\n          }\n          ${apiIdentifier}\n        }\n      }\n    }\n  `;\n};\n\nexport const internalUpdateMutation = (apiIdentifier: string) => {\n  const capitalizedApiIdentifier = capitalize(apiIdentifier);\n  return `\n    ${internalErrorsDetails}\n    \n    mutation InternalUpdate${capitalizedApiIdentifier}($id: GadgetID!, $record: Internal${capitalizedApiIdentifier}Input) {\n      ${internalHydrationPlan(apiIdentifier)}\n      internal {\n        update${capitalizedApiIdentifier}(id: $id, ${apiIdentifier}: $record) {\n          success\n          errors {\n            ... InternalErrorsDetails\n          }\n          ${apiIdentifier}\n        }\n      }\n    }\n  `;\n};\n\nexport const internalDeleteMutation = (apiIdentifier: string) => {\n  const capitalizedApiIdentifier = capitalize(apiIdentifier);\n  return `\n    ${internalErrorsDetails}\n    \n    mutation InternalDelete${capitalizedApiIdentifier}($id: GadgetID!) {\n      ${internalHydrationPlan(apiIdentifier)}\n      internal {\n        delete${capitalizedApiIdentifier}(id: $id) {\n          success\n          errors {\n            ... InternalErrorsDetails\n          }\n        }\n      }\n    }\n  `;\n};\n\nexport const internalDeleteManyMutation = (apiIdentifier: string) => {\n  const capitalizedApiIdentifier = capitalize(apiIdentifier);\n  return `\n    ${internalErrorsDetails}\n    \n    mutation InternalDeleteMany${capitalizedApiIdentifier}(\n      $search: String\n      $filter: [${capitalizedApiIdentifier}Filter!]\n    ) {\n      ${internalHydrationPlan(apiIdentifier)}\n      internal {\n        deleteMany${capitalizedApiIdentifier}(search: $search, filter: $filter) {\n          success\n          errors {\n            ... InternalErrorsDetails\n          }\n        }\n      }\n    }\n  `;\n};\n\nexport type RecordData = Record<string, any>;\n\n/**\n * Model specific manager for a given model's internal representation. Used to access the inner, raw data in the Gadget database. Use with caution -- it's easy to break stuff, and the Public API should be used when possible!\n */\nexport class InternalModelManager {\n  private readonly capitalizedApiIdentifier: string;\n\n  constructor(private readonly apiIdentifier: string, readonly connection: GadgetConnection) {\n    this.capitalizedApiIdentifier = camelize(apiIdentifier);\n  }\n\n  async findOne(id: string): Promise<GadgetRecord<any>> {\n    const response = await this.connection.currentClient.query(internalFindOneQuery(this.apiIdentifier), { id }).toPromise();\n    const result = assertOperationSuccess(response, [\"internal\", this.apiIdentifier]);\n    return hydrateRecord(response, result);\n  }\n\n  async findMany(options?: Record<string, any>): Promise<GadgetRecordList<any>> {\n    const response = await this.connection.currentClient.query(internalFindManyQuery(this.apiIdentifier), options).toPromise();\n    const connection = assertOperationSuccess(response, [\"internal\", `list${this.capitalizedApiIdentifier}`]);\n    const records = hydrateConnection(response, connection);\n    return GadgetRecordList.boot(this, records, { options, pageInfo: connection.pageInfo });\n  }\n\n  async create(record: RecordData): Promise<GadgetRecord<any>> {\n    return await this.transaction(async (transaction) => {\n      const response = await transaction.client\n        .mutation(internalCreateMutation(this.apiIdentifier), {\n          record: record[this.apiIdentifier],\n        })\n        .toPromise();\n      const result = assertMutationSuccess(response, [\"internal\", `create${this.capitalizedApiIdentifier}`]);\n      return await hydrateRecord(response, result[this.apiIdentifier]);\n    });\n  }\n\n  async update(id: string, record: RecordData): Promise<GadgetRecord<any>> {\n    assert(id, `Can't update a record without an ID passed`);\n    return await this.transaction(async (transaction) => {\n      const response = await transaction.client\n        .mutation(internalUpdateMutation(this.apiIdentifier), {\n          id,\n          record: record[this.apiIdentifier],\n        })\n        .toPromise();\n      const result = assertMutationSuccess(response, [\"internal\", `update${this.capitalizedApiIdentifier}`]);\n\n      return await hydrateRecord(response, result[this.apiIdentifier]);\n    });\n  }\n\n  async delete(id: string): Promise<void> {\n    assert(id, `Can't delete a record without an ID`);\n    return await this.transaction(async (transaction) => {\n      const response = await transaction.client.mutation(internalDeleteMutation(this.apiIdentifier), { id }).toPromise();\n      assertMutationSuccess(response, [\"internal\", `delete${this.capitalizedApiIdentifier}`]);\n    });\n  }\n\n  async deleteMany(options?: { search?: string; filter?: Record<string, any> }): Promise<void> {\n    return await this.transaction(async (transaction) => {\n      const response = await transaction.client.mutation(internalDeleteManyMutation(this.apiIdentifier), options).toPromise();\n      assertMutationSuccess(response, [\"internal\", `deleteMany${this.capitalizedApiIdentifier}`]);\n    });\n  }\n\n  async transaction<T>(callback: (transaction: GadgetTransaction) => Promise<T>): Promise<T> {\n    return await this.connection.transaction(callback);\n  }\n}\n"]}