{"version":3,"file":"AnyCoreImplementation.js","sourceRoot":"","sources":["../../src/AnyCoreImplementation.ts"],"names":[],"mappings":"","sourcesContent":["import { AnyErrorWrapper } from \"./AnyErrorWrapper.js\";\nimport { AnyGadgetRecord } from \"./AnyGadgetRecord.js\";\nimport { AnyActionFunction, AnyBulkActionFunction } from \"./GadgetFunctions.js\";\n\nexport interface AnyCoreImplementation {\n  GadgetRecord: AnyGadgetRecord<any>;\n  disambiguateActionVariables: (action: AnyActionFunction, input: Record<string, any>) => Record<string, any>;\n  disambiguateBulkActionVariables: (\n    action: AnyBulkActionFunction,\n    inputs?: Record<string, any> | Record<string, any>[]\n  ) => Record<string, any>;\n  capitalizeIdentifier: (identifier: string) => string;\n  wrapClientSideError: (error: any, response?: any) => AnyErrorWrapper;\n  errorIfDataAbsent: (data: any, dataPath: string[], paused?: boolean) => AnyErrorWrapper | undefined;\n  namespaceDataPath: (dataPath: string[], namespace?: string[] | string | null) => string[];\n  camelize: (identifier: string, uppercaseFirstLetter?: boolean) => string;\n  isEqual: (a: any, b: any) => boolean;\n}\n"]}