{"version":3,"file":"useSendMessage.js","sourceRoot":"","sources":["../../../src/hooks/useSendMessage.ts"],"names":[],"mappings":";;;AAAA,iCAAoC;AAEpC;;;;;;;;;;;;;;GAcG;AACH,SAAgB,cAAc;IAC5B,MAAM,WAAW,GAAG,IAAA,mBAAW,EAAC,CAAC,MAAc,EAAE,EAAE;QACjD,IAAI,OAAO,MAAM,KAAK,WAAW,IAAI,MAAM,EAAE,MAAM,EAAE,mBAAmB,EAAE,CAAC;YACzE,OAAO,MAAM,CAAC,MAAM,CAAC,mBAAmB,CAAC,EAAE,MAAM,EAAE,CAAC,CAAC;QACvD,CAAC;QACD,OAAO,OAAO,CAAC,OAAO,EAAE,CAAC;IAC3B,CAAC,EAAE,EAAE,CAAC,CAAC;IAEP,OAAO,WAAW,CAAC;AACrB,CAAC;AATD,wCASC","sourcesContent":["import { useCallback } from \"react\";\n\n/**\n * Hook for sending follow-up messages to the ChatGPT conversation.\n *\n * This hook provides a callback function that allows your app to programmatically\n * send messages to the ChatGPT conversation, as if the user had typed them.\n * This is useful for creating interactive experiences that guide the conversation.\n *\n * @returns A callback function that takes a message string and sends it to ChatGPT\n *\n * @example\n * ```tsx\n * const sendMessage = useSendMessage();\n * return <button onClick={() => sendMessage(\"Tell me more about this\")}>Ask for more details</button>;\n * ```\n */\nexport function useSendMessage() {\n  const sendMessage = useCallback((prompt: string) => {\n    if (typeof window !== \"undefined\" && window?.openai?.sendFollowUpMessage) {\n      return window.openai.sendFollowUpMessage({ prompt });\n    }\n    return Promise.resolve();\n  }, []);\n\n  return sendMessage;\n}\n"]}