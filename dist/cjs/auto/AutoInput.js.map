{"version":3,"file":"AutoInput.js","sourceRoot":"","sources":["../../../src/auto/AutoInput.tsx"],"names":[],"mappings":";;;;AAAA,uDAAyC;AACzC,6DAAoE;AAMpE,SAAgB,SAAS,CAA8B,SAAsB;IAC3E,MAAM,gBAAgB,GAAgB,CAAC,KAAK,EAAE,EAAE;QAC9C,MAAM,EAAE,qBAAqB,EAAE,cAAc,EAAE,QAAQ,EAAE,GAAG,IAAA,iDAA4B,GAAE,CAAC;QAE3F,IAAA,iBAAS,EAAC,GAAG,EAAE;YACb,cAAc,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC;QAChC,CAAC,EAAE,CAAC,cAAc,CAAC,CAAC,CAAC;QAErB,IAAI,qBAAqB,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE,CAAC;YACxD,oCAAoC;YACpC,OAAO,IAAI,CAAC;QACd,CAAC;QAED,OAAO,8BAAC,SAAS,OAAK,KAAK,GAAI,CAAC;IAClC,CAAC,CAAC;IAED,gBAA0C,CAAC,WAAW,GAAG,IAAI,CAAC;IAE/D,OAAO,gBAAyC,CAAC;AACnD,CAAC;AAnBD,8BAmBC;AAED,SAAgB,WAAW,CAAC,SAA6B;IACvD,OAAO,OAAO,SAAS,CAAC,IAAI,KAAK,UAAU,IAAI,aAAa,IAAI,SAAS,CAAC,IAAI,CAAC;AACjF,CAAC;AAFD,kCAEC","sourcesContent":["import React, { useEffect } from \"react\";\nimport { useFieldsFromChildComponents } from \"./AutoFormContext.js\";\n\nexport interface AutoInputComponent<P> extends React.FC<P> {\n  __autoInput: true;\n}\n\nexport function autoInput<P extends { field: string }>(Component: React.FC<P>): AutoInputComponent<P & { selectPaths?: string[] }> {\n  const WrappedComponent: React.FC<P> = (props) => {\n    const { hasCustomFormChildren, registerFields, fieldSet } = useFieldsFromChildComponents();\n\n    useEffect(() => {\n      registerFields([props.field]);\n    }, [registerFields]);\n\n    if (hasCustomFormChildren && !fieldSet.has(props.field)) {\n      // Do not render before registration\n      return null;\n    }\n\n    return <Component {...props} />;\n  };\n\n  (WrappedComponent as AutoInputComponent<P>).__autoInput = true;\n\n  return WrappedComponent as AutoInputComponent<P>;\n}\n\nexport function isAutoInput(component: React.ReactElement): component is React.ReactElement<any, AutoInputComponent<any>> {\n  return typeof component.type === \"function\" && \"__autoInput\" in component.type;\n}\n"]}