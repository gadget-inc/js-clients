{"version":3,"file":"AutoRichTextInput.js","sourceRoot":"","sources":["../../../../src/auto/shared/AutoRichTextInput.tsx"],"names":[],"mappings":";;;AAAA,8CAoB2B;AAC3B,uCAAqC;AAErC,uDAAiD;AACjD,qDAA+D;AAC/D,6CAAqC;AACrC,sFAAgF;AAChF,gDAA6C;AAE7C,SAAwB,iBAAiB,CACvC,KAIiD;IAEjD,MAAM,EAAE,SAAS,EAAE,GAAG,IAAA,gCAAc,GAAE,CAAC;IACvC,MAAM,EAAE,KAAK,EAAE,OAAO,EAAE,SAAS,EAAE,GAAG,IAAI,EAAE,GAAG,KAAK,CAAC;IACrD,MAAM,UAAU,GAAG,IAAA,sDAAwB,EAAC,EAAE,KAAK,EAAE,OAAO,EAAE,CAAC,CAAC;IAChE,MAAM,QAAQ,GAAG,IAAA,cAAM,EAAmB,IAAI,CAAC,CAAC;IAEhD,IAAA,iBAAS,EAAC,GAAG,EAAE;QACb,IAAI,QAAQ,CAAC,OAAO,EAAE,CAAC;YACrB,QAAQ,CAAC,OAAO,CAAC,WAAW,CAAC,UAAU,CAAC,KAAK,EAAE,QAAQ,IAAI,EAAE,CAAC,CAAC;QACjE,CAAC;IACH,CAAC,EAAE,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC;IAEvB,OAAO,CACL,8BAAC,kBAAS,IACR,OAAO,EAAE;YACP,IAAA,uBAAc,GAAE;YAChB,IAAA,oBAAW,GAAE;YACb,IAAA,oBAAW,GAAE;YACb,IAAA,4BAAmB,GAAE;YACrB,IAAA,+BAAsB,GAAE;YACxB,IAAA,yBAAgB,GAAE;YAClB,IAAA,yBAAgB,EAAC;gBACf,YAAY,EAAE,IAAA,cAAG,EAAC,SAAS,CAAC,aAAa,EAAE,KAAK,CAAC,EAAE,QAAQ,IAAI,EAAE;gBACjE,QAAQ,EAAE,WAAW;gBACrB,YAAY,EAAE,IAAI;aACnB,CAAC;YACF,IAAA,sBAAa,EAAC;gBACZ,eAAe,EAAE,GAAG,EAAE,CAAC,CACrB,8BAAC,gCAAuB;oBACtB,8BAAC,iBAAQ,OAAG;oBACZ,8BAAC,wBAAe,OAAG;oBACnB,8BAAC,kBAAS,OAAG;oBACb,8BAAC,mCAA0B,OAAG;oBAC9B,8BAAC,oBAAW,OAAG;oBACf,8BAAC,mBAAU,OAAG;oBACd,8BAAC,mBAAU,OAAG,CACU,CAC3B;aACF,CAAC;SACH,EACD,wBAAwB,EAAC,gBAAgB,EACzC,QAAQ,EAAE,UAAU,CAAC,KAAK,EAAE,QAAQ,IAAI,EAAE,EAC1C,QAAQ,EAAE,CAAC,QAAQ,EAAE,EAAE,CAAC,UAAU,CAAC,QAAQ,CAAC,EAAE,QAAQ,EAAE,CAAC,EACzD,GAAG,EAAE,IAAA,mBAAQ,EAAC,QAAQ,EAAE,SAAS,CAAC,KAC9B,IAAI,GACR,CACH,CAAC;AACJ,CAAC;AArDD,oCAqDC","sourcesContent":["import {\n  BlockTypeSelect,\n  BoldItalicUnderlineToggles,\n  CodeToggle,\n  CreateLink,\n  DiffSourceToggleWrapper,\n  ListsToggle,\n  MDXEditor,\n  Separator,\n  UndoRedo,\n  diffSourcePlugin,\n  headingsPlugin,\n  linkDialogPlugin,\n  listsPlugin,\n  markdownShortcutPlugin,\n  quotePlugin,\n  thematicBreakPlugin,\n  toolbarPlugin,\n  type MDXEditorMethods,\n  type MDXEditorProps,\n} from \"@mdxeditor/editor\";\nimport \"@mdxeditor/editor/style.css\";\nimport type { ForwardedRef } from \"react\";\nimport React, { useEffect, useRef } from \"react\";\nimport { useFormContext, type Control } from \"react-hook-form\";\nimport { get } from \"../../utils.js\";\nimport { useStringInputController } from \"../hooks/useStringInputController.js\";\nimport { multiref } from \"../hooks/utils.js\";\n\nexport default function AutoRichTextInput(\n  props: {\n    field: string;\n    control?: Control<any>;\n    editorRef?: ForwardedRef<MDXEditorMethods> | null;\n  } & Omit<MDXEditorProps, \"markdown\" | \"onChange\">\n) {\n  const { formState } = useFormContext();\n  const { field, control, editorRef, ...rest } = props;\n  const controller = useStringInputController({ field, control });\n  const innerRef = useRef<MDXEditorMethods>(null);\n\n  useEffect(() => {\n    if (innerRef.current) {\n      innerRef.current.setMarkdown(controller.value?.markdown ?? \"\");\n    }\n  }, [controller.value]);\n\n  return (\n    <MDXEditor\n      plugins={[\n        headingsPlugin(),\n        listsPlugin(),\n        quotePlugin(),\n        thematicBreakPlugin(),\n        markdownShortcutPlugin(),\n        linkDialogPlugin(),\n        diffSourcePlugin({\n          diffMarkdown: get(formState.defaultValues, field)?.markdown ?? \"\",\n          viewMode: \"rich-text\",\n          readOnlyDiff: true,\n        }),\n        toolbarPlugin({\n          toolbarContents: () => (\n            <DiffSourceToggleWrapper>\n              <UndoRedo />\n              <BlockTypeSelect />\n              <Separator />\n              <BoldItalicUnderlineToggles />\n              <ListsToggle />\n              <CodeToggle />\n              <CreateLink />\n            </DiffSourceToggleWrapper>\n          ),\n        }),\n      ]}\n      contentEditableClassName=\"autoform-prose\"\n      markdown={controller.value?.markdown ?? \"\"}\n      onChange={(markdown) => controller.onChange({ markdown })}\n      ref={multiref(innerRef, editorRef)}\n      {...rest}\n    />\n  );\n}\n"]}