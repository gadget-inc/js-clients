{"version":3,"file":"AutoTableContext.js","sourceRoot":"","sources":["../../../src/auto/AutoTableContext.ts"],"names":[],"mappings":";;;;AACA,uDAA0C;AAK1C;;GAEG;AAEU,QAAA,gBAAgB,GAAG,eAAK,CAAC,aAAa,CAA+B,SAAS,CAAC,CAAC;AAE7F;;;IAGI;AACG,MAAM,mBAAmB,GAAG,GAAG,EAAE;IACtC,MAAM,gBAAgB,GAAG,IAAA,kBAAU,EAAC,wBAAgB,CAAC,CAAC;IACtD,IAAI,CAAC,gBAAgB,EAAE,CAAC;QACtB,MAAM,IAAI,KAAK,CACb;;;;yGAImG,CACpG,CAAC;IACJ,CAAC;IAED,OAAO,gBAAgB,CAAC;AAC1B,CAAC,CAAC;AAbW,QAAA,mBAAmB,uBAa9B","sourcesContent":["import type { GadgetRecord } from \"@gadgetinc/api-client-core\";\nimport React, { useContext } from \"react\";\nimport type { TableResult } from \"src/use-table/types.js\";\n\nexport type AutoTableContext = TableResult<GadgetRecord<any>>;\n\n/**\n * React context that stores an instance of the metadata loaded for a particular form action\n */\n\nexport const AutoTableContext = React.createContext<AutoTableContext | undefined>(undefined);\n\n/**\n * Get the current `metadata` object and `submit` function from React context\n * Must be called within a component wrapped by the `<AutoForm>` component.\n **/\nexport const useAutoTableContext = () => {\n  const autoTableContext = useContext(AutoTableContext);\n  if (!autoTableContext) {\n    throw new Error(\n      `useAutoTableContext hook called in context where no AutoTableContext is available. Please ensure you are wrapping this hook with the <AutoTable/> component from @gadgetinc/react.\n\n    Possible remedies:\n      - ensuring you have the <AutoTable/> component wrapped around your hook invocation\n      - ensuring your @gadget-client/<your-app> package and your @gadgetinc/react package are up to date`\n    );\n  }\n\n  return autoTableContext;\n};\n"]}