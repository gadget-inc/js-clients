{"version":3,"file":"useHasManyController.js","sourceRoot":"","sources":["../../../../src/auto/hooks/useHasManyController.tsx"],"names":[],"mappings":"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","sourcesContent":["import { useCallback, useMemo } from \"react\";\nimport type { GadgetHasManyConfig } from \"../../internal/gql/graphql.js\";\nimport { useFieldArray, useWatch } from \"../../useActionForm.js\";\nimport type { AutoRelationshipInputProps } from \"../interfaces/AutoRelationshipInputProps.js\";\nimport { useFieldMetadata } from \"./useFieldMetadata.js\";\nimport { useRelatedModelOptions } from \"./useRelatedModel.js\";\n\nexport const useHasManyController = (props: AutoRelationshipInputProps) => {\n  const { field } = props;\n  const fieldMetadata = useFieldMetadata(field);\n  const { path } = fieldMetadata;\n\n  const fieldArray = useFieldArray({ name: path, keyName: \"_fieldArrayKey\" });\n\n  const records: Record<string, any>[] = useWatch({ name: path, defaultValue: [] });\n\n  return {\n    fieldMetadata,\n    fieldArray,\n    records,\n  };\n};\n\nexport const useHasManyInputController = (props: AutoRelationshipInputProps) => {\n  const { fieldMetadata, fieldArray, records } = useHasManyController(props);\n\n  const { metadata } = fieldMetadata;\n  const inverseFieldApiIdentifier = useMemo(() => {\n    return (metadata.configuration as GadgetHasManyConfig).inverseField?.apiIdentifier;\n  }, [metadata.configuration]);\n\n  const { remove, append, update } = fieldArray;\n  const relatedModelOptions = useRelatedModelOptions(props);\n\n  const { relatedModel } = relatedModelOptions;\n\n  const errorMessage = relatedModel.error?.message;\n  const isLoading = relatedModel.fetching;\n\n  const selectedRecords = useMemo(() => {\n    return (records ?? []).filter((value: { _unlink?: string }) => !(\"_unlink\" in value && value._unlink));\n  }, [records]);\n\n  const onRemoveRecord = useCallback(\n    (record: Record<string, any>) => {\n      const index = records.findIndex((value) => value.id === record.id);\n\n      if (index < 0) {\n        return;\n      }\n\n      if (\"_link\" in record) {\n        remove(index);\n      } else {\n        update(index, {\n          ...record,\n          _unlink: { id: record.id, inverseFieldApiIdentifier },\n        });\n      }\n    },\n    [inverseFieldApiIdentifier, records, remove, update]\n  );\n\n  const onSelectRecord = useCallback(\n    (record: Record<string, any>) => {\n      const index = (records ?? []).findIndex((value) => value.id === record.id);\n\n      if (index >= 0) {\n        const value = records[index];\n        if (\"_unlink\" in value && value._unlink) {\n          const { _unlink, ...rest } = value;\n          update(index, rest);\n        } else {\n          onRemoveRecord(record);\n        }\n      } else {\n        append({\n          ...record,\n          _link: record.id,\n        });\n      }\n    },\n    [records, onRemoveRecord, update, append]\n  );\n\n  return {\n    fieldMetadata,\n    relatedModelOptions,\n    selectedRecords,\n    errorMessage,\n    isLoading,\n    onSelectRecord,\n    onRemoveRecord,\n  };\n};\n"]}