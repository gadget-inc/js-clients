{"version":3,"file":"useRelatedModel.js","sourceRoot":"","sources":["../../../../src/auto/hooks/useRelatedModel.tsx"],"names":[],"mappings":"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","sourcesContent":["import { assert, type FieldSelection } from \"@gadgetinc/api-client-core\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { FieldType } from \"../../metadata.js\";\nimport { type RecordIdentifier } from \"../../use-action-form/types.js\";\nimport { useDebouncedSearch } from \"../../useDebouncedSearch.js\";\nimport { useFindMany } from \"../../useFindMany.js\";\nimport { sortByProperty, uniqByProperty } from \"../../utils.js\";\nimport { useAutoFormMetadata } from \"../AutoFormContext.js\";\nimport {\n  getRecordLabelObject,\n  type AutoRelationshipFormProps,\n  type DisplayedRecordOption,\n  type OptionLabel,\n  type RecordFilter,\n  type RecordLabel,\n} from \"../interfaces/AutoRelationshipInputProps.js\";\nimport type { RelationshipFieldConfig } from \"../interfaces/RelationshipFieldConfig.js\";\nimport { useFieldMetadata } from \"./useFieldMetadata.js\";\nimport { useModelManager } from \"./useModelManager.js\";\n\nexport const optionRecordsToLoadCount = 25;\nexport const selectedRecordsToLoadCount = 25;\n\nconst useRelatedModelRecords = (props: { field: string; optionLabel?: OptionLabel; recordFilter?: RecordFilter }) => {\n  const { field } = props;\n  const { metadata } = useFieldMetadata(field);\n  const { findBy } = useAutoFormMetadata();\n\n  const isHasManyField = metadata.configuration.fieldType === FieldType.HasMany;\n  const relationshipFieldConfig = metadata.configuration as RelationshipFieldConfig;\n\n  const relatedModelApiIdentifier = relationshipFieldConfig.relatedModel?.apiIdentifier;\n  const relatedModelNamespace = relationshipFieldConfig.relatedModel?.namespace;\n  const relatedModelInverseFieldApiId =\n    \"inverseField\" in relationshipFieldConfig ? relationshipFieldConfig.inverseField?.apiIdentifier : undefined;\n\n  const relatedModelRecords = useAllRelatedModelRecords({\n    relatedModel: { apiIdentifier: relatedModelApiIdentifier!, namespace: relatedModelNamespace },\n\n    filter:\n      props?.recordFilter ??\n      (isHasManyField\n        ? omitRelatedModelRecordsAssociatedWithOtherRecords({ enabled: false, relatedModelInverseFieldApiId, findBy })\n        : undefined),\n  });\n\n  return {\n    relatedModelRecords,\n  };\n};\n\nconst omitRelatedModelRecordsAssociatedWithOtherRecords = (props: {\n  enabled: boolean;\n  relatedModelInverseFieldApiId?: string;\n  findBy?: RecordIdentifier;\n}) => {\n  const { enabled, relatedModelInverseFieldApiId, findBy } = props;\n\n  if (!enabled || !relatedModelInverseFieldApiId) {\n    // Show all related model records\n    // This allows the current record to steal related records that are already linked\n    return undefined;\n  }\n\n  return {\n    OR: [\n      // Unlinked related model records\n      { [relatedModelInverseFieldApiId + \"Id\"]: { isSet: false } },\n\n      // Related model records linked with the current record\n      ...(findBy !== undefined ? [{ [relatedModelInverseFieldApiId + \"Id\"]: { equals: findBy } }] : []),\n    ],\n  };\n};\n\nexport const useRecordLabelObjectFromProps = (props: Pick<AutoRelationshipFormProps, \"field\" | \"recordLabel\">) => {\n  const recordLabelObject = getRecordLabelObject(props.recordLabel);\n  const primaryLabel = useOptionLabelForField(props.field, recordLabelObject?.primary);\n  return { ...recordLabelObject, primary: primaryLabel };\n};\n\nexport const useOptionLabelForField = (field: string, optionLabel?: OptionLabel): OptionLabel => {\n  const { metadata } = useFieldMetadata(field);\n  const relationshipFieldConfig = metadata.configuration as RelationshipFieldConfig;\n\n  return assert(\n    optionLabel ?? relationshipFieldConfig.relatedModel?.defaultDisplayField.apiIdentifier,\n    \"Option label is required for relationships\"\n  );\n};\n\nexport const useRelatedModelOptions = (props: Omit<AutoRelationshipFormProps, \"children\" | \"label\">) => {\n  const { field } = props;\n\n  const recordLabel = getRecordLabelObject(props.recordLabel);\n\n  const optionLabel = useOptionLabelForField(field, recordLabel?.primary);\n  const { relatedModelRecords } = useRelatedModelRecords(props);\n\n  const { relatedModel, pagination, search } = relatedModelRecords;\n\n  const getOptions = () => {\n    const options = uniqByProperty(\n      getRecordsAsOptions(relatedModel.records, {\n        primary: optionLabel,\n        secondary: recordLabel?.secondary,\n        tertiary: recordLabel?.tertiary,\n      }),\n      \"id\"\n    );\n\n    return options as ReturnType<typeof getRecordsAsOptions>;\n  };\n\n  const [options, setOptions] = useState<ReturnType<typeof getRecordsAsOptions>>(getOptions());\n  const recordIds = getRecordIdsAsString(relatedModel.records);\n\n  useEffect(() => {\n    if (relatedModel.fetching) {\n      return;\n    }\n\n    setOptions(getOptions());\n  }, [relatedModel.fetching, recordIds]);\n\n  return {\n    options,\n    searchFilterOptions: options.filter((option) => {\n      const optionAsString =\n        typeof option.primary === \"string\"\n          ? option.primary.toLowerCase()\n          : React.isValidElement(option.primary)\n          ? JSON.stringify(option.primary.props).toLowerCase()\n          : \"\";\n\n      return search.value ? optionAsString.includes(search.value.toLowerCase()) : true;\n    }),\n    relatedModel,\n    pagination,\n    search,\n  };\n};\n\nconst getRecordLabel = (record: Record<string, any>, optionLabel: OptionLabel): React.ReactNode =>\n  typeof optionLabel === \"string\"\n    ? record[optionLabel] // Related model field API id\n    : Array.isArray(optionLabel)\n    ? optionLabel.map((fieldName) => record[fieldName]).join(\" \")\n    : optionLabel({ record }); // Callback on the whole related model record\n\nconst getRecordIdsAsString = (records?: { map: (mapperFunction: (record: { id: string }) => string) => string[] }) =>\n  records\n    ?.map((record) => record.id)\n    .sort()\n    .join(\",\");\n\nexport const getRecordAsOption = (record: Record<string, any>, recordLabel: RecordLabel): DisplayedRecordOption => {\n  const { primary, secondary, tertiary } = recordLabel;\n  return {\n    id: record.id as string,\n    primary: getRecordLabel(record, primary ?? \"id\"),\n    secondary: secondary ? getRecordLabel(record, secondary) : undefined,\n    tertiary: tertiary ? getRecordLabel(record, tertiary) : undefined,\n  };\n};\n\nexport const getRecordsAsOptions = (records: Record<string, any>[], recordLabel: RecordLabel) => {\n  return records?.map((record: Record<string, any>) => getRecordAsOption(record, recordLabel)) ?? [];\n};\n\nconst useAllRelatedModelRecords = (props: {\n  optionLabel?: OptionLabel;\n  filter?: Record<string, any>;\n  relatedModel: { apiIdentifier: string; namespace?: string[] | string | null };\n}) => {\n  const { optionLabel, relatedModel } = props;\n\n  let optionLabelSelection: FieldSelection | undefined = undefined;\n\n  if (optionLabel && typeof optionLabel === \"string\") {\n    optionLabelSelection = { id: true, [optionLabel]: true };\n  } else if (optionLabel && Array.isArray(optionLabel)) {\n    optionLabelSelection = optionLabel.reduce(\n      (acc, fieldName) => {\n        acc[fieldName] = true;\n        return acc;\n      },\n      { id: true } as FieldSelection\n    );\n  }\n\n  const relatedModelManager = useModelManager(relatedModel);\n\n  const [loadedRecords, setLoadedRecords] = useState<any[]>([]);\n  const [paginationPage, setPaginationPage] = useState<any>(undefined);\n  const {\n    value: searchValue,\n    debouncedValue: debouncedSearchValue,\n    set: setSearchValue,\n  } = useDebouncedSearch({\n    debounceMilliseconds: 400,\n  });\n\n  const [{ data: newlyFetchedRecords, fetching, error }, _refetch] = useFindMany(relatedModelManager as any, {\n    first: optionRecordsToLoadCount,\n    ...(props.filter && { filter: props.filter }),\n    ...(paginationPage && { after: paginationPage }),\n    ...(debouncedSearchValue && { search: debouncedSearchValue }),\n    ...(optionLabelSelection && { select: optionLabelSelection }),\n  });\n\n  const hasNextPage = !!newlyFetchedRecords?.hasNextPage;\n\n  const clearPagination = useCallback(() => setPaginationPage(undefined), []);\n\n  const loadNextPage = useCallback(() => {\n    const canFetchNextPage =\n      newlyFetchedRecords && newlyFetchedRecords.length >= optionRecordsToLoadCount && hasNextPage && newlyFetchedRecords.endCursor;\n\n    if (canFetchNextPage) {\n      setPaginationPage(newlyFetchedRecords.endCursor);\n    }\n  }, [newlyFetchedRecords]);\n\n  const setSearch = useCallback((search?: string) => {\n    clearPagination();\n    setSearchValue(search ?? \"\");\n  }, []);\n\n  /**\n   * This useEffect appends the newly fetched records to the list of records that have already been loaded\n   * `numberOfRecordsToLoad` are retrieved per `useFindMany` call\n   */\n  useEffect(() => {\n    if (fetching || !newlyFetchedRecords) {\n      return;\n    }\n\n    const allOptions = [\n      ...loadedRecords, // Maintain existing options\n      ...newlyFetchedRecords.map((record) => record),\n    ];\n\n    const updatedUniqueOptions = uniqByProperty(allOptions, \"id\");\n    const sortedUniqueOptions = sortByProperty(updatedUniqueOptions, \"id\", { transform: (value: any) => parseInt(value) });\n\n    setLoadedRecords(sortedUniqueOptions);\n  }, [paginationPage, searchValue, fetching]);\n\n  return {\n    relatedModel: {\n      records: loadedRecords,\n      error,\n      fetching: fetching || searchValue !== debouncedSearchValue,\n    },\n\n    pagination: {\n      clearPagination,\n      loadNextPage,\n      hasNextPage,\n    },\n\n    search: {\n      value: searchValue,\n      set: setSearch,\n    },\n  };\n};\n"]}