{"version":3,"file":"useFieldMetadata.js","sourceRoot":"","sources":["../../../../src/auto/hooks/useFieldMetadata.tsx"],"names":[],"mappings":";;;AAAA,gDAA+C;AAC/C,8DAA4D;AAErD,MAAM,gBAAgB,GAAG,CAAC,kBAA0B,EAAE,EAAE;IAC7D,MAAM,EAAE,QAAQ,EAAE,gBAAgB,EAAE,GAAG,IAAA,wCAAmB,GAAE,CAAC;IAC7D,MAAM,MAAM,GAAG,IAAA,2BAAa,EAAC,gBAAgB,EAAE,EAAE,CAAC,CAAC;IACnD,MAAM,mBAAmB,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,aAAa,KAAK,kBAAkB,CAAC,CAAC;IAElG,IAAI,CAAC,mBAAmB,EAAE,CAAC;QACzB,MAAM,IAAI,KAAK,CAAC,SAAS,kBAAkB,wBAAwB,CAAC,CAAC;IACvE,CAAC;IACD,MAAM,IAAI,GAAG,mBAAmB,CAAC,CAAC,CAAC,CAAC;IACpC,MAAM,aAAa,GAAG,mBAAmB,CAAC,CAAC,CAAC,CAAC;IAE7C,OAAO,EAAE,IAAI,EAAE,aAAa,EAAE,CAAC;AACjC,CAAC,CAAC;AAZW,QAAA,gBAAgB,oBAY3B","sourcesContent":["import { useFormFields } from \"../AutoForm.js\";\nimport { useAutoFormMetadata } from \"../AutoFormContext.js\";\n\nexport const useFieldMetadata = (fieldApiIdentifier: string) => {\n  const { metadata: autoFormMetadata } = useAutoFormMetadata();\n  const fields = useFormFields(autoFormMetadata, {});\n  const targetFieldMetadata = fields.find((field) => field[1].apiIdentifier === fieldApiIdentifier);\n\n  if (!targetFieldMetadata) {\n    throw new Error(`Field ${fieldApiIdentifier} not found in metadata`);\n  }\n  const path = targetFieldMetadata[0];\n  const fieldMetadata = targetFieldMetadata[1];\n\n  return { path, fieldMetadata };\n};\n"]}