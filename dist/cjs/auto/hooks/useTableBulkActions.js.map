{"version":3,"file":"useTableBulkActions.js","sourceRoot":"","sources":["../../../../src/auto/hooks/useTableBulkActions.tsx"],"names":[],"mappings":"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","sourcesContent":["import React, { useMemo } from \"react\";\nimport deepEqual from \"react-fast-compare\";\nimport { ActionCallback, TableOptions } from \"../../useTableUtils/types.js\";\nimport { humanizeCamelCase } from \"../../utils.js\";\n\nexport type ModelActionDetails =\n  | {\n      isGadgetAction: true;\n      apiIdentifier: string;\n      isDeleter: boolean;\n      isBulk: boolean;\n      acceptsModelInput: boolean;\n      variables?: any;\n    }\n  | {\n      isGadgetAction: false;\n      apiIdentifier: string;\n      render?: (recordIds: string[], records: any[]) => React.ReactNode;\n    };\n\nexport type BulkActionOption = {\n  humanizedName: string;\n  selectModelAction: () => void;\n  apiIdentifier: string;\n  callback?: (recordIds: string[], records: any[]) => any;\n};\n\nexport const useTableBulkActions = (props: {\n  model: any;\n  actions: TableOptions[\"actions\"];\n  excludeActions: TableOptions[\"excludeActions\"];\n}) => {\n  const { model, actions, excludeActions } = props;\n\n  if (actions && excludeActions) {\n    throw new Error(\"Cannot have both actions and excludeActions in the same table\");\n  }\n\n  const [selectedModelActionDetails, setSelectedModelActionDetails] = React.useState<ModelActionDetails | undefined>(undefined);\n  const gadgetModelActionsAsBulkActionOptions = getModelActionsForTableAsBulkActionOptions({ model, setSelectedModelActionDetails });\n\n  const bulkActionOptions: BulkActionOption[] = useMemo(() => {\n    if (excludeActions) {\n      return getValidateActionsWithExclude(excludeActions, gadgetModelActionsAsBulkActionOptions);\n    }\n\n    if (actions) {\n      return getValidatedIncludedActions(actions, gadgetModelActionsAsBulkActionOptions, setSelectedModelActionDetails);\n    }\n\n    return gadgetModelActionsAsBulkActionOptions; // Default - No `actions` or `excludeActions` provided\n  }, [gadgetModelActionsAsBulkActionOptions, actions, excludeActions]);\n\n  return { selectedModelActionDetails, bulkActionOptions };\n};\n\n/**\n * Returns a list of BulkActionOption objects for given model\n */\nconst getModelActionsForTableAsBulkActionOptions = (props: {\n  model: any;\n  setSelectedModelActionDetails: (value: ModelActionDetails) => void;\n}) => {\n  const { model, setSelectedModelActionDetails } = props;\n  const allModelActionsDetails = getModelActionsForTable({ model });\n\n  return allModelActionsDetails\n    .filter(isBulkActionThatOnlyTakesIds) // Only bulk actions that accept only IDs are currently supported\n    .map((actionDetails) => ({\n      humanizedName: humanizeCamelCase(removeBulkPrefix(actionDetails.apiIdentifier)),\n      selectModelAction: () => setSelectedModelActionDetails(actionDetails), // To open the corresponding modal\n      apiIdentifier: lowercaseFirstChar(removeBulkPrefix(actionDetails.apiIdentifier)), // `bulk` prefix removed\n    }));\n};\n\nconst isBulkActionThatOnlyTakesIds = (actionDetails: ModelActionDetails) =>\n  actionDetails.isGadgetAction &&\n  actionDetails.isBulk &&\n  !actionDetails.acceptsModelInput && // Accepting modelInput guarantees that the action accepts more than just IDs\n  deepEqual(actionDetails.variables, OnlyIdsAcceptedInputVariables);\n\n// Expected variables for supported bulk actions\nconst OnlyIdsAcceptedInputVariables = {\n  ids: {\n    required: true,\n    type: \"[GadgetID!]\",\n  },\n};\n\n/**\n * Returns a list of ModelActionDetail objects for given model\n */\nconst getModelActionsForTable = (props: { model: any }) => {\n  const modelActions: ModelActionDetails[] = [];\n\n  const modelPrototype = Object.getPrototypeOf(props.model);\n  for (const key of Object.keys(modelPrototype)) {\n    const isAction = modelPrototype[key].type === \"action\";\n    if (isAction) {\n      modelActions.push(modelPrototype[key]);\n    }\n  }\n\n  return modelActions.map(\n    (func: any): ModelActionDetails => ({\n      apiIdentifier: func.functionName,\n      isDeleter: func.isDeleter,\n      isBulk: func.isBulk,\n      acceptsModelInput: func.acceptsModelInput,\n      variables: func.variables,\n      isGadgetAction: true,\n    })\n  );\n};\n\nfunction getValidateActionsWithExclude(excludeActions: string[], gadgetModelActionsAsBulkActionOptions: BulkActionOption[]) {\n  for (const excludedAction of excludeActions) {\n    if (!gadgetModelActionsAsBulkActionOptions.find((action) => action.apiIdentifier === excludedAction)) {\n      throw new Error(`Excluded action '${excludedAction}' not found in model`);\n    }\n  }\n  return gadgetModelActionsAsBulkActionOptions.filter((action) => !excludeActions.includes(action.apiIdentifier));\n}\n\nfunction getValidatedIncludedActions(\n  actions: (string | ActionCallback)[],\n  gadgetModelActionsAsBulkActionOptions: BulkActionOption[],\n  setSelectedModelActionDetails: React.Dispatch<React.SetStateAction<ModelActionDetails | undefined>>\n) {\n  const bulkActions = [];\n  for (const action of actions) {\n    if (typeof action === \"string\") {\n      // Ensure that this is a real action name\n      const modelAction = gadgetModelActionsAsBulkActionOptions.find((actionOption) => actionOption.apiIdentifier === action);\n      if (!modelAction) {\n        throw new Error(`Action '${action}' not found in model`);\n      }\n      bulkActions.push(modelAction);\n    } else {\n      // Custom callback/renderer\n      validateCallbackXorRender(action);\n      const customCallbackModelActionDetails = {\n        isGadgetAction: false,\n        apiIdentifier: action.label,\n        render: \"render\" in action ? action.render ?? undefined : undefined,\n      } as const;\n      bulkActions.push({\n        humanizedName: action.label,\n        selectModelAction: () => setSelectedModelActionDetails(customCallbackModelActionDetails),\n        callback: \"callback\" in action ? action.callback ?? undefined : undefined,\n        apiIdentifier: action.label,\n      });\n    }\n  }\n  return bulkActions;\n}\n\n/**\n * Ensures that the action has either a callback or a render, but not both\n */\nconst validateCallbackXorRender = (action: ActionCallback) => {\n  const label = action.label;\n\n  if (\"callback\" in action && \"render\" in action) {\n    throw new Error(`Cannot have both callback and render in action with label: \"${label}\"`);\n  }\n\n  if (!(\"callback\" in action) && !(\"render\" in action)) {\n    throw new Error(`Missing required property \"callback\" | \"render\" in action with label: \"${label}\"`);\n  }\n};\n\nconst removeBulkPrefix = (actionName: string) => (actionName.startsWith(\"bulk\") ? actionName.slice(4) : actionName);\n\nconst lowercaseFirstChar = (input: string) => {\n  return input.length === 0 ? \"\" : `${input.charAt(0).toLowerCase()}${input.slice(1)}`;\n};\n"]}