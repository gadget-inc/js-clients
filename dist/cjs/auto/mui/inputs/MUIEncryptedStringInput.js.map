{"version":3,"file":"MUIEncryptedStringInput.js","sourceRoot":"","sources":["../../../../../src/auto/mui/inputs/MUIEncryptedStringInput.tsx"],"names":[],"mappings":";;;;AAAA,4CAA2D;AAC3D,uDAAwC;AAExC,+DAAyD;AAElD,MAAM,uBAAuB,GAAG,CACrC,KAG2B,EAC3B,EAAE;IACF,MAAM,CAAC,OAAO,EAAE,UAAU,CAAC,GAAG,IAAA,gBAAQ,EAAC,KAAK,CAAC,CAAC;IAC9C,MAAM,oBAAoB,GAAG,8BAAC,qBAAU,IAAC,OAAO,EAAE,GAAG,EAAE,CAAC,UAAU,CAAC,CAAC,OAAO,CAAC,IAAG,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAc,CAAC;IAEpH,OAAO,8BAAC,sCAAgB,IAAC,UAAU,EAAE,EAAE,YAAY,EAAE,oBAAoB,EAAE,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,UAAU,KAAM,KAAK,GAAI,CAAC;AAClI,CAAC,CAAC;AAVW,QAAA,uBAAuB,2BAUlC","sourcesContent":["import { IconButton, TextFieldProps } from \"@mui/material\";\nimport React, { useState } from \"react\";\nimport type { Control } from \"react-hook-form\";\nimport { MUIAutoTextInput } from \"./MUIAutoTextInput.js\";\n\nexport const MUIEncryptedStringInput = (\n  props: {\n    field: string; // The field API identifier\n    control?: Control<any>;\n  } & Partial<TextFieldProps>\n) => {\n  const [isShown, setIsShown] = useState(false);\n  const showHideToggleButton = <IconButton onClick={() => setIsShown(!isShown)}>{isShown ? `üîí` : `üëÅÔ∏è`}</IconButton>;\n\n  return <MUIAutoTextInput InputProps={{ endAdornment: showHideToggleButton }} type={isShown ? \"text\" : \"password\"} {...props} />;\n};\n"]}