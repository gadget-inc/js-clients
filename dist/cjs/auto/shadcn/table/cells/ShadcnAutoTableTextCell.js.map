{"version":3,"file":"ShadcnAutoTableTextCell.js","sourceRoot":"","sources":["../../../../../../src/auto/shadcn/table/cells/ShadcnAutoTableTextCell.tsx"],"names":[],"mappings":";;;;AAAA,0DAA0B;AAC1B,0EAAoE;AAEpE,uCAAqC;AAO9B,MAAM,2BAA2B,GAAG,CAAC,QAAyC,EAAE,EAAE;IACvF,MAAM,EAAE,KAAK,EAAE,eAAe,EAAE,OAAO,EAAE,cAAc,EAAE,cAAc,EAAE,GAAG,QAAQ,CAAC;IAErF,SAAS,uBAAuB,CAAC,KAAqB;QACpD,MAAM,EAAE,KAAK,EAAE,GAAG,KAAK,CAAC;QACxB,MAAM,gBAAgB,GAAG,OAAO,KAAK,KAAK,QAAQ,CAAC,CAAC,CAAC,CAAC,UAAU,IAAI,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,KAAK,EAAE,CAAC;QAEjI,MAAM,EAAE,YAAY,EAAE,eAAe,EAAE,YAAY,EAAE,GAAG,IAAA,oCAAe,GAAE,CAAC;QAE1E,OAAO,CACL,uCAAK,KAAK,EAAE,EAAE,QAAQ,EAAE,MAAM,EAAE,EAAE,GAAG,EAAE,YAAY;YACjD,8BAAC,eAAe;gBACd,8BAAC,OAAO;oBACL,YAAY,IAAI,8BAAC,cAAc,IAAC,SAAS,EAAC,wCAAwC,IAAE,gBAAgB,CAAkB;oBACvH,8BAAC,cAAc,IAAC,SAAS,EAAC,mCAAmC;wBAC3D,8BAAC,KAAK;4BACJ,wCAAM,GAAG,EAAE,eAAe,IAAG,gBAAgB,CAAQ,CAC/C,CACO,CACT,CACM,CACd,CACP,CAAC;IACJ,CAAC;IAED,OAAO,uBAAuB,CAAC;AACjC,CAAC,CAAC;AA1BW,QAAA,2BAA2B,+BA0BtC","sourcesContent":["import React from \"react\";\nimport { useIsOverflowed } from \"../../../hooks/useIsOverflowed.js\";\nimport type { ShadcnElements } from \"../../elements.js\";\nimport \"./ShadcnAutoTableStyles.css\";\n\nexport type ShadcnAutoTableTextCellElements = Pick<\n  ShadcnElements,\n  \"Label\" | \"TooltipProvider\" | \"Tooltip\" | \"TooltipTrigger\" | \"TooltipContent\"\n>;\n\nexport const makeShadcnAutoTableTextCell = (elements: ShadcnAutoTableTextCellElements) => {\n  const { Label, TooltipProvider, Tooltip, TooltipTrigger, TooltipContent } = elements;\n\n  function ShadcnAutoTableTextCell(props: { value: any }) {\n    const { value } = props;\n    const stringifiedValue = typeof value === \"object\" ? (\"markdown\" in value ? value.markdown : JSON.stringify(value)) : `${value}`;\n\n    const { isOverflowed, childElementRef, containerRef } = useIsOverflowed();\n\n    return (\n      <div style={{ maxWidth: \"100%\" }} ref={containerRef}>\n        <TooltipProvider>\n          <Tooltip>\n            {isOverflowed && <TooltipContent className=\"shadcn-auto-table-cell-tooltip-content\">{stringifiedValue}</TooltipContent>}\n            <TooltipTrigger className=\"shadcn-auto-table-tooltip-trigger\">\n              <Label>\n                <span ref={childElementRef}>{stringifiedValue}</span>\n              </Label>\n            </TooltipTrigger>\n          </Tooltip>\n        </TooltipProvider>\n      </div>\n    );\n  }\n\n  return ShadcnAutoTableTextCell;\n};\n"]}