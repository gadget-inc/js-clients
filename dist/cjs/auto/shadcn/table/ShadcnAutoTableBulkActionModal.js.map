{"version":3,"file":"ShadcnAutoTableBulkActionModal.js","sourceRoot":"","sources":["../../../../../src/auto/shadcn/table/ShadcnAutoTableBulkActionModal.tsx"],"names":[],"mappings":"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","sourcesContent":["import React, { useMemo } from \"react\";\nimport {\n  getRunActionConfirmationText,\n  useAutoTableBulkActionModal,\n  useGadgetBulkActionModalContent,\n  type AutoBulkActionModal,\n  type GadgetBulkActionModalContentProps,\n} from \"../../hooks/useTableBulkActions.js\";\nimport { type ShadcnElements } from \"../elements.js\";\nimport { makeShadcnAutoLoadingIndicator } from \"./ShadcnAutoLoadingIndicator.js\";\n\nexport const makeShadcnAutoTableBulkActionModal = (elements: ShadcnElements) => {\n  const { Label, Button, Alert, Dialog, DialogContent, DialogDescription, DialogHeader, DialogTitle } = elements;\n\n  const LoadingIndicator = makeShadcnAutoLoadingIndicator(elements);\n\n  function ShadcnAutoTableBulkActionModal(props: AutoBulkActionModal) {\n    const { model, modelActionDetails, ids } = props;\n    const { actionIsLoaded, closeAndClear, isBulkGadgetAction, modalTitle, showModal } = useAutoTableBulkActionModal(props);\n\n    if (!actionIsLoaded || !isBulkGadgetAction || !modelActionDetails) {\n      return null;\n    }\n\n    return (\n      <>\n        <Dialog\n          open={showModal}\n          onOpenChange={(open) => {\n            if (!open) {\n              closeAndClear();\n            }\n          }}\n        >\n          <DialogContent>\n            <DialogHeader>\n              <DialogTitle>{modalTitle}</DialogTitle>\n            </DialogHeader>\n            <GadgetBulkActionModalContent\n              model={model}\n              modelActionDetails={modelActionDetails}\n              actionLabel={modalTitle}\n              ids={ids}\n              close={closeAndClear}\n            />\n          </DialogContent>\n        </Dialog>\n      </>\n    );\n  }\n\n  function GadgetBulkActionModalContent(props: GadgetBulkActionModalContentProps) {\n    const { ids, close } = props;\n\n    const { hasRun, actionResultMessage, fetching, hasError, runAction } = useGadgetBulkActionModalContent(props);\n\n    return (\n      <>\n        <DialogDescription>\n          {fetching && (\n            <div className=\"flex items-center justify-center min-h-[32px]\">\n              <LoadingIndicator />\n            </div>\n          )}\n          {!fetching &&\n            (hasRun ? (\n              <Alert variant={hasError ? \"destructive\" : \"default\"}>{actionResultMessage}</Alert>\n            ) : (\n              <RunActionConfirmationText count={ids.length} />\n            ))}\n        </DialogDescription>\n        <DialogDescription className=\"flex flex-row gap-2 ml-auto\">\n          <Button onClick={close} variant=\"secondary\">\n            Close\n          </Button>\n          {((!hasError && !hasRun) || fetching) && (\n            <Button onClick={runAction} disabled={fetching}>\n              Run\n            </Button>\n          )}\n        </DialogDescription>\n      </>\n    );\n  }\n\n  function RunActionConfirmationText(props: { count: number }) {\n    const { count } = props;\n    return useMemo(() => <Label>{getRunActionConfirmationText(count)}</Label>, [count]);\n  }\n\n  return ShadcnAutoTableBulkActionModal;\n};\n"]}