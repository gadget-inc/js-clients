{"version":3,"file":"accordionTypes.js","sourceRoot":"","sources":["../../../../../src/auto/shadcn/types/accordionTypes.tsx"],"names":[],"mappings":"","sourcesContent":["import { HTMLAttributes } from \"react\";\n\nexport interface AccordionProps {\n  /**\n   * Render the component as a child rather than wrapping it in its own element.\n   * @default false\n   */\n  asChild?: boolean;\n  /**\n   * Whether the component is collapsible.\n   * @default false\n   */\n  collapsible?: boolean;\n  /**\n   * Whether the component is disabled.\n   * @default false\n   */\n  disabled?: boolean;\n  /**\n   * Direction: usually \"ltr\" or \"rtl\".\n   * @default \"ltr\"\n   */\n  dir?: \"ltr\" | \"rtl\";\n  /**\n   * Orientation of the component.\n   * @default \"vertical\"\n   */\n  orientation?: \"vertical\" | \"horizontal\";\n\n  children?: React.ReactNode;\n\n  className?: string;\n}\n\nexport interface AccordionItemProps {\n  asChild?: boolean;\n  disabled?: boolean;\n  value: string;\n  className?: string;\n  children?: React.ReactNode;\n}\n\n// For the single-value variant\nexport interface AccordionSingleProps extends AccordionProps {\n  /**\n   * A required property that should be one of the enum values.\n   */\n  type: \"single\"; // adjust the enum values as needed\n  /**\n   * The current value.\n   */\n  value?: string;\n  /**\n   * The default value.\n   */\n  defaultValue?: string;\n  /**\n   * Called when the value changes.\n   */\n  onValueChange?: (value: string) => void;\n}\n\n// For the multiple-value variant\nexport interface AccordionMultipleProps extends AccordionProps {\n  type: \"multiple\"; // adjust as needed\n  /**\n   * The current value as an array of strings.\n   */\n  value?: string[];\n  /**\n   * The default value as an array of strings.\n   */\n  defaultValue?: string[];\n  /**\n   * Called when the value changes.\n   */\n  onValueChange?: (value: string[]) => void;\n}\n\nexport interface AccordionTriggerProps extends HTMLAttributes<HTMLButtonElement> {\n  asChild?: boolean;\n}\n\nexport interface AccordionContentProps extends HTMLAttributes<HTMLDivElement> {\n  asChild?: boolean;\n  forceMount?: true | undefined;\n}\n\n// The component can accept either single or multiple values.\nexport type AccordionComponentProps = AccordionSingleProps | AccordionMultipleProps;\n"]}