{"version":3,"file":"ShadcnAutoComboInput.js","sourceRoot":"","sources":["../../../../../src/auto/shadcn/inputs/ShadcnAutoComboInput.tsx"],"names":[],"mappings":"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","sourcesContent":["import React, { useRef, useState } from \"react\";\nimport type { FieldMetadata } from \"../../../metadata.js\";\nimport { useClickOutside } from \"../../../useClickOutside.js\";\nimport { useIntersectionObserver } from \"../../../useIntersectionObserver.js\";\nimport type { AutoRelationshipInputProps } from \"../../interfaces/AutoRelationshipInputProps.js\";\nimport { ShadcnRequired } from \"../ShadcnRequired.js\";\nimport type { ShadcnElements } from \"../elements.js\";\nimport type { RelatedModelOptionsProps } from \"./relationships/RelatedModelOption.js\";\nimport { makeRelatedModelOption } from \"./relationships/RelatedModelOption.js\";\ninterface ShadcnComboInputProps extends AutoRelationshipInputProps, RelatedModelOptionsProps {\n  selectedRecordTag: React.JSX.Element | null;\n  path: string;\n  id?: string; // This is used to set the id of the input field\n  metadata: FieldMetadata;\n  hideLabel?: boolean;\n  allowMultiple?: boolean;\n  allowOther?: boolean;\n  onAddExtraOption?: (value: string) => void;\n  formatOptionText?: (option: string) => React.ReactNode;\n  emptyMessage?: string;\n  defaultValue?: string;\n  onScrolledToBottom?: () => void;\n  willLoadMoreOptions?: boolean;\n  onChange?: (value: string) => void;\n}\n\nexport const makeShadcnAutoComboInput = ({\n  Command,\n  CommandInput,\n  Label,\n  CommandItem,\n  CommandList,\n  CommandLoading,\n  CommandEmpty,\n  CommandGroup,\n  Checkbox,\n  ScrollArea,\n}: Pick<\n  ShadcnElements,\n  | \"Command\"\n  | \"CommandInput\"\n  | \"Label\"\n  | \"CommandItem\"\n  | \"CommandList\"\n  | \"CommandEmpty\"\n  | \"CommandGroup\"\n  | \"Checkbox\"\n  | \"ScrollArea\"\n  | \"CommandLoading\"\n>) => {\n  const { RelatedModelOption } = makeRelatedModelOption({\n    CommandItem,\n    CommandList,\n    CommandEmpty,\n    ScrollArea,\n    CommandGroup,\n    Checkbox,\n    Label,\n    CommandLoading,\n  });\n\n  function ShadcnAutoComboInput(props: ShadcnComboInputProps) {\n    const inputRef = useRef<HTMLInputElement>(null);\n    const outsideBoxRef = useRef<HTMLDivElement>(null);\n    const sentinelRef = useIntersectionObserver(\n      () => {\n        props.onScrolledToBottom?.();\n      },\n      outsideBoxRef,\n      { threshold: 1.0 }\n    );\n    const [open, setOpen] = useState(false);\n    const [inputValue, setInputValue] = useState(props.defaultValue || \"\");\n    const id = props.id || `${props.path}-input`;\n    const inputLabel = props.label || props.metadata.name;\n\n    const requiredIndicator = props.metadata.requiredArgumentForInput ? <ShadcnRequired>*</ShadcnRequired> : null;\n\n    useClickOutside(outsideBoxRef, () => {\n      if (open) {\n        setOpen(false);\n      }\n    });\n\n    return (\n      <div ref={outsideBoxRef}>\n        {!props.hideLabel && (\n          <Label htmlFor={id}>\n            {inputLabel} {requiredIndicator}\n          </Label>\n        )}\n        <div className={`relative ${open ? \"ring-1 ring-ring rounded-md border\" : \"border rounded-md\"}`}>\n          {props.selectedRecordTag && <div className=\"py-2 px-2 pt-2 pb-1\">{props.selectedRecordTag}</div>}\n          <Command className=\"overflow-visible z-50\">\n            <CommandInput\n              name={props.path}\n              ref={inputRef}\n              data-testid={id}\n              value={inputValue}\n              onValueChange={(value: string) => {\n                setInputValue(value);\n                props.onChange?.(value);\n              }}\n              onFocus={() => setOpen(true)}\n              placeholder={\"Search\"}\n              className=\"ml-2 bg-transparent outline-none placeholder:text-muted-foreground flex-1\"\n            />\n            {open && (\n              <>\n                <RelatedModelOption\n                  onAddExtraOption={props.onAddExtraOption}\n                  isLoading={props.isLoading}\n                  errorMessage={props.errorMessage}\n                  options={props.options}\n                  records={props.records}\n                  actions={props.actions}\n                  onSelect={props.onSelect}\n                  checkSelected={props.checkSelected}\n                  allowMultiple={props.allowMultiple}\n                  renderOption={props.renderOption}\n                  allowOther={props.allowOther}\n                  searchValue={inputValue}\n                  setSearchValue={setInputValue}\n                  formatOptionText={props.formatOptionText}\n                  emptyMessage={props.emptyMessage ? `${props.emptyMessage} \"${inputValue}\"` : undefined}\n                  loadMoreRef={props.willLoadMoreOptions ? sentinelRef : undefined}\n                />\n              </>\n            )}\n          </Command>\n        </div>\n      </div>\n    );\n  }\n\n  return ShadcnAutoComboInput;\n};\n"]}