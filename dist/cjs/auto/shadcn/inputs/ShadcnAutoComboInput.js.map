{"version":3,"file":"ShadcnAutoComboInput.js","sourceRoot":"","sources":["../../../../../src/auto/shadcn/inputs/ShadcnAutoComboInput.tsx"],"names":[],"mappings":"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","sourcesContent":["import React, { useRef, useState } from \"react\";\nimport type { FieldMetadata } from \"../../../metadata.js\";\nimport type { AutoRelationshipInputProps } from \"../../interfaces/AutoRelationshipInputProps.js\";\nimport type { ShadcnElements } from \"../elements.js\";\nimport type { RelatedModelOptionsProps } from \"./relationships/RelatedModelOption.js\";\nimport { makeRelatedModelOption } from \"./relationships/RelatedModelOption.js\";\n\ninterface ShadcnComboInputProps extends AutoRelationshipInputProps, RelatedModelOptionsProps {\n  selectedRecordTag: React.JSX.Element | null;\n  path: string;\n  id?: string; // This is used to set the id of the input field\n  metadata: FieldMetadata;\n  allowMultiple?: boolean;\n  allowOther?: boolean;\n  onAddExtraOption?: (value: string) => void;\n  formatOptionText?: (option: string) => React.ReactNode;\n  emptyMessage?: string;\n  defaultValue?: string;\n}\n\nexport const makeShadcnAutoComboInput = ({\n  Command,\n  CommandInput,\n  Label,\n  CommandItem,\n  CommandList,\n  CommandEmpty,\n  CommandGroup,\n  Checkbox,\n}: Pick<\n  ShadcnElements,\n  \"Command\" | \"CommandInput\" | \"Label\" | \"CommandItem\" | \"CommandList\" | \"CommandEmpty\" | \"CommandGroup\" | \"Checkbox\" | \"CommandGroup\"\n>) => {\n  const RelatedModelOption = makeRelatedModelOption({\n    CommandItem,\n    CommandList,\n    CommandEmpty,\n    CommandGroup,\n    Checkbox,\n    Label,\n  });\n\n  function ShadcnAutoComboInput(props: ShadcnComboInputProps) {\n    const inputRef = useRef<HTMLInputElement>(null);\n    const [open, setOpen] = useState(false);\n    const [inputValue, setInputValue] = useState(props.defaultValue || \"\");\n    const id = props.id || `${props.path}-input`;\n    const inputLabel = props.label || props.metadata.name;\n\n    const requiredIndicator = props.metadata.requiredArgumentForInput ? <span className=\"text-red-500\">*</span> : null;\n\n    return (\n      <div>\n        <Label htmlFor={id}>\n          {inputLabel} {requiredIndicator}\n        </Label>\n        <div className={`relative ${open ? \"ring-1 ring-ring rounded-md border\" : \"border rounded-md\"}`}>\n          {props.selectedRecordTag && <div className=\"py-2 px-2 pt-2 pb-1\">{props.selectedRecordTag}</div>}\n          <Command className=\"overflow-visible z-50 h-[300px]\">\n            <CommandInput\n              name={props.path}\n              ref={inputRef}\n              id={id}\n              value={inputValue}\n              onValueChange={setInputValue}\n              onBlur={() => setOpen(false)}\n              onFocus={() => setOpen(true)}\n              placeholder={\"Search\"}\n              className=\"ml-2 bg-transparent outline-none placeholder:text-muted-foreground flex-1\"\n            />\n            <div className=\"relative\">\n              {open && props.options.length > 0 ? (\n                <div className=\"\">\n                  <RelatedModelOption\n                    onAddExtraOption={props.onAddExtraOption}\n                    isLoading={props.isLoading}\n                    errorMessage={props.errorMessage}\n                    options={props.options}\n                    records={props.records}\n                    onSelect={props.onSelect}\n                    checkSelected={props.checkSelected}\n                    allowMultiple={props.allowMultiple}\n                    renderOption={props.renderOption}\n                    allowOther={props.allowOther}\n                    searchValue={inputValue}\n                    setSearchValue={setInputValue}\n                    formatOptionText={props.formatOptionText}\n                    emptyMessage={props.emptyMessage ? `${props.emptyMessage} \"${inputValue}\"` : \"\"}\n                  />\n                </div>\n              ) : null}\n            </div>\n          </Command>\n        </div>\n      </div>\n    );\n  }\n\n  return ShadcnAutoComboInput;\n};\n"]}