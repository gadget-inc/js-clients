{"version":3,"file":"ShadcnAutoHasManyForm.js","sourceRoot":"","sources":["../../../../../../src/auto/shadcn/inputs/relationships/ShadcnAutoHasManyForm.tsx"],"names":[],"mappings":"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","sourcesContent":["import { PlusCircleIcon } from \"lucide-react\";\nimport React, { useState } from \"react\";\nimport { useFormContext } from \"../../../../useActionForm.js\";\nimport { autoRelationshipForm } from \"../../../AutoInput.js\";\nimport { RelationshipContext, useAutoRelationship, useRelationshipContext } from \"../../../hooks/useAutoRelationship.js\";\nimport { useHasManyController } from \"../../../hooks/useHasManyController.js\";\nimport { getRecordAsOption, useOptionLabelForField } from \"../../../hooks/useRelatedModel.js\";\nimport { useRequiredChildComponentsValidator } from \"../../../hooks/useRequiredChildComponentsValidator.js\";\nimport type { OptionLabel } from \"../../../interfaces/AutoRelationshipInputProps.js\";\nimport type { ShadcnElements } from \"../../elements.js\";\nimport { makeShadcnRenderOptionLabel } from \"../../utils.js\";\n\nexport const makeShadcnAutoHasManyForm = ({\n  Accordion,\n  AccordionContent,\n  AccordionItem,\n  AccordionTrigger,\n  Badge,\n  Button,\n  Label,\n}: Pick<ShadcnElements, \"Accordion\" | \"AccordionContent\" | \"AccordionItem\" | \"AccordionTrigger\" | \"Badge\" | \"Button\" | \"Label\">) => {\n  const renderOptionLabel = makeShadcnRenderOptionLabel({ Label, Badge, Button });\n\n  function ShadcnAutoHasManyForm(props: {\n    field: string;\n    label?: React.ReactNode;\n    children: React.ReactNode;\n    primaryLabel?: OptionLabel;\n    secondaryLabel?: OptionLabel;\n    tertiaryLabel?: OptionLabel;\n  }) {\n    useRequiredChildComponentsValidator(props, \"AutoHasManyForm\");\n    const { metadata } = useAutoRelationship({ field: props.field });\n    const { getValues } = useFormContext();\n\n    const { fieldArray, fieldArrayPath } = useHasManyController({ field: props.field });\n    const { fields, append, remove } = fieldArray;\n    const relationshipContext = useRelationshipContext();\n\n    if (metadata.configuration.__typename !== \"GadgetHasManyConfig\") {\n      throw new Error(\"ShadcnAutoHasManyForm can only be used for HasMany fields\");\n    }\n\n    const modelName = metadata.configuration.relatedModel?.name;\n\n    const primaryLabel = useOptionLabelForField(props.field, props.primaryLabel);\n\n    const [editingIndex, setEditingIndex] = useState<number | null>(null);\n\n    return (\n      <div>\n        <div style={{ marginBottom: \"8px\" }}>{props.label ?? <Label className=\"text-sm font-semibold\">{metadata.name}</Label>}</div>\n        <div>\n          <Accordion\n            type=\"single\"\n            collapsible\n            value={editingIndex !== null ? `${fieldArrayPath}.${editingIndex}` : undefined}\n            className=\"w-full\"\n          >\n            {fields.flatMap((field, idx) => {\n              // since we don't put full data in the field array when we append, we need to\n              // get the value directly from the form state\n              const record = getValues(`${fieldArrayPath}.${idx}`);\n\n              if (!record) {\n                return [];\n              }\n\n              const option = getRecordAsOption(record, primaryLabel, props.secondaryLabel, props.tertiaryLabel);\n\n              const pathPrefix = relationshipContext?.transformPath ? relationshipContext.transformPath(props.field) : props.field;\n              const metadataPathPrefix = relationshipContext?.transformMetadataPath\n                ? relationshipContext.transformMetadataPath(props.field)\n                : props.field;\n\n              const isEditing = editingIndex === idx;\n\n              if (isEditing) {\n                return (\n                  <AccordionItem key={field._fieldArrayKey} value={`${fieldArrayPath}.${idx}`} id={`${pathPrefix}.${idx}`}>\n                    <AccordionContent className=\"border border-gray-300 rounded-md p-3\">\n                      <RelationshipContext.Provider\n                        value={{\n                          transformPath: (path) => `${pathPrefix}.${idx}.${path}`,\n                          transformMetadataPath: (path) => `${metadataPathPrefix}.${path}`,\n                          fieldArray,\n                        }}\n                      >\n                        {props.children}\n                      </RelationshipContext.Provider>\n                      <div className=\"flex justify-between p-4\">\n                        <Button variant=\"destructive\" id={`deleteButton_${metadataPathPrefix}.${idx}`} onClick={() => remove(idx)}>\n                          Delete\n                        </Button>\n                        <Button\n                          variant=\"default\"\n                          type=\"button\"\n                          id={`confirmButton_${metadataPathPrefix}.${idx}`}\n                          onClick={(e) => {\n                            e.preventDefault();\n                            e.stopPropagation();\n                            setEditingIndex(null);\n                          }}\n                        >\n                          Confirm\n                        </Button>\n                      </div>\n                    </AccordionContent>\n                  </AccordionItem>\n                );\n              }\n\n              return (\n                <AccordionItem\n                  key={field._fieldArrayKey}\n                  value={`${fieldArrayPath}.${idx}`}\n                  id={`${pathPrefix}.${idx}`}\n                  onClick={() => setEditingIndex(idx)}\n                  className=\"\"\n                >\n                  <AccordionTrigger onClick={(e) => e.preventDefault()}>\n                    {option.label ? (\n                      <div className=\"flex justify-between w-full items-center\">\n                        <div className=\"flex flex-col gap-1 items-start\">\n                          {option.label && renderOptionLabel(option.label, \"primary\")}\n                          {option.secondaryLabel && renderOptionLabel(option.secondaryLabel, \"secondary\")}\n                        </div>\n\n                        {option.tertiaryLabel && (\n                          <div className=\"flex items-center\">{renderOptionLabel(option.tertiaryLabel, \"tertiary\")}</div>\n                        )}\n                      </div>\n                    ) : (\n                      <Label>Click to edit...</Label>\n                    )}\n                  </AccordionTrigger>\n                  <AccordionContent className=\"border border-gray-300 rounded-md p-3\">\n                    <RelationshipContext.Provider\n                      value={{\n                        transformPath: (path) => `${pathPrefix}.${idx}.${path}`,\n                        transformMetadataPath: (path) => `${metadataPathPrefix}.${path}`,\n                        fieldArray,\n                      }}\n                    >\n                      {props.children}\n                    </RelationshipContext.Provider>\n                  </AccordionContent>\n                </AccordionItem>\n              );\n            })}\n          </Accordion>\n          <Button\n            type=\"button\"\n            variant=\"default\"\n            className=\"flex gap-1 border border-gray-300 rounded-md p-2 cursor-pointer\"\n            onClick={() => {\n              append({});\n              setEditingIndex(fields.length);\n            }}\n          >\n            <PlusCircleIcon className=\"w-4 h-4\" />\n            <Label className=\"text-sm font-semibold\">Add {modelName}</Label>\n          </Button>\n        </div>\n      </div>\n    );\n  }\n\n  return autoRelationshipForm(ShadcnAutoHasManyForm);\n};\n"]}