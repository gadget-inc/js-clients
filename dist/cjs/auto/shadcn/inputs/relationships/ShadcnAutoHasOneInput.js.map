{"version":3,"file":"ShadcnAutoHasOneInput.js","sourceRoot":"","sources":["../../../../../../src/auto/shadcn/inputs/relationships/ShadcnAutoHasOneInput.tsx"],"names":[],"mappings":"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","sourcesContent":["import { XIcon } from \"lucide-react\";\nimport React, { useCallback } from \"react\";\nimport { debounce } from \"../../../../utils.js\";\nimport { autoInput } from \"../../../AutoInput.js\";\nimport { useHasOneInputController } from \"../../../hooks/useHasOneController.js\";\nimport { getRecordAsOption, optionRecordsToLoadCount, useOptionLabelForField } from \"../../../hooks/useRelatedModel.js\";\nimport type { AutoRelationshipInputProps } from \"../../../interfaces/AutoRelationshipInputProps.js\";\nimport type { ShadcnElements } from \"../../elements.js\";\nimport { makeShadcnAutoComboInput } from \"../ShadcnAutoComboInput.js\";\n\nexport const makeShadcnAutoHasOneInput = ({\n  Badge,\n  Button,\n  Command,\n  CommandItem,\n  CommandInput,\n  Label,\n  CommandList,\n  CommandEmpty,\n  CommandLoading,\n  CommandGroup,\n  Checkbox,\n  ScrollArea,\n}: Pick<\n  ShadcnElements,\n  | \"Badge\"\n  | \"Button\"\n  | \"Command\"\n  | \"CommandItem\"\n  | \"CommandList\"\n  | \"CommandLoading\"\n  | \"CommandEmpty\"\n  | \"CommandGroup\"\n  | \"CommandInput\"\n  | \"Label\"\n  | \"Checkbox\"\n  | \"ScrollArea\"\n>) => {\n  const ShadcnComboInput = makeShadcnAutoComboInput({\n    Command,\n    CommandInput,\n    Label,\n    CommandItem,\n    CommandList,\n    CommandLoading,\n    CommandEmpty,\n    CommandGroup,\n    Checkbox,\n    ScrollArea,\n  });\n\n  function ShadcnAutoHasOneInput(props: AutoRelationshipInputProps) {\n    const { field } = props;\n    const {\n      fieldMetadata: { path, metadata },\n      relatedModelOptions: { options, searchFilterOptions, search, pagination, relatedModel },\n      selectedRecord,\n      errorMessage,\n      isLoading,\n      onSelectRecord,\n      onRemoveRecord,\n    } = useHasOneInputController(props);\n\n    const optionLabel = useOptionLabelForField(field, props.optionLabel);\n\n    const selectedOption = selectedRecord ? getRecordAsOption(selectedRecord, { primary: optionLabel }) : null;\n\n    const selectedRecordTag = selectedOption ? (\n      <Badge variant={\"outline\"} key={`selectedRecordTag_${selectedOption.id}`}>\n        <p id={`${selectedOption.id}_${selectedOption.primary}`}>{selectedOption.primary ?? `id: ${selectedOption.id}`}</p>\n        <Button\n          aria-label={`Remove`}\n          onClick={(e) => {\n            e.preventDefault();\n            selectedRecord && onRemoveRecord(selectedRecord);\n          }}\n          variant=\"ghost\"\n          size=\"icon\"\n        >\n          <XIcon />\n        </Button>\n      </Badge>\n    ) : null;\n\n    const handleScrolledToBottom = useCallback(\n      debounce(() => {\n        if (pagination.hasNextPage && options.length >= optionRecordsToLoadCount) {\n          pagination.loadNextPage();\n        }\n      }, 300),\n      [pagination, options.length]\n    );\n\n    return (\n      <ShadcnComboInput\n        {...props}\n        options={searchFilterOptions}\n        path={path}\n        metadata={metadata}\n        onChange={search.set}\n        defaultValue={search.value}\n        onScrolledToBottom={handleScrolledToBottom}\n        willLoadMoreOptions={pagination.hasNextPage && options.length >= optionRecordsToLoadCount}\n        selectedRecordTag={selectedRecordTag}\n        onSelect={onSelectRecord}\n        checkSelected={(id) => selectedRecord?.id === id}\n        isLoading={isLoading}\n        errorMessage={errorMessage}\n        records={relatedModel.records}\n      />\n    );\n  }\n\n  return autoInput(ShadcnAutoHasOneInput);\n};\n"]}