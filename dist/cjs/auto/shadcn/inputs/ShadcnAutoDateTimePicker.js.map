{"version":3,"file":"ShadcnAutoDateTimePicker.js","sourceRoot":"","sources":["../../../../../src/auto/shadcn/inputs/ShadcnAutoDateTimePicker.tsx"],"names":[],"mappings":"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","sourcesContent":["import { CalendarIcon, X } from \"lucide-react\";\nimport { default as React, Suspense, useCallback, useState, type ReactNode } from \"react\";\nimport { type AutoDateTimeInputProps } from \"src/auto/shared/AutoInputTypes.js\";\nimport { copyTime, formatDate, getDateTimeObjectFromDate, getTimeString, isValidDate, zonedTimeToUtc } from \"../../../dateTimeUtils.js\";\nimport type { GadgetDateTimeConfig } from \"../../../internal/gql/graphql.js\";\nimport { autoInput } from \"../../AutoInput.js\";\nimport { useDateTimeField } from \"../../hooks/useDateTimeField.js\";\nimport { ShadcnRequired } from \"../ShadcnRequired.js\";\nimport type { ShadcnElements } from \"../elements.js\";\n\nexport interface DatePickerProps {\n  onChange: (date: Date) => void;\n  selected: Date;\n  onSelect: (date: Date) => void;\n  initialFocus: boolean;\n  weekStartsOn: number;\n  dayAccessibilityLabelPrefix: string;\n  onMonthChange: (month: number, year: number) => void;\n  allowRange: boolean;\n  multiMonth: boolean;\n  disableDatesBefore: Date;\n  disableDatesAfter: Date;\n  disableSpecificDates: Date[];\n}\n\nconst ShadcnAutoTimeInput = React.lazy(() => import(\"./ShadcnAutoTimeInput.js\"));\n\nexport const makeShadcnAutoDateTimePicker = ({\n  Button,\n  Calendar,\n  Label,\n  Popover,\n  PopoverTrigger,\n  PopoverContent,\n}: Pick<ShadcnElements, \"Button\" | \"Calendar\" | \"Label\" | \"Popover\" | \"PopoverTrigger\" | \"PopoverContent\">) => {\n  const ClearButton = (props: { onClear: () => void }) => {\n    return (\n      <div\n        className=\"ml-auto h-4 w-4 bg-transparent hover:opacity-30\"\n        onClick={(e) => {\n          e.stopPropagation();\n          props.onClear();\n        }}\n      >\n        <X />\n      </div>\n    );\n  };\n  function ShadcnAutoDateTimePicker(\n    props: {\n      id?: string;\n      datePickerProps?: Partial<Omit<DatePickerProps, \"mode\" | \"selected\" | \"onSelect\">>;\n      timePickerProps?: { label?: ReactNode };\n    } & AutoDateTimeInputProps\n  ) {\n    const { localTz, localTime, fieldProps, metadata, fieldState } = useDateTimeField(props);\n\n    const { onChange, value } = fieldProps;\n\n    const timeString = localTime ? getTimeString(getDateTimeObjectFromDate(localTime, true), true) : undefined;\n    const config = metadata.configuration;\n\n    const onDateChange = useCallback<Exclude<DatePickerProps[\"onChange\"], undefined>>(\n      (range) => {\n        (fieldProps || value) && copyTime(range, zonedTimeToUtc(range, localTz));\n        const dateOverride = value ?? new Date(fieldProps.value);\n        if (isValidDate(dateOverride)) {\n          range.setHours(dateOverride.getHours());\n          range.setMinutes(dateOverride.getMinutes());\n          range.setSeconds(dateOverride.getSeconds());\n          range.setMilliseconds(dateOverride.getMilliseconds());\n        }\n        onChange?.(zonedTimeToUtc(range, localTz));\n        fieldProps.onChange(zonedTimeToUtc(range, localTz));\n      },\n      [fieldProps, value, localTz, onChange]\n    );\n\n    const [isOpen, setIsOpen] = useState(false);\n\n    const handleDateSelect = (selectedDate: Date | undefined) => {\n      if (selectedDate) {\n        onDateChange?.(selectedDate);\n      }\n    };\n\n    const handleTimeInput = (inputTimeString: string) => {\n      const [hours, minutes] = inputTimeString.split(\":\").map(Number);\n      const newDate = localTime ? new Date(localTime) : new Date();\n      newDate.setHours(hours);\n      newDate.setMinutes(minutes);\n\n      onChange?.(zonedTimeToUtc(newDate, localTz));\n      fieldProps.onChange(zonedTimeToUtc(newDate, localTz));\n    };\n\n    const handleClear = () => {\n      onChange?.(undefined);\n      fieldProps.onChange(undefined);\n    };\n\n    return (\n      <Popover open={isOpen} onOpenChange={setIsOpen}>\n        <PopoverTrigger asChild>\n          <div>\n            <Label htmlFor={props.id ? `${props.id}-date` : undefined}>\n              {props.label ?? metadata.name ?? \"Date\"}\n              {metadata.requiredArgumentForInput && <ShadcnRequired>*</ShadcnRequired>}\n            </Label>\n            <Button\n              id={props.id ? `${props.id}-date` : undefined}\n              onClick={() => setIsOpen(!isOpen)}\n              variant=\"outline\"\n              type=\"button\"\n              className={`w-full justify-start text-left font-normal ${!localTime ? \"text-muted-foreground\" : \"\"} ${\n                isOpen ? \"ring-1 ring-ring\" : \"\"\n              }`}\n            >\n              <CalendarIcon className=\"mr-2 h-4 w-4\" />\n              {localTime ? (\n                formatDate(localTime, (config as GadgetDateTimeConfig).includeTime, true)\n              ) : (\n                <span className=\"opacity-50\">{(config as GadgetDateTimeConfig).includeTime ? \"YYYY-MM-DD HH:mm\" : \"YYYY-MM-DD\"}</span>\n              )}\n              {localTime && !metadata.requiredArgumentForInput && <ClearButton onClear={handleClear} />}\n            </Button>\n            {(props.error || fieldState.error?.message) && (\n              <Label className=\"text-red-500\">{props.error || fieldState.error?.message}</Label>\n            )}\n          </div>\n        </PopoverTrigger>\n        <PopoverContent className=\"w-auto p-0\">\n          <div className=\"flex flex-row flex-nowrap\">\n            <div className=\"relative bg-background\">\n              <Calendar mode=\"single\" defaultMonth={localTime} selected={localTime} onSelect={handleDateSelect} initialFocus />\n            </div>\n            {(config as GadgetDateTimeConfig).includeTime && (\n              <div className=\"flex flex-col p-4 bg-background border-l\">\n                <Label htmlFor={props.id ? `${props.id}-time` : undefined} data-testid={props.id ? `${props.id}-time` : undefined}>\n                  {props.timePickerProps?.label ?? \"Time\"} (HH:MM)\n                </Label>\n\n                <Suspense fallback={null}>\n                  <ShadcnAutoTimeInput id={props.id} timeString={timeString} handleTimeInput={handleTimeInput} />\n                </Suspense>\n              </div>\n            )}\n          </div>\n        </PopoverContent>\n      </Popover>\n    );\n  }\n\n  ShadcnAutoDateTimePicker.displayName = \"ShadcnAutoDateTimePicker\";\n\n  return autoInput(ShadcnAutoDateTimePicker);\n};\n"]}