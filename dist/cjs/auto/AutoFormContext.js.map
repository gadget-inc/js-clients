{"version":3,"file":"AutoFormContext.js","sourceRoot":"","sources":["../../../src/auto/AutoFormContext.ts"],"names":[],"mappings":";;;;AAAA,iCAAmC;AAEnC,0DAA0B;AAS1B;;GAEG;AAEU,QAAA,uBAAuB,GAAG,eAAK,CAAC,aAAa,CAAsC,SAAS,CAAC,CAAC;AAC3G;;;IAGI;AAEG,MAAM,mBAAmB,GAAG,GAAG,EAAE;IACtC,MAAM,eAAe,GAAG,IAAA,kBAAU,EAAC,+BAAuB,CAAC,CAAC;IAC5D,IAAI,CAAC,eAAe,EAAE,CAAC;QACrB,MAAM,IAAI,KAAK,CACb;;;;yGAImG,CACpG,CAAC;IACJ,CAAC;IAED,OAAO,eAAe,CAAC;AACzB,CAAC,CAAC;AAbW,QAAA,mBAAmB,uBAa9B","sourcesContent":["import { useContext } from \"react\";\nimport type { ActionMetadata } from \"../metadata.js\";\nimport React from \"react\";\nimport { UseActionFormSubmit } from \"src/use-action-form/types.js\";\n\n/**  */\n\nexport interface AutoFormMetadataContext {\n  metadata: ActionMetadata | undefined;\n  submit: UseActionFormSubmit<any>;\n}\n/**\n * React context that stores an instance of the JS Client for an app (AKA the `api` object)\n */\n\nexport const AutoFormMetadataContext = React.createContext<AutoFormMetadataContext | undefined>(undefined);\n/**\n * Get the current `api` object from React context\n * Must be called within a component wrapped by the `<Provider api={...} />` component.\n **/\n\nexport const useAutoFormMetadata = () => {\n  const autoFormContext = useContext(AutoFormMetadataContext);\n  if (!autoFormContext) {\n    throw new Error(\n      `useAutoFormMetadata hook called in context where no AutoFormMetadata context is available. Please ensure you are wrapping this hook with the <AutoForm/> component from @gadgetinc/react.\n\n    Possible remedies:\n      - ensuring you have the <AutoForm/> component wrapped around your hook invocation\n      - ensuring your @gadget-client/<your-app> package and your @gadgetinc/react package are up to date`\n    );\n  }\n\n  return autoFormContext;\n};\n"]}