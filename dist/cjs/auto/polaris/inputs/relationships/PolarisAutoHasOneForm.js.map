{"version":3,"file":"PolarisAutoHasOneForm.js","sourceRoot":"","sources":["../../../../../../src/auto/polaris/inputs/relationships/PolarisAutoHasOneForm.tsx"],"names":[],"mappings":"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","sourcesContent":["import { BlockStack, Box, Button, Icon, InlineGrid, InlineStack, ResourceItem, Text } from \"@shopify/polaris\";\nimport { PlusCircleIcon } from \"@shopify/polaris-icons\";\nimport React from \"react\";\nimport { useHasOneForm } from \"../../../../useHasOneForm.js\";\nimport { autoRelationshipForm } from \"../../../AutoInput.js\";\nimport { RelationshipContext } from \"../../../hooks/useAutoRelationship.js\";\nimport type { OptionLabel } from \"../../../interfaces/AutoRelationshipInputProps.js\";\nimport { SearchableSingleRelatedModelRecordSelector } from \"./SearchableSingleRelatedModelRecordSelector.js\";\nimport { renderOptionLabel } from \"./utils.js\";\n\nexport const PolarisAutoHasOneForm = autoRelationshipForm(\n  (props: {\n    field: string;\n    children: React.ReactNode;\n    label?: React.ReactNode;\n    primaryLabel?: OptionLabel;\n    secondaryLabel?: OptionLabel;\n    tertiaryLabel?: OptionLabel;\n  }) => {\n    const hasOneForm = useHasOneForm(props);\n    const {\n      isEditing,\n      setIsEditing,\n      isCreatingRecord,\n      pathPrefix,\n      metaDataPathPrefix,\n      hasRecord,\n      recordOption,\n      relatedModelName,\n      confirmEdit,\n      removeRecord,\n    } = hasOneForm;\n\n    return (\n      <>\n        <RelationshipContext.Provider\n          value={{ transformPath: (path) => pathPrefix + \".\" + path, transformMetadataPath: (path) => metaDataPathPrefix + \".\" + path }}\n        >\n          <BlockStack gap=\"300\">\n            <InlineGrid columns=\"1fr auto\">\n              {props.label ?? (\n                <Text as=\"h2\" variant=\"headingSm\">\n                  {relatedModelName}\n                </Text>\n              )}\n            </InlineGrid>\n\n            {hasRecord || isCreatingRecord ? (\n              <>\n                <Box borderColor=\"border\" borderWidth=\"025\" borderRadius=\"200\">\n                  {!isEditing ? (\n                    <BlockStack as=\"ul\">\n                      <ResourceItem id={recordOption!.id} onClick={() => setIsEditing(true)}>\n                        <InlineStack align=\"space-between\">\n                          <BlockStack gap=\"200\">\n                            {renderOptionLabel(recordOption!.label, \"primary\")}\n                            {recordOption!.secondaryLabel && renderOptionLabel(recordOption!.secondaryLabel, \"secondary\")}\n                          </BlockStack>\n                          {recordOption!.tertiaryLabel && renderOptionLabel(recordOption!.tertiaryLabel, \"tertiary\")}\n                        </InlineStack>\n                      </ResourceItem>\n                    </BlockStack>\n                  ) : (\n                    <>\n                      <Box padding=\"300\">\n                        <BlockStack gap=\"300\">\n                          {props.children}\n                          <InlineStack align=\"space-between\">\n                            <Button tone=\"critical\" onClick={removeRecord}>\n                              Remove\n                            </Button>\n                            <Button variant=\"primary\" onClick={confirmEdit}>\n                              Confirm\n                            </Button>\n                          </InlineStack>\n                        </BlockStack>\n                      </Box>\n                    </>\n                  )}\n                </Box>\n              </>\n            ) : (\n              <EmptyFormComponent form={hasOneForm} />\n            )}\n          </BlockStack>\n        </RelationshipContext.Provider>\n      </>\n    );\n  }\n);\n\n/**\n * TODO - If this gets enabled fix this:\n *    - Workflow\n *      - existingSelectedRecord\n *      - removeSelection\n *      - reselectTheSameRecordInDropdown\n *      - removeSelection\n *      - send\n *    - Right now, this workflow sends null as the hasOne field value, which does nothing. It should be _unlink\n */\nconst canSelectExistingRecord = false;\n\nconst EmptyFormComponent = (props: { form: ReturnType<typeof useHasOneForm> }) => {\n  const { form } = props;\n\n  if (canSelectExistingRecord) {\n    return <SearchableSingleRelatedModelRecordSelector form={form} override={{ addNewRecord: form.startCreatingRecord }} />;\n  }\n  return <CreateNewChildButton form={form} />;\n};\n\nconst CreateNewChildButton = (props: { form: ReturnType<typeof useHasOneForm> }) => {\n  const { relatedModelName, startCreatingRecord } = props.form;\n\n  return (\n    <>\n      <Box borderColor=\"border\" borderWidth=\"025\" borderRadius=\"200\">\n        <BlockStack as=\"ul\">\n          <ResourceItem id={\"add\"} onClick={startCreatingRecord}>\n            <InlineStack align=\"start\" gap=\"200\">\n              <Box>\n                <Icon source={PlusCircleIcon} />\n              </Box>\n              <Text as=\"p\" variant=\"bodyMd\" fontWeight=\"semibold\">\n                Add {relatedModelName}\n              </Text>\n            </InlineStack>\n          </ResourceItem>\n        </BlockStack>\n      </Box>\n    </>\n  );\n};\n"]}