{"version":3,"file":"PolarisListMessages.js","sourceRoot":"","sources":["../../../../../../src/auto/polaris/inputs/relationships/PolarisListMessages.tsx"],"names":[],"mappings":";;;;AAAA,8CAAiD;AACjD,0DAA0B;AAC1B,mDAAuD;AA8B9C,gGA9BA,0BAAe,OA8BA;AA5BjB,MAAM,gBAAgB,GAAG,CAAC,KAAmE,EAAE,EAAE;IACtG,MAAM,EAAE,OAAO,EAAE,EAAE,EAAE,QAAQ,EAAE,GAAG,KAAK,CAAC;IAExC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,CAChB,8BAAC,iBAAO,CAAC,MAAM,IAAC,GAAG,EAAE,EAAE,EAAE,KAAK,EAAE,EAAE,EAAE,QAAQ,EAAE,QAAQ,IACnD,OAAO,EAAE,EAAE,CACG,CAClB,CAAC,CAAC,CAAC,OAAO,OAAO,KAAK,QAAQ,CAAC,CAAC,CAAC,CAChC,8BAAC,iBAAO,CAAC,MAAM,IAAC,GAAG,EAAE,EAAE,EAAE,KAAK,EAAE,EAAE,EAAE,QAAQ,EAAE,QAAQ,IACnD,OAAO,CACO,CAClB,CAAC,CAAC,CAAC,CACF,8BAAC,iBAAO,CAAC,MAAM,IAAC,GAAG,EAAE,EAAE,EAAE,KAAK,EAAE,EAAE,EAAE,QAAQ,EAAE,QAAQ,IACnD,OAAO,CACO,CAClB,CAAC;AACJ,CAAC,CAAC;AAhBW,QAAA,gBAAgB,oBAgB3B;AAEK,MAAM,WAAW,GAAG,CAAC,KAA0B,EAAE,EAAE,CAAC,CACzD,uCAAK,KAAK,EAAE,EAAE,OAAO,EAAE,MAAM,EAAE;IAC7B,8BAAC,cAAI,IAAC,EAAE,EAAC,GAAG,EAAC,IAAI,EAAC,SAAS,IACxB,KAAK,CAAC,OAAO,CACT,CACH,CACP,CAAC;AANW,QAAA,WAAW,eAMtB;AAEK,MAAM,gBAAgB,GAAG,GAAG,EAAE,CAAC,8BAAC,mBAAW,IAAC,OAAO,EAAC,YAAY,GAAG,CAAC;AAA9D,QAAA,gBAAgB,oBAA8C","sourcesContent":["import { Listbox, Text } from \"@shopify/polaris\";\nimport React from \"react\";\nimport { getErrorMessage } from \"../../../../utils.js\";\n\nexport const SelectableOption = (props: { primary?: React.ReactNode; id: string; selected: boolean }) => {\n  const { primary, id, selected } = props;\n\n  return !primary ? (\n    <Listbox.Option key={id} value={id} selected={selected}>\n      {`id: ${id}`}\n    </Listbox.Option>\n  ) : typeof primary === \"string\" ? (\n    <Listbox.Option key={id} value={id} selected={selected}>\n      {primary}\n    </Listbox.Option>\n  ) : (\n    <Listbox.Action key={id} value={id} selected={selected}>\n      {primary}\n    </Listbox.Action>\n  );\n};\n\nexport const ListMessage = (props: { message: string }) => (\n  <div style={{ padding: \"16px\" }}>\n    <Text as=\"p\" tone=\"subdued\">\n      {props.message}\n    </Text>\n  </div>\n);\n\nexport const NoRecordsMessage = () => <ListMessage message=\"No results\" />;\n\nexport { getErrorMessage };\n"]}