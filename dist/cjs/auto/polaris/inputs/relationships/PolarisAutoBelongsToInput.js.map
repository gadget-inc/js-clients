{"version":3,"file":"PolarisAutoBelongsToInput.js","sourceRoot":"","sources":["../../../../../../src/auto/polaris/inputs/relationships/PolarisAutoBelongsToInput.tsx"],"names":[],"mappings":";;;;AAAA,8CAAiD;AACjD,0DAA0B;AAC1B,wDAAkD;AAClD,wFAAuF;AACvF,0EAAwH;AAExH,qEAA+D;AAElD,QAAA,yBAAyB,GAAG,IAAA,wBAAS,EAAC,CAAC,KAAiC,EAAE,EAAE;IACvF,MAAM,EACJ,aAAa,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,EACjC,mBAAmB,EAAE,EAAE,OAAO,EAAE,mBAAmB,EAAE,UAAU,EAAE,MAAM,EAAE,YAAY,EAAE,EACvF,SAAS,EACT,YAAY,EACZ,cAAc,EACd,wBAAwB,EACxB,cAAc,EACd,cAAc,GACf,GAAG,IAAA,uDAA2B,EAAC,KAAK,CAAC,CAAC;IAEvC,MAAM,WAAW,GAAG,IAAA,2CAAsB,EAAC,KAAK,CAAC,KAAK,EAAE,KAAK,CAAC,WAAW,CAAC,CAAC;IAC3E,MAAM,cAAc,GAAG,cAAc,CAAC,CAAC,CAAC,IAAA,sCAAiB,EAAC,cAAc,EAAE,EAAE,OAAO,EAAE,WAAW,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;IAE3G,MAAM,iBAAiB,GACrB,cAAc,IAAI,cAAc,CAAC,EAAE,CAAC,CAAC,CAAC,CACpC,8BAAC,aAAG,IAAC,QAAQ,EAAE,cAAc,EAAE,GAAG,EAAE,qBAAqB,cAAc,CAAC,EAAE,EAAE;QAC1E,qCAAG,EAAE,EAAE,GAAG,cAAc,CAAC,EAAE,IAAI,cAAc,CAAC,OAAO,EAAE,IAAG,cAAc,CAAC,OAAO,CAAK,CACjF,CACP,CAAC,CAAC,CAAC,wBAAwB,CAAC,CAAC,CAAC,CAC7B,8BAAC,aAAG,IAAC,QAAQ,EAAE,cAAc,EAAE,GAAG,EAAE,qBAAqB,wBAAwB,EAAE;QACjF,qCAAG,EAAE,EAAE,GAAG,wBAAwB,EAAE,EAAE,KAAK,EAAE,EAAE,KAAK,EAAE,KAAK,EAAE;;YACtD,wBAAwB,CAC3B,CACA,CACP,CAAC,CAAC,CAAC,IAAI,CAAC;IAEX,MAAM,QAAQ,GAAG,CAAC,MAA2B,EAAE,EAAE;QAC/C,MAAM,QAAQ,GAAG,MAAM,CAAC,EAAE,CAAC;QAC3B,MAAM,mBAAmB,GAAG,cAAc,EAAE,EAAE,KAAK,QAAQ,CAAC;QAE5D,mBAAmB;YACjB,CAAC,CAAC,cAAc,EAAE,CAAC,kBAAkB;YACrC,CAAC,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC,CAAC,wBAAwB;IACtD,CAAC,CAAC;IAEF,OAAO,CACL;QACE,8BAAC,kBAAQ,IACP,SAAS,EACP,8BAAC,kBAAQ,CAAC,SAAS,IACjB,iBAAiB,EAAE,QAAQ,CAAC,wBAAwB,EACpD,QAAQ,EAAE,MAAM,CAAC,GAAG,EACpB,KAAK,EAAE,MAAM,CAAC,KAAK,EACnB,IAAI,EAAE,IAAI,EACV,KAAK,EAAE,KAAK,CAAC,KAAK,IAAI,QAAQ,CAAC,IAAI,EACnC,WAAW,EAAC,QAAQ,EACpB,YAAY,EAAC,KAAK,EAClB,eAAe,EAAE,iBAAiB,GAClC,EAEJ,kBAAkB,EAAE,UAAU,CAAC,YAAY,EAC3C,mBAAmB,EAAE,UAAU,CAAC,WAAW,IAAI,OAAO,CAAC,MAAM,IAAI,6CAAwB;YAEzF,8BAAC,4CAAmB,IAClB,SAAS,EAAE,SAAS,EACpB,YAAY,EAAE,YAAY,EAC1B,aAAa,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,KAAK,cAAc,EAAE,EAAE,EAChD,QAAQ,EAAE,QAAQ,EAClB,OAAO,EAAE,mBAAmB,EAC5B,OAAO,EAAE,YAAY,CAAC,OAAO,GAC7B,CACO,CACV,CACJ,CAAC;AACJ,CAAC,CAAC,CAAC","sourcesContent":["import { Combobox, Tag } from \"@shopify/polaris\";\nimport React from \"react\";\nimport { autoInput } from \"../../../AutoInput.js\";\nimport { useBelongsToInputController } from \"../../../hooks/useBelongsToController.js\";\nimport { getRecordAsOption, optionRecordsToLoadCount, useOptionLabelForField } from \"../../../hooks/useRelatedModel.js\";\nimport type { AutoRelationshipInputProps } from \"../../../interfaces/AutoRelationshipInputProps.js\";\nimport { RelatedModelOptions } from \"./RelatedModelOptions.js\";\n\nexport const PolarisAutoBelongsToInput = autoInput((props: AutoRelationshipInputProps) => {\n  const {\n    fieldMetadata: { path, metadata },\n    relatedModelOptions: { options, searchFilterOptions, pagination, search, relatedModel },\n    isLoading,\n    errorMessage,\n    selectedRecord,\n    danglingSelectedRecordId,\n    onSelectRecord,\n    onRemoveRecord,\n  } = useBelongsToInputController(props);\n\n  const optionLabel = useOptionLabelForField(props.field, props.optionLabel);\n  const selectedOption = selectedRecord ? getRecordAsOption(selectedRecord, { primary: optionLabel }) : null;\n\n  const selectedRecordTag =\n    selectedOption && selectedOption.id ? (\n      <Tag onRemove={onRemoveRecord} key={`selectedRecordTag_${selectedOption.id}`}>\n        <p id={`${selectedOption.id}_${selectedOption.primary}`}>{selectedOption.primary}</p>\n      </Tag>\n    ) : danglingSelectedRecordId ? (\n      <Tag onRemove={onRemoveRecord} key={`selectedRecordTag_${danglingSelectedRecordId}`}>\n        <p id={`${danglingSelectedRecordId}`} style={{ color: \"red\" }}>\n          id: {danglingSelectedRecordId}\n        </p>\n      </Tag>\n    ) : null;\n\n  const onSelect = (record: Record<string, any>) => {\n    const recordId = record.id;\n    const idIsAlreadySelected = selectedRecord?.id === recordId;\n\n    idIsAlreadySelected\n      ? onRemoveRecord() // clear selection\n      : onSelectRecord(record); // make single selection\n  };\n\n  return (\n    <>\n      <Combobox\n        activator={\n          <Combobox.TextField\n            requiredIndicator={metadata.requiredArgumentForInput}\n            onChange={search.set}\n            value={search.value}\n            name={path}\n            label={props.label ?? metadata.name}\n            placeholder=\"Search\"\n            autoComplete=\"off\"\n            verticalContent={selectedRecordTag}\n          />\n        }\n        onScrolledToBottom={pagination.loadNextPage}\n        willLoadMoreOptions={pagination.hasNextPage && options.length >= optionRecordsToLoadCount}\n      >\n        <RelatedModelOptions\n          isLoading={isLoading}\n          errorMessage={errorMessage}\n          checkSelected={(id) => id === selectedRecord?.id}\n          onSelect={onSelect}\n          options={searchFilterOptions}\n          records={relatedModel.records}\n        />\n      </Combobox>\n    </>\n  );\n});\n"]}