{"version":3,"file":"SelectedRelatedRecordTags.js","sourceRoot":"","sources":["../../../../../../src/auto/polaris/inputs/relationships/SelectedRelatedRecordTags.tsx"],"names":[],"mappings":";;;;AAAA,8CAAuC;AACvC,0DAA0B;AAC1B,0EAAwE;AAGjE,MAAM,4BAA4B,GAAG,CAAC,KAI5C,EAAE,EAAE;IACH,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC,MAAM,EAAE,CAAC;QAClC,yHAAyH;QACzH,OAAO,IAAI,CAAC;IACd,CAAC;IACD,OAAO,8BAAC,iCAAyB,OAAK,KAAK,GAAI,CAAC;AAClD,CAAC,CAAC;AAVW,QAAA,4BAA4B,gCAUvC;AAEK,MAAM,yBAAyB,GAAG,CAAC,KAIzC,EAAE,EAAE;IACH,MAAM,EAAE,eAAe,EAAE,WAAW,EAAE,cAAc,EAAE,GAAG,KAAK,CAAC;IAE/D,MAAM,OAAO,GAAG,IAAA,wCAAmB,EAAC,eAAe,EAAE,EAAE,OAAO,EAAE,WAAW,EAAE,CAAC,CAAC;IAE/E,OAAO,OAAO,CAAC,MAAM;QACnB,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,EAAE;YACrB,OAAO,CACL,8BAAC,aAAG,IACF,GAAG,EAAE,SAAS,MAAM,CAAC,EAAE,EAAE,EACzB,QAAQ,EAAE,GAAG,EAAE;oBACb,MAAM,MAAM,GAAG,eAAe,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE,EAAE,CAAC,MAAM,CAAC,EAAE,KAAK,MAAM,CAAC,EAAE,CAAC,CAAC;oBACzE,cAAc,CAAC,MAAM,IAAI,EAAE,EAAE,EAAE,MAAM,CAAC,EAAE,EAAE,CAAC,CAAC;gBAC9C,CAAC,IAEA,MAAM,CAAC,OAAO,IAAI,OAAO,MAAM,CAAC,EAAE,EAAE,CACjC,CACP,CAAC;QACJ,CAAC,CAAC;QACJ,CAAC,CAAC,IAAI,CAAC;AACX,CAAC,CAAC;AAxBW,QAAA,yBAAyB,6BAwBpC","sourcesContent":["import { Tag } from \"@shopify/polaris\";\nimport React from \"react\";\nimport { getRecordsAsOptions } from \"../../../hooks/useRelatedModel.js\";\nimport type { OptionLabel } from \"../../../interfaces/AutoRelationshipInputProps.js\";\n\nexport const getSelectedRelatedRecordTags = (props: {\n  selectedRecords: Record<string, any>[];\n  optionLabel: OptionLabel;\n  onRemoveRecord: (record: Record<string, any>) => void;\n}) => {\n  if (!props.selectedRecords.length) {\n    // A separate component getter is used here to return null instead of <>null</> which adds extra height to the text field\n    return null;\n  }\n  return <SelectedRelatedRecordTags {...props} />;\n};\n\nexport const SelectedRelatedRecordTags = (props: {\n  selectedRecords: Record<string, any>[];\n  optionLabel: OptionLabel;\n  onRemoveRecord: (record: Record<string, any>) => void;\n}) => {\n  const { selectedRecords, optionLabel, onRemoveRecord } = props;\n\n  const options = getRecordsAsOptions(selectedRecords, { primary: optionLabel });\n\n  return options.length\n    ? options.map((option) => {\n        return (\n          <Tag\n            key={`option${option.id}`}\n            onRemove={() => {\n              const record = selectedRecords.find((record) => record.id === option.id);\n              onRemoveRecord(record ?? { id: option.id });\n            }}\n          >\n            {option.primary ?? `id: ${option.id}`}\n          </Tag>\n        );\n      })\n    : null;\n};\n"]}