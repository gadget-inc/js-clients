{"version":3,"file":"PolarisAutoBelongsToForm.js","sourceRoot":"","sources":["../../../../../../src/auto/polaris/inputs/relationships/PolarisAutoBelongsToForm.tsx"],"names":[],"mappings":"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","sourcesContent":["import {\n  ActionList,\n  AutoSelection,\n  BlockStack,\n  Button,\n  ButtonGroup,\n  Divider,\n  Icon,\n  InlineGrid,\n  InlineStack,\n  Listbox,\n  Modal,\n  Popover,\n  Text,\n} from \"@shopify/polaris\";\nimport { MenuHorizontalIcon, PlusCircleIcon } from \"@shopify/polaris-icons\";\nimport React from \"react\";\nimport { useBelongsToForm } from \"../../../../useBelongsToForm.js\";\nimport { autoRelationshipForm } from \"../../../AutoInput.js\";\nimport { RelationshipContext } from \"../../../hooks/useAutoRelationship.js\";\nimport type { OptionLabel } from \"../../../interfaces/AutoRelationshipInputProps.js\";\nimport { RelatedModelOptionsPopover, RelatedModelOptionsSearch } from \"./RelatedModelOptions.js\";\nimport { renderOptionLabel } from \"./utils.js\";\n\nexport const PolarisAutoBelongsToForm = autoRelationshipForm(\n  (props: {\n    field: string;\n    children: React.ReactNode;\n    label?: React.ReactNode;\n    renderSelectedRecord?: (record: Record<string, any>) => React.ReactNode;\n    primaryLabel?: OptionLabel;\n    secondaryLabel?: OptionLabel;\n    tertiaryLabel?: OptionLabel;\n  }) => {\n    const {\n      record,\n      actionsOpen,\n      modalOpen,\n      setActionsOpen,\n      searchOpen,\n      setSearchOpen,\n      setModalOpen,\n      search,\n      searchFilterOptions,\n      pagination,\n      records,\n      isLoading,\n      pathPrefix,\n      hasRecord,\n      recordOption,\n      parentName,\n      path,\n      setValue,\n      getValues,\n      metaDataPathPrefix,\n    } = useBelongsToForm(props);\n\n    return (\n      <>\n        <BlockStack gap=\"300\">\n          <InlineGrid columns=\"1fr auto\">\n            {props.label ?? (\n              <Text as=\"h2\" variant=\"headingSm\">\n                {parentName}\n              </Text>\n            )}\n            {hasRecord && (\n              <Popover\n                active={actionsOpen}\n                activator={<Button onClick={() => setActionsOpen((prev) => !prev)} icon={MenuHorizontalIcon} />}\n                onClose={() => setActionsOpen(false)}\n              >\n                <ActionList\n                  actionRole=\"menuitem\"\n                  items={[\n                    {\n                      content: `Edit ${parentName.toLocaleLowerCase()}`,\n                      onAction: () => {\n                        setModalOpen(true);\n                        setActionsOpen(false);\n                      },\n                    },\n                    {\n                      content: `Remove ${parentName.toLocaleLowerCase()}`,\n                      onAction: () => {\n                        const { __typename, ...rest } = record;\n                        const nulledValues = Object.fromEntries(Object.keys(rest).map((key) => [key, null]));\n                        setValue(path, { ...nulledValues, __typename, _unlink: true });\n                        setActionsOpen(false);\n                      },\n                      destructive: true,\n                    },\n                  ]}\n                />\n              </Popover>\n            )}\n          </InlineGrid>\n          {hasRecord ? (\n            props.renderSelectedRecord ? (\n              props.renderSelectedRecord(record)\n            ) : (\n              <>\n                <Divider />\n                <InlineStack align=\"space-between\">\n                  <BlockStack gap=\"200\">\n                    {renderOptionLabel(recordOption!.label, \"primary\")}\n                    {recordOption!.secondaryLabel && renderOptionLabel(recordOption!.secondaryLabel, \"secondary\")}\n                  </BlockStack>\n                  {recordOption!.tertiaryLabel && renderOptionLabel(recordOption!.tertiaryLabel, \"tertiary\")}\n                </InlineStack>\n              </>\n            )\n          ) : (\n            <RelatedModelOptionsPopover\n              active={searchOpen}\n              activator={\n                <RelatedModelOptionsSearch\n                  modelName={parentName}\n                  value={search.value}\n                  onChange={search.set}\n                  onFocus={() => setSearchOpen(true)}\n                />\n              }\n              onClose={() => setSearchOpen(false)}\n              onScrolledToBottom={pagination.loadNextPage}\n              actions={[\n                <Listbox.Action key=\"add-new-record\" value=\"add-new-record\" divider>\n                  <InlineStack gap=\"200\">\n                    <Icon source={PlusCircleIcon} />\n                    Add {parentName}\n                  </InlineStack>\n                </Listbox.Action>,\n              ]}\n              options={searchFilterOptions}\n              records={records}\n              onSelect={(record) => {\n                if (record.id === \"add-new-record\") {\n                  setModalOpen(true);\n                } else {\n                  setValue(path, { ...record, _link: record.id });\n                }\n              }}\n              isLoading={isLoading}\n              autoSelection={AutoSelection.None}\n            />\n          )}\n        </BlockStack>\n        <Modal open={modalOpen} onClose={() => setModalOpen(false)} title={`Add ${parentName}`}>\n          <RelationshipContext.Provider\n            value={{ transformPath: (path) => pathPrefix + \".\" + path, transformMetadataPath: (path) => metaDataPathPrefix + \".\" + path }}\n          >\n            <Modal.Section>{props.children}</Modal.Section>\n            <Modal.Section>\n              <div style={{ float: \"right\", paddingBottom: \"16px\" }}>\n                <ButtonGroup>\n                  <Button variant=\"secondary\" onClick={() => setModalOpen(false)}>\n                    Cancel\n                  </Button>\n                  <Button\n                    variant=\"primary\"\n                    onClick={() => {\n                      const { _unlink, _link, id: recordId, ...rest } = getValues(path);\n\n                      if (recordId) {\n                        setValue(path, { ...rest, id: recordId });\n                      } else {\n                        setValue(path, rest);\n                      }\n                      setModalOpen(false);\n                    }}\n                  >\n                    Save\n                  </Button>\n                </ButtonGroup>\n              </div>\n            </Modal.Section>\n          </RelationshipContext.Provider>\n        </Modal>\n      </>\n    );\n  }\n);\n"]}