{"version":3,"file":"PolarisAutoRelationshipForm.js","sourceRoot":"","sources":["../../../../../../src/auto/polaris/inputs/relationships/PolarisAutoRelationshipForm.tsx"],"names":[],"mappings":"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","sourcesContent":["import { BlockStack, Box, Button, Icon, InlineStack, ResourceItem, Text } from \"@shopify/polaris\";\nimport { PlusCircleIcon } from \"@shopify/polaris-icons\";\nimport React, { useState } from \"react\";\nimport type { useFieldArray } from \"../../../../useActionForm.js\";\nimport { useAutoFormMetadata } from \"../../../AutoFormContext.js\";\nimport { autoInput } from \"../../../AutoInput.js\";\nimport { useFieldMetadata } from \"../../../hooks/useFieldMetadata.js\";\nimport { useHasManyController } from \"../../../hooks/useHasManyController.js\";\nimport { getRecordAsOption, getRecordLabel, useOptionLabelForField } from \"../../../hooks/useRelatedModel.js\";\nimport type { OptionLabel } from \"../../../interfaces/AutoRelationshipInputProps.js\";\n\nexport interface RelationshipContextValue {\n  pathPrefix: string;\n  fieldArray?: ReturnType<typeof useFieldArray>;\n}\n\nexport const RelationshipContext = React.createContext<RelationshipContextValue | undefined>(undefined);\n\nexport const useRelationshipContext = () => {\n  return React.useContext(RelationshipContext);\n};\n\nexport const PolarisAutoRelationshipForm = autoInput(\n  (props: { field: string; children: React.ReactNode; primaryLabel?: OptionLabel; secondaryLabel?: OptionLabel }) => {\n    const { field } = props;\n    const { model } = useAutoFormMetadata();\n\n    if (!model) {\n      return null;\n    }\n\n    const { path, metadata } = useFieldMetadata(field);\n\n    const pathPrefix = path.replace(new RegExp(`^${model.apiIdentifier}\\\\.`), \"\");\n\n    if (metadata.configuration.__typename === \"GadgetBelongsToConfig\") {\n      return <PolarisAutoBelongsToRelationshipForm pathPrefix={pathPrefix}>{props.children}</PolarisAutoBelongsToRelationshipForm>;\n    } else if (metadata.configuration.__typename === \"GadgetHasManyConfig\") {\n      return (\n        <PolarisAutoHasManyRelationshipForm\n          field={field}\n          pathPrefix={pathPrefix}\n          primaryLabel={props.primaryLabel}\n          secondaryLabel={props.secondaryLabel}\n        >\n          {props.children}\n        </PolarisAutoHasManyRelationshipForm>\n      );\n    } else {\n      return null;\n    }\n  }\n);\n\nconst PolarisAutoBelongsToRelationshipForm = (props: { pathPrefix: string; children: React.ReactNode }) => {\n  const { pathPrefix } = props;\n\n  return <RelationshipContext.Provider value={{ pathPrefix }}>{props.children}</RelationshipContext.Provider>;\n};\n\nconst PolarisAutoHasManyRelationshipForm = (props: {\n  field: string;\n  pathPrefix: string;\n  children: React.ReactNode;\n  primaryLabel?: OptionLabel;\n  secondaryLabel?: OptionLabel;\n}) => {\n  const { field, pathPrefix } = props;\n\n  const { fieldArray, records, fieldMetadata } = useHasManyController({ field });\n  const { metadata } = fieldMetadata;\n  const { fields, append, remove } = fieldArray;\n\n  if (metadata.configuration.__typename !== \"GadgetHasManyConfig\") {\n    throw new Error(\"PolarisAutoHasManyRelationshipForm can only be used for HasMany fields\");\n  }\n\n  const modelName = metadata.configuration.relatedModel?.name;\n\n  const primaryLabel = useOptionLabelForField(field, props.primaryLabel);\n\n  const [editingIndex, setEditingIndex] = useState<number | null>(null);\n\n  return (\n    <Box borderColor=\"border\" borderWidth=\"025\" borderRadius=\"200\">\n      <BlockStack as=\"ul\">\n        {fields.flatMap((field, idx) => {\n          const record = records[idx];\n\n          if (!record) {\n            return [];\n          }\n\n          const primary = getRecordAsOption(record, primaryLabel);\n          const secondary = props.secondaryLabel && getRecordLabel(record, props.secondaryLabel);\n\n          return (\n            <Box key={field._fieldArrayKey} borderColor=\"border\" borderBlockEndWidth=\"025\">\n              {editingIndex == idx ? (\n                <Box padding=\"300\">\n                  <BlockStack gap=\"300\">\n                    <RelationshipContext.Provider value={{ pathPrefix: `${pathPrefix}.${idx}`, fieldArray }}>\n                      {props.children}\n                    </RelationshipContext.Provider>\n                    <InlineStack align=\"space-between\">\n                      <Button tone=\"critical\" onClick={() => remove(idx)}>\n                        Delete\n                      </Button>\n                      <Button variant=\"primary\" onClick={() => setEditingIndex(null)}>\n                        Confirm\n                      </Button>\n                    </InlineStack>\n                  </BlockStack>\n                </Box>\n              ) : (\n                <ResourceItem id={primary.id} name={primary.label ?? primary.id} onClick={() => setEditingIndex(idx)}>\n                  {primary.label ? (\n                    <BlockStack gap=\"200\">\n                      <Text variant=\"bodyMd\" fontWeight=\"semibold\" as=\"h3\">\n                        {primary.label}\n                      </Text>\n                      <Text variant=\"bodyMd\" as=\"p\" tone=\"subdued\">\n                        {secondary ?? <span style={{ visibility: \"hidden\" }}>&nbsp;</span>}\n                      </Text>\n                    </BlockStack>\n                  ) : (\n                    <Text variant=\"bodyMd\" as=\"h3\" tone=\"subdued\">\n                      Click to edit...\n                    </Text>\n                  )}\n                </ResourceItem>\n              )}\n            </Box>\n          );\n        })}\n        <Box>\n          <ResourceItem\n            id=\"add\"\n            name=\"Add\"\n            onClick={() => {\n              append({});\n              setEditingIndex(fields.length);\n            }}\n          >\n            <InlineStack align=\"start\" gap=\"200\">\n              <Box>\n                <Icon source={PlusCircleIcon} />\n              </Box>\n              <Text as=\"p\" variant=\"bodyMd\" fontWeight=\"semibold\">\n                Add {modelName}\n              </Text>\n            </InlineStack>\n          </ResourceItem>\n        </Box>\n      </BlockStack>\n    </Box>\n  );\n};\n"]}