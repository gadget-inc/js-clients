{"version":3,"file":"PolarisTimePicker.js","sourceRoot":"","sources":["../../../../../src/auto/polaris/inputs/PolarisTimePicker.tsx"],"names":[],"mappings":"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","sourcesContent":["import type { TextFieldProps } from \"@shopify/polaris\";\nimport { Box, Icon, Listbox, Popover, Scrollable, TextField } from \"@shopify/polaris\";\nimport { ClockIcon } from \"@shopify/polaris-icons\";\nimport { format } from \"date-fns\";\nimport { zonedTimeToUtc } from \"date-fns-tz\";\nimport React, { useState } from \"react\";\nimport { useController } from \"react-hook-form\";\nimport { useFieldMetadata } from \"../../hooks/useFieldMetadata.js\";\nimport { copyTime } from \"./PolarisDateTimePicker.js\";\n\nconst createMarkup = (items: string[], selectedState: string) => {\n  return items.map((item, i) => {\n    return (\n      <div key={i} style={{ textAlign: \"center\", cursor: \"default\", padding: \"0px 4px\" }}>\n        <Listbox.Option value={item}>\n          {selectedState.padStart(2, \"0\") === item ? (\n            <Box padding=\"100\" background=\"bg-surface-secondary-selected\" borderRadius=\"200\" minHeight=\"30px\" minWidth=\"30px\">\n              {item}\n            </Box>\n          ) : (\n            <Box minHeight=\"30px\" minWidth=\"30px\" padding=\"100\">\n              {item}\n            </Box>\n          )}\n        </Listbox.Option>\n      </div>\n    );\n  });\n};\n\nconst hoursArr = Array.from({ length: 12 }, (_, i) => (i + 1).toString().padStart(2, \"0\"));\nconst minsArr = Array.from({ length: 60 }, (_, i) => i.toString().padStart(2, \"0\"));\nconst ampmArr = [\"AM\", \"PM\"];\n\nconst timeFormatRegex = new RegExp(/((1[0-2]|0?[1-9]):([0-5][0-9]) ?([AaPp][Mm]))/);\n\ninterface DateTimeState {\n  month: number;\n  year: number;\n  day: number;\n  hour: string;\n  minute: string;\n  ampm: string;\n}\n\nconst PolarisTimePicker = (props: {\n  field: string;\n  dateTimeState: DateTimeState;\n  setDateTimeState: React.Dispatch<React.SetStateAction<DateTimeState>>;\n  onChange?: (value: Date) => void;\n  localTime?: any;\n  id?: string;\n  timeLabel?: string;\n  timePickerProps?: Partial<TextFieldProps>;\n  hideTimePopover?: boolean;\n  localTz?: string;\n}) => {\n  const { path } = useFieldMetadata(props.field);\n\n  const { field: fieldProps } = useController({\n    name: path,\n  });\n\n  const [timeString, setTimeString] = useState(props.localTime ? format(props.localTime, \"K:m aa\") : \"\");\n  const [timePopoverActive, setTimePopoverActive] = useState(false);\n  const [timeParseError, setTimeParseError] = useState(false);\n  const setHourSelected = (hour: string) =>\n    props.setDateTimeState((prevState) => ({\n      ...prevState,\n      hour: hour,\n    }));\n  const setMinSelected = (minute: string) =>\n    props.setDateTimeState((prevState) => ({\n      ...prevState,\n      minute: minute,\n    }));\n  const setAmpmSelected = (ampm: string) =>\n    props.setDateTimeState((prevState) => ({\n      ...prevState,\n      ampm,\n    }));\n\n  const onTimeStringChange = (value: string) => {\n    setTimeString(value);\n    const trimmedValue = value.trim();\n\n    const result = timeFormatRegex.test(trimmedValue);\n\n    if (!result) {\n      setTimeParseError(true);\n      return;\n    }\n\n    setTimeParseError(false);\n\n    let hours = parseInt(trimmedValue.split(\":\")[0], 10);\n    const minutes = parseInt(trimmedValue.split(\":\")[1], 10);\n    const newAmpm = trimmedValue.slice(-2).toUpperCase();\n    const hoursStr = hours.toString();\n    const paddedMins = minutes.toString().padStart(2, \"0\");\n    setHourSelected(hoursStr);\n    setMinSelected(paddedMins);\n    setAmpmSelected(newAmpm);\n\n    const parsedDate = new Date();\n    if (newAmpm === \"PM\" && hours < 12) {\n      hours += 12;\n    } else if (newAmpm === \"AM\" && hours === 12) {\n      hours = 0;\n    }\n\n    parsedDate.setHours(hours, minutes, 0, 0);\n    const date = props.localTime ? new Date(props.localTime) : new Date();\n\n    copyTime(date, parsedDate);\n\n    props.onChange?.(zonedTimeToUtc(date, props.localTz ?? \"UTC\"));\n    fieldProps.onChange(zonedTimeToUtc(date, props.localTz ?? \"UTC\"));\n\n    setTimeString(`${hoursStr}:${paddedMins} ${newAmpm}`);\n  };\n  return (\n    <Popover\n      active={timePopoverActive}\n      onClose={() => setTimePopoverActive(false)}\n      activator={\n        <TextField\n          prefix={<Icon source={ClockIcon} />}\n          id={props.id ? `${props.id}-time` : undefined}\n          data-testid={props.id ? `${props.id}-time` : undefined}\n          label={props.timeLabel ?? \"Time\"}\n          autoComplete=\"off\"\n          value={timeString}\n          onChange={onTimeStringChange}\n          onFocus={() => setTimePopoverActive(true)}\n          error={timeParseError && `Invalid time format`}\n          {...props.timePickerProps}\n        />\n      }\n    >\n      {!props.hideTimePopover && (\n        <div style={{ overflow: \"hidden\", padding: \"15px 8px\" }}>\n          <div style={{ display: \"flex\" }}>\n            <Scrollable style={{ overflowY: \"scroll\", height: \"250px\" }}>\n              <Listbox\n                onSelect={(value: string) =>\n                  onTimeStringChange(`${value}:${props.dateTimeState.minute.toString().padStart(2, \"0\")} ${props.dateTimeState.ampm}`)\n                }\n              >\n                {createMarkup(hoursArr, props.dateTimeState.hour.toString())}\n              </Listbox>\n            </Scrollable>\n            <div style={{ overflowY: \"scroll\", height: \"250px\" }}>\n              <Listbox\n                onSelect={(value: string) =>\n                  onTimeStringChange(`${props.dateTimeState.hour}:${value.padStart(2, \"0\")} ${props.dateTimeState.ampm}`)\n                }\n              >\n                {createMarkup(minsArr, props.dateTimeState.minute.toString().padStart(2, \"0\"))}\n              </Listbox>\n            </div>\n            <div style={{ overflowY: \"scroll\", height: \"250px\" }}>\n              <Listbox\n                onSelect={(value: string) =>\n                  onTimeStringChange(`${props.dateTimeState.hour}:${props.dateTimeState.minute.toString().padStart(2, \"0\")} ${value}`)\n                }\n              >\n                {createMarkup(ampmArr, props.dateTimeState.ampm)}\n              </Listbox>\n            </div>\n          </div>\n        </div>\n      )}\n    </Popover>\n  );\n};\n\nexport default PolarisTimePicker;\n"]}