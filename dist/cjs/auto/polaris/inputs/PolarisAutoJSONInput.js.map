{"version":3,"file":"PolarisAutoJSONInput.js","sourceRoot":"","sources":["../../../../../src/auto/polaris/inputs/PolarisAutoJSONInput.tsx"],"names":[],"mappings":";;;;AACA,8CAA6C;AAC7C,0DAA0B;AAE1B,sDAAgD;AAChD,gDAAuD;AACvD,qDAA+C;AAC/C,qFAA+E;AAElE,QAAA,oBAAoB,GAAG,IAAA,wBAAS,EAC3C,CACE,KAG6C,EAC7C,EAAE;IACF,MAAM,CAAC,SAAS,EAAE,UAAU,CAAC,GAAG,IAAA,sBAAQ,GAAE,CAAC;IAC3C,MAAM,EAAE,KAAK,EAAE,MAAM,EAAE,OAAO,EAAE,QAAQ,EAAE,GAAG,WAAW,EAAE,GAAG,KAAK,CAAC;IACnE,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,YAAY,EAAE,GAAG,UAAU,EAAE,GAAG,IAAA,kDAAsB,EAAC,KAAK,CAAC,CAAC;IAEnF,MAAM,KAAK,GAAG,KAAK,CAAC,KAAK,IAAI,UAAU,CAAC,KAAK,CAAC;IAC9C,OAAO,CACL;QACE,8BAAC,mBAAS,IACR,SAAS,EAAE,CAAC,EACZ,UAAU,QACV,iBAAiB,EAAE,UAAU,CAAC,QAAQ,CAAC,wBAAwB,EAC/D,KAAK,EAAE,CAAC,SAAS,IAAI,YAAY,IAAI,iBAAiB,YAAY,EAAE,KAChE,IAAA,6BAAkB,EAAC,UAAU,CAAC,KAC9B,IAAA,6BAAkB,EAAC,UAAU,CAAC,KAC9B,WAAW,EACf,KAAK,EAAE,KAAK,GACZ,CACD,CACJ,CAAC;AACJ,CAAC,CACF,CAAC","sourcesContent":["import type { TextFieldProps } from \"@shopify/polaris\";\nimport { TextField } from \"@shopify/polaris\";\nimport React from \"react\";\nimport type { Control } from \"../../../useActionForm.js\";\nimport { useFocus } from \"../../../useFocus.js\";\nimport { getPropsWithoutRef } from \"../../../utils.js\";\nimport { autoInput } from \"../../AutoInput.js\";\nimport { useJSONInputController } from \"../../hooks/useJSONInputController.js\";\n\nexport const PolarisAutoJSONInput = autoInput(\n  (\n    props: {\n      field: string; // The field API identifier\n      control?: Control<any>;\n    } & Partial<Omit<TextFieldProps, \"onChange\">>\n  ) => {\n    const [isFocused, focusProps] = useFocus();\n    const { field: _field, control: _control, ...restOfProps } = props;\n    const { type: _type, errorMessage, ...controller } = useJSONInputController(props);\n\n    const label = props.label ?? controller.label;\n    return (\n      <>\n        <TextField\n          multiline={4}\n          monospaced\n          requiredIndicator={controller.metadata.requiredArgumentForInput}\n          error={!isFocused && errorMessage && `Invalid JSON: ${errorMessage}`}\n          {...getPropsWithoutRef(controller)}\n          {...getPropsWithoutRef(focusProps)}\n          {...restOfProps}\n          label={label}\n        />\n      </>\n    );\n  }\n);\n"]}