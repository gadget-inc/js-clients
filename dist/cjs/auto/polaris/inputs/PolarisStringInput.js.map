{"version":3,"file":"PolarisStringInput.js","sourceRoot":"","sources":["../../../../../src/auto/polaris/inputs/PolarisStringInput.tsx"],"names":[],"mappings":";;;;AACA,8CAA6C;AAC7C,0DAA0B;AAE1B,qDAAgD;AAGhD,sDAAiD;AAGjD,MAAM,oBAAoB,GAA6D;IACrF,CAAC,uBAAS,CAAC,MAAM,CAAC,EAAE,QAAQ;IAC5B,CAAC,uBAAS,CAAC,KAAK,CAAC,EAAE,OAAO;IAC1B,CAAC,uBAAS,CAAC,QAAQ,CAAC,EAAE,UAAU;IAChC,CAAC,uBAAS,CAAC,eAAe,CAAC,EAAE,UAAU;CACxC,CAAC;AAEK,MAAM,kBAAkB,GAAG,CAAC,KAAoE,EAAE,EAAE;IACzG,MAAM,EACJ,KAAK,EAAE,UAAU,EACjB,UAAU,EAAE,EAAE,KAAK,EAAE,GACtB,GAAG,IAAA,+BAAa,EAAC;QAChB,IAAI,EAAE,KAAK,CAAC,IAAI;QAChB,OAAO,EAAE,KAAK,CAAC,OAAO;QACtB,KAAK,EAAE,EAAE,QAAQ,EAAE,KAAK,CAAC,KAAK,CAAC,wBAAwB,EAAE;KAC1D,CAAC,CAAC;IACH,uHAAuH;IACvH,6EAA6E;IAC7E,MAAM,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,KAAK,EAAE,GAAG,UAAU,CAAC;IAEvC,OAAO,CACL,8BAAC,mBAAS,IACV,KAAK,EAAE,KAAK,CAAC,KAAK,CAAC,IAAI,EACvB,IAAI,EAAE,oBAAoB,CAAC,KAAK,CAAC,KAAK,CAAC,SAAS,CAAC,EACjD,YAAY,EAAC,KAAK,KACd,KAAK,EACT,KAAK,EAAE,KAAK,EAAE,OAAO,GACrB,CACD,CAAC;AAER,CAAC,CAAC;AAvBW,QAAA,kBAAkB,sBAuB7B","sourcesContent":["import type { TextFieldProps } from \"@shopify/polaris\";\nimport { TextField } from \"@shopify/polaris\";\nimport React from \"react\";\nimport type { Control } from \"react-hook-form\";\nimport { useController } from \"react-hook-form\";\nimport type { GadgetFieldType } from \"../../../internal/gql/graphql.js\";\nimport type { FieldMetadata } from \"../../../metadata.js\";\nimport { FieldType } from \"../../../metadata.js\";\n\n\nconst FieldTypeToInputType: Partial<Record<GadgetFieldType, TextFieldProps[\"type\"]>> = {\n  [FieldType.Number]: \"number\",\n  [FieldType.Email]: \"email\",\n  [FieldType.Password]: \"password\",\n  [FieldType.EncryptedString]: \"password\",\n};\n\nexport const PolarisStringInput = (props: { path: string; field: FieldMetadata; control: Control<any> }) => {\n  const {\n    field: fieldProps,\n    fieldState: { error },\n  } = useController({\n    name: props.path,\n    control: props.control,\n    rules: { required: props.field.requiredArgumentForInput },\n  });\n  // many polaris components don't take refs because they are weenies, see https://github.com/Shopify/polaris/issues/1083\n  // omit the ref from the forwarded along props so that we don't get a warning\n  const { ref: _ref, ...field } = fieldProps;\n\n      return (\n        <TextField\n        label={props.field.name}\n        type={FieldTypeToInputType[props.field.fieldType]}\n        autoComplete=\"off\"\n        {...field}\n        error={error?.message}\n      />\n      );\n\n};\n"]}