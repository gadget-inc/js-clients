{"version":3,"file":"PolarisAutoEncryptedStringInput.js","sourceRoot":"","sources":["../../../../../src/auto/polaris/inputs/PolarisAutoEncryptedStringInput.tsx"],"names":[],"mappings":";;;;AACA,8CAA0C;AAC1C,0DAA4D;AAC5D,uDAAwC;AACxC,qDAA+C;AAE/C,uEAAiE;AAIjE;;;;;;;;;;;GAWG;AACU,QAAA,+BAA+B,GAAG,IAAA,wBAAS,EAAC,CAAC,KAA2C,EAAE,EAAE;IACvG,MAAM,CAAC,OAAO,EAAE,UAAU,CAAC,GAAG,IAAA,gBAAQ,EAAC,KAAK,CAAC,CAAC;IAE9C,MAAM,oBAAoB,GAAG,CAC3B,uCAAK,KAAK,EAAE,EAAE,OAAO,EAAE,MAAM,EAAE;QAC7B,8BAAC,gBAAM,IACL,OAAO,EAAC,OAAO,EACf,IAAI,EAAC,MAAM,EACX,IAAI,EAAE,OAAO,CAAC,CAAC,CAAC,wBAAQ,CAAC,CAAC,CAAC,wBAAQ,EACnC,OAAO,EAAE,GAAG,EAAE,CAAC,UAAU,CAAC,CAAC,OAAO,CAAC,EACnC,IAAI,EAAE,GAAG,KAAK,CAAC,KAAK,sBAAsB,GAC1C,CACE,CACP,CAAC;IAEF,OAAO,8BAAC,8CAAoB,IAAC,IAAI,EAAE,OAAO,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,UAAU,EAAE,MAAM,EAAE,oBAAoB,KAAM,KAAK,GAAI,CAAC;AAChH,CAAC,CAAC,CAAC","sourcesContent":["import type { TextFieldProps } from \"@shopify/polaris\";\nimport { Button } from \"@shopify/polaris\";\nimport { HideIcon, ViewIcon } from \"@shopify/polaris-icons\";\nimport React, { useState } from \"react\";\nimport { autoInput } from \"../../AutoInput.js\";\nimport { type AutoEncryptedStringInputProps } from \"../../shared/AutoInputTypes.js\";\nimport { PolarisAutoTextInput } from \"./PolarisAutoTextInput.js\";\n\nexport type PolarisAutoEncryptedStringInputProps = AutoEncryptedStringInputProps & Partial<Omit<TextFieldProps, \"value\" | \"onChange\">>;\n\n/**\n * An encrypted string input within AutoForm.\n * @example\n * ```tsx\n * <AutoForm action={api.modelA.create}>\n *   <AutoEncryptedStringInput field=\"encryptedStringField\" />\n * </AutoForm>\n * ```\n * @param props.field - API identifier of the EncryptedString field.\n * @param props.label - Label of the EncryptedString input.\n * @returns The AutoEncryptedStringInput component.\n */\nexport const PolarisAutoEncryptedStringInput = autoInput((props: PolarisAutoEncryptedStringInputProps) => {\n  const [isShown, setIsShown] = useState(false);\n\n  const showHideToggleButton = (\n    <div style={{ display: \"flex\" }}>\n      <Button\n        variant=\"plain\"\n        size=\"slim\"\n        icon={isShown ? HideIcon : ViewIcon}\n        onClick={() => setIsShown(!isShown)}\n        role={`${props.field}ToggleShowHideButton`}\n      />\n    </div>\n  );\n\n  return <PolarisAutoTextInput type={isShown ? \"text\" : \"password\"} suffix={showHideToggleButton} {...props} />;\n});\n"]}