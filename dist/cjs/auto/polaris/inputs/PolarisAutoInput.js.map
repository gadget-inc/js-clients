{"version":3,"file":"PolarisAutoInput.js","sourceRoot":"","sources":["../../../../../src/auto/polaris/inputs/PolarisAutoInput.tsx"],"names":[],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { useController } from \"react-hook-form\";\nimport type { GadgetEnumConfig } from \"../../../internal/gql/graphql.js\";\nimport { FieldType } from \"../../../metadata.js\";\nimport { useFieldMetadata } from \"../../hooks/useFieldMetadata.js\";\nimport { PolarisFileInput } from \"../PolarisFileInput.js\";\nimport { PolarisFixedOptionsCombobox } from \"../PolarisFixedOptionsCombobox.js\";\nimport { PolarisAutoJSONInput } from \"./PolarisAutoJsonInput.js\";\nimport { PolarisAutoRelationshipInput } from \"./PolarisAutoRelationshipInput.js\";\nimport { PolarisAutoRolesInput } from \"./PolarisAutoRolesInput.js\";\nimport { PolarisAutoTextInput } from \"./PolarisAutoTextInput.js\";\nimport { PolarisBooleanInput } from \"./PolarisBooleanInput.js\";\nimport { PolarisDateTimePicker } from \"./PolarisDateTimePicker.js\";\nimport { PolarisEncryptedStringInput } from \"./PolarisEncryptedStringInput.js\";\nimport { PolarisPasswordInput } from \"./PolarisPasswordInput.js\";\n\nexport const PolarisAutoInput = (props: { field: string }) => {\n  const { path, metadata } = useFieldMetadata(props.field);\n\n  const {\n    field: fieldProps,\n    fieldState: { error },\n  } = useController({\n    name: path,\n  });\n  // many polaris components don't take refs because they are weenies, see https://github.com/Shopify/polaris/issues/1083\n  // omit the ref from the forwarded along props so that we don't get a warning\n  const { ref: _ref, ...field } = fieldProps;\n\n  const config = metadata.configuration;\n  switch (config.fieldType) {\n    case FieldType.String:\n    case FieldType.Number:\n    case FieldType.Email:\n    case FieldType.Color:\n    case FieldType.Url: {\n      return <PolarisAutoTextInput field={props.field} />;\n    }\n    case FieldType.EncryptedString: {\n      return <PolarisEncryptedStringInput field={props.field} />;\n    }\n    case FieldType.Password: {\n      return <PolarisPasswordInput field={props.field} />;\n    }\n    case FieldType.Boolean: {\n      return <PolarisBooleanInput field={props.field} />;\n    }\n    case FieldType.DateTime: {\n      return <PolarisDateTimePicker field={props.field} />;\n    }\n    case FieldType.Json: {\n      return <PolarisAutoJSONInput field={props.field} />;\n    }\n    case FieldType.Enum: {\n      const config = metadata.configuration as GadgetEnumConfig;\n      return (\n        <PolarisFixedOptionsCombobox\n          label={metadata.name}\n          options={config.options.map((option) => ({ value: option.name, label: option.name }))}\n          allowMultiple={config.allowMultiple}\n          {...field}\n        />\n      );\n    }\n    case FieldType.File: {\n      return <PolarisFileInput label={metadata.name} {...field} />;\n    }\n    case FieldType.RoleAssignments: {\n      return <PolarisAutoRolesInput field={props.field} {...field} />;\n    }\n    case FieldType.HasMany:\n    case FieldType.HasOne:\n    case FieldType.BelongsTo: {\n      return <PolarisAutoRelationshipInput field={metadata.apiIdentifier} />;\n    }\n    case FieldType.HasManyThrough: {\n      // TODO: implement HasManyThrough input with join model record create/delete\n      return null;\n    }\n    case FieldType.RichText: {\n      // TODO: implement rich text input\n      return null;\n    }\n    case FieldType.Money: {\n      // TODO: implement money input\n      return null;\n    }\n\n    // Not rendered as an input\n    case FieldType.Vector:\n    case FieldType.Computed:\n      return null;\n    default: {\n      throw new Error(`Unsupported field type for Polaris AutoForm: ${metadata.fieldType}`);\n    }\n  }\n};\n"]}