{"version":3,"file":"PolarisAutoFileInput.js","sourceRoot":"","sources":["../../../../../src/auto/polaris/inputs/PolarisAutoFileInput.tsx"],"names":[],"mappings":"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","sourcesContent":["import type { DropZoneProps } from \"@shopify/polaris\";\nimport { Box, Button, DropZone, InlineError, InlineStack, Thumbnail } from \"@shopify/polaris\";\nimport { DeleteIcon, NoteIcon } from \"@shopify/polaris-icons\";\nimport { filesize } from \"filesize\";\nimport React, { useMemo } from \"react\";\nimport type { Control } from \"../../../useActionForm.js\";\nimport { isAutoFileFieldValue } from \"../../../validationSchema.js\";\nimport { autoInput } from \"../../AutoInput.js\";\nimport { getFileSizeValidationMessage, imageFileTypes, useFileInputController } from \"../../hooks/useFileInputController.js\";\n\nexport const PolarisAutoFileInput = autoInput((props: { field: string; control?: Control<any> } & Omit<DropZoneProps, \"allowMultiple\">) => {\n  const { field: fieldApiIdentifier, control, ...rest } = props;\n  const { fieldProps, errorMessage, imageThumbnailURL, onFileUpload, clearFileValue, canClearFileValue, validations, metadata } =\n    useFileInputController({\n      field: fieldApiIdentifier,\n      control,\n    });\n\n  const fileUploadContainer = useMemo(() => {\n    if (fieldProps.value) return null;\n\n    const actionHintParts = [\"Accepts\"];\n    if (validations.onlyImages) {\n      actionHintParts.push(`.jpg, .webp, .svg${validations.onlyImages.allowAnimatedImages ? \", .gif\" : \"\"}, and .png`);\n    }\n\n    if (validations.fileSize) {\n      const validation = validations.fileSize;\n      const message = getFileSizeValidationMessage(validation, {\n        inRange: (min, max) => `between ${filesize(min)} and ${filesize(max)}`,\n        max: (max) => `smaller than ${filesize(max)}`,\n        min: (min) => `larger than ${filesize(min)}`,\n      });\n      if (message) actionHintParts.push(message);\n    }\n\n    return <DropZone.FileUpload actionTitle=\"Add file\" actionHint={actionHintParts.length === 1 ? \"\" : actionHintParts.join(\" \")} />;\n  }, [fieldProps.value, validations.fileSize, validations.onlyImages]);\n\n  const filePreview = useMemo(() => {\n    const value = fieldProps.value;\n    if (!value || !isAutoFileFieldValue(value)) return null;\n\n    return (\n      <Box padding=\"100\" paddingInlineEnd={\"400\"}>\n        <InlineStack align=\"space-between\" gap=\"400\">\n          <InlineStack gap=\"200\" blockAlign=\"center\">\n            <Thumbnail\n              size=\"small\"\n              alt={value.fileName}\n              source={imageThumbnailURL && [...imageFileTypes, \"image/gif\"].includes(value.mimeType) ? imageThumbnailURL : NoteIcon}\n            />\n            <div>\n              {value.$uploading ? \"(Uploading) \" : \"\"}\n              {value.fileName}\n            </div>\n          </InlineStack>\n          {canClearFileValue && (\n            <Button\n              icon={DeleteIcon}\n              variant=\"plain\"\n              accessibilityLabel=\"Delete file\"\n              onPointerDown={() => {\n                clearFileValue();\n              }}\n              id={`clear-file-${fieldApiIdentifier}`}\n            />\n          )}\n        </InlineStack>\n      </Box>\n    );\n  }, [canClearFileValue, clearFileValue, fieldApiIdentifier, fieldProps.value, imageThumbnailURL]);\n\n  const inputLabel = (\n    <>\n      {metadata.name} {metadata.requiredArgumentForInput ? <span style={{ color: \"var(--p-color-text-critical)\" }}>*</span> : null}\n    </>\n  );\n\n  return (\n    <>\n      <DropZone\n        variableHeight\n        label={inputLabel}\n        allowMultiple={false}\n        onDrop={(_droppedFiles, acceptedFiles) => {\n          void onFileUpload(acceptedFiles);\n        }}\n        {...rest}\n        accept={validations.onlyImages?.acceptedTypes?.join(\",\")}\n      >\n        {filePreview}\n        {fileUploadContainer}\n      </DropZone>\n      {errorMessage && (\n        <div style={{ marginTop: \"4px\" }}>\n          <InlineError fieldID={fieldApiIdentifier} message={errorMessage} />\n        </div>\n      )}\n    </>\n  );\n});\n"]}