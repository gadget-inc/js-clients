{"version":3,"file":"PolarisDateTimePicker.js","sourceRoot":"","sources":["../../../../../src/auto/polaris/inputs/PolarisDateTimePicker.tsx"],"names":[],"mappings":"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","sourcesContent":["import type { DatePickerProps, TextFieldProps } from \"@shopify/polaris\";\nimport { DatePicker, Icon, InlineStack, Popover, TextField } from \"@shopify/polaris\";\nimport { CalendarIcon } from \"@shopify/polaris-icons\";\nimport { format } from \"date-fns\";\nimport { utcToZonedTime, zonedTimeToUtc } from \"date-fns-tz\";\nimport React, { useCallback, useMemo, useState } from \"react\";\nimport { useController } from \"react-hook-form\";\nimport { GadgetDateTimeConfig } from \"src/internal/gql/graphql.js\";\nimport { useFieldMetadata } from \"../../hooks/useFieldMetadata.js\";\nimport type { DateTimeState } from \"./PolarisTimePicker.js\";\nimport PolarisTimePicker from \"./PolarisTimePicker.js\";\n\nexport const copyTime = (to: Date, input: Date) => {\n  to.setHours(input.getHours());\n  to.setMinutes(input.getMinutes());\n  to.setSeconds(input.getSeconds());\n  to.setMilliseconds(input.getMilliseconds());\n};\n\nexport const getDateTimeObjectFromDate = (dateTime: Date) => {\n  return {\n    month: dateTime.getMonth(),\n    year: dateTime.getFullYear(),\n    day: dateTime.getDay(),\n    hour: dateTime.getHours() > 12 ? (dateTime.getHours() - 12).toString() : dateTime.getHours().toString(),\n    minute: dateTime.getMinutes().toString().padStart(2, \"0\"),\n    ampm: dateTime.getHours() >= 12 ? \"PM\" : \"AM\",\n  };\n};\n\nexport const getDateFromDateTimeObject = (dateTime: DateTimeState) => {\n  const date = new Date();\n  date.setMonth(dateTime.month);\n  date.setFullYear(dateTime.year);\n  date.setDate(dateTime.day);\n  date.setHours(dateTime.ampm === \"PM\" ? parseInt(dateTime.hour) + 12 : parseInt(dateTime.hour));\n  date.setMinutes(parseInt(dateTime.minute));\n  date.setSeconds(0);\n  date.setMilliseconds(0);\n  return date;\n};\n\nexport const PolarisDateTimePicker = (props: {\n  field: string;\n  id?: string;\n  value?: Date;\n  timeLabel?: string;\n  onChange?: (value: Date) => void;\n  error?: string;\n  includeTime?: boolean;\n  hideTimePopover?: boolean;\n  datePickerProps?: Partial<DatePickerProps>;\n  timePickerProps?: Partial<TextFieldProps>;\n}) => {\n  const { path, metadata } = useFieldMetadata(props.field);\n\n  const { field: fieldProps } = useController({\n    name: path,\n  });\n\n  const { onChange, value } = props;\n  const localTz = Intl.DateTimeFormat().resolvedOptions().timeZone;\n  const localTime = useMemo(() => {\n    return value ? utcToZonedTime(value, localTz) : fieldProps.value ? new Date(fieldProps.value) : undefined;\n  }, [value, fieldProps.value, localTz]);\n\n  const [datePopoverActive, setDatePopoverActive] = useState(false);\n\n  const config = metadata.configuration;\n\n  const onDateChange = useCallback<Exclude<DatePickerProps[\"onChange\"], undefined>>(\n    (range) => {\n      const date = new Date(range.start);\n      fieldProps && copyTime(date, zonedTimeToUtc(new Date(fieldProps.value), localTz));\n      onChange?.(zonedTimeToUtc(date, localTz));\n      fieldProps.onChange(zonedTimeToUtc(date, localTz));\n      setDatePopoverActive(false);\n    },\n    [onChange, localTz, fieldProps]\n  );\n\n  const toggleDatePopoverActive = useCallback(() => setDatePopoverActive((active) => !active), []);\n  const handleMonthChange = useCallback(\n    (month: number, year: number) => {\n      fieldProps.onChange(getDateFromDateTimeObject({ ...getDateTimeObjectFromDate(fieldProps.value), month, year }));\n    },\n    [fieldProps]\n  );\n\n  return (\n    <InlineStack gap=\"400\">\n      <Popover\n        preferredPosition=\"above\"\n        active={datePopoverActive}\n        activator={\n          <TextField\n            id={props.id ? `${props.id}-date` : undefined}\n            label={metadata.name ?? \"Date\"}\n            prefix={<Icon source={CalendarIcon} />}\n            autoComplete=\"off\"\n            value={localTime ? format(localTime, \"yyyy-MM-dd\") : \"\"}\n            onFocus={toggleDatePopoverActive}\n            error={props.error}\n          />\n        }\n        onClose={toggleDatePopoverActive}\n      >\n        <div style={{ padding: \"16px\" }}>\n          <DatePicker\n            month={getDateTimeObjectFromDate(zonedTimeToUtc(new Date(fieldProps.value), localTz)).month}\n            year={getDateTimeObjectFromDate(zonedTimeToUtc(new Date(fieldProps.value), localTz)).year}\n            allowRange={false}\n            onChange={onDateChange}\n            onMonthChange={handleMonthChange}\n            selected={props.value}\n            {...props.datePickerProps}\n          />\n        </div>\n      </Popover>\n      {(props.includeTime ?? (config as GadgetDateTimeConfig).includeTime) && (\n        <PolarisTimePicker\n          fieldProps={fieldProps}\n          id={props.id}\n          localTime={localTime}\n          onChange={onChange}\n          hideTimePopover={props.hideTimePopover}\n          localTz={localTz}\n          timePickerProps={props.timePickerProps}\n        />\n      )}\n    </InlineStack>\n  );\n};\n"]}