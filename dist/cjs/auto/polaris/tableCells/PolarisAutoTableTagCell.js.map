{"version":3,"file":"PolarisAutoTableTagCell.js","sourceRoot":"","sources":["../../../../../src/auto/polaris/tableCells/PolarisAutoTableTagCell.tsx"],"names":[],"mappings":";;;;AAAA,8CAA0D;AAC1D,uDAAoE;AAEpE,gDAA2D;AAE3D,MAAM,eAAe,GAAG,CAAC,CAAC;AAEnB,MAAM,uBAAuB,GAAG,CAAC,KAAoF,EAAE,EAAE;IAC9H,MAAM,EAAE,KAAK,EAAE,GAAG,KAAK,CAAC;IACxB,MAAM,CAAC,QAAQ,EAAE,WAAW,CAAC,GAAG,IAAA,gBAAQ,EAAC,KAAK,CAAC,CAAC;IAChD,MAAM,GAAG,GAAG,IAAA,cAAM,EAAiB,IAAI,CAAC,CAAC;IAEzC,MAAM,EAAE,IAAI,EAAE,cAAc,EAAE,GAAG,IAAA,eAAO,EAAC,GAAG,EAAE;QAC5C,IAAI,aAAa,GAAa,EAAE,CAAC;QAEjC,IAAI,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE,CAAC;YACzB,IAAI,IAAA,iCAAsB,EAAC,KAAK,CAAC,EAAE,CAAC;gBAClC,aAAa,GAAG,KAAK,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YACjD,CAAC;iBAAM,CAAC;gBACN,MAAM,aAAa,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC,GAAG,KAAK,IAAI,IAAI,GAAG,KAAK,SAAS,CAAa,CAAC;gBAC3F,aAAa,GAAG,aAAa,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC,CAAC;YAC7D,CAAC;QACH,CAAC;aAAM,CAAC;YACN,IAAI,KAAK,KAAK,IAAI,IAAI,KAAK,KAAK,SAAS,EAAE,CAAC;gBAC1C,aAAa,GAAG,CAAC,KAAK,CAAC,CAAC;YAC1B,CAAC;QACH,CAAC;QAED,OAAO;YACL,IAAI,EAAE,aAAa,CAAC,KAAK,CAAC,CAAC,EAAE,eAAe,CAAC;YAC7C,cAAc,EAAE,aAAa,CAAC,MAAM;SACrC,CAAC;IACJ,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC;IAEZ,IAAA,iBAAS,EAAC,GAAG,EAAE;QACb,IAAI,GAAG,CAAC,OAAO,EAAE,CAAC;YAChB,WAAW,CAAC,GAAG,CAAC,OAAO,CAAC,WAAW,GAAG,GAAG,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC;QACjE,CAAC;IACH,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC;IAEX,MAAM,iBAAiB,GAAG,8BAAC,cAAI,IAAC,EAAE,EAAC,MAAM,UAAW,CAAC;IAErD,OAAO,CACL,8BAAC,qBAAW,IAAC,GAAG,EAAC,KAAK,EAAC,IAAI,EAAE,KAAK;QAChC,uCACE,KAAK,EAAE;gBACL,KAAK,EAAE,QAAQ,CAAC,CAAC,CAAC,mBAAmB,CAAC,CAAC,CAAC,MAAM;gBAC9C,SAAS,EAAE,QAAQ;aACpB,EACD,GAAG,EAAE,GAAG;YAER,8BAAC,qBAAW,IAAC,GAAG,EAAC,KAAK,EAAC,IAAI,EAAE,KAAK;gBAC/B,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC,CACjB,8BAAC,aAAG,IAAC,GAAG,EAAE,GAAG,IAAG,GAAG,CAAO,CAC3B,CAAC;gBACD,cAAc,GAAG,eAAe,IAAI,iBAAiB,CAC1C,CACV;QACL,QAAQ,IAAI,iBAAiB,CAClB,CACf,CAAC;AACJ,CAAC,CAAC;AAtDW,QAAA,uBAAuB,2BAsDlC","sourcesContent":["import { InlineStack, Tag, Text } from \"@shopify/polaris\";\nimport React, { useEffect, useMemo, useRef, useState } from \"react\";\nimport type { Nullable, RoleAssignmentsValueType } from \"../../../utils.js\";\nimport { isRoleAssignmentsArray } from \"../../../utils.js\";\n\nconst MAX_TAGS_LENGTH = 5;\n\nexport const PolarisAutoTableTagCell = (props: { value: Nullable<string> | Nullable<string>[] | RoleAssignmentsValueType[] }) => {\n  const { value } = props;\n  const [showMore, setShowMore] = useState(false);\n  const ref = useRef<HTMLDivElement>(null);\n\n  const { tags, originalLength } = useMemo(() => {\n    let formattedTags: string[] = [];\n\n    if (Array.isArray(value)) {\n      if (isRoleAssignmentsArray(value)) {\n        formattedTags = value.map((role) => role.name);\n      } else {\n        const compactValues = value.filter((tag) => tag !== null && tag !== undefined) as string[];\n        formattedTags = compactValues.map((tag) => tag.toString());\n      }\n    } else {\n      if (value !== null && value !== undefined) {\n        formattedTags = [value];\n      }\n    }\n\n    return {\n      tags: formattedTags.slice(0, MAX_TAGS_LENGTH),\n      originalLength: formattedTags.length,\n    };\n  }, [value]);\n\n  useEffect(() => {\n    if (ref.current) {\n      setShowMore(ref.current.scrollWidth > ref.current.clientWidth);\n    }\n  }, [tags]);\n\n  const showMoreComponent = <Text as=\"span\">...</Text>;\n\n  return (\n    <InlineStack gap=\"100\" wrap={false}>\n      <div\n        style={{\n          width: showMore ? \"calc(100% - 20px)\" : \"auto\",\n          overflowX: \"hidden\",\n        }}\n        ref={ref}\n      >\n        <InlineStack gap=\"100\" wrap={false}>\n          {tags.map((tag) => (\n            <Tag key={tag}>{tag}</Tag>\n          ))}\n          {originalLength > MAX_TAGS_LENGTH && showMoreComponent}\n        </InlineStack>\n      </div>\n      {showMore && showMoreComponent}\n    </InlineStack>\n  );\n};\n"]}