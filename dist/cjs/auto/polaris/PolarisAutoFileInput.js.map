{"version":3,"file":"PolarisAutoFileInput.js","sourceRoot":"","sources":["../../../../src/auto/polaris/PolarisAutoFileInput.tsx"],"names":[],"mappings":"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","sourcesContent":["import type { DropZoneProps } from \"@shopify/polaris\";\nimport { Box, DropZone, InlineError, InlineStack, Thumbnail } from \"@shopify/polaris\";\nimport { NoteIcon } from \"@shopify/polaris-icons\";\nimport { filesize } from \"filesize\";\nimport React, { useCallback, useEffect, useMemo, useState } from \"react\";\nimport type { Control } from \"react-hook-form\";\nimport { useController } from \"react-hook-form\";\nimport { useApi } from \"../../GadgetProvider.js\";\nimport type { GadgetOnlyImageFileFieldValidation, GadgetRangeFieldValidation } from \"../../internal/gql/graphql.js\";\nimport { isAutoFileFieldValue, type AutoFileFieldValue } from \"../../validationSchema.js\";\nimport { useFieldMetadata } from \"../hooks/useFieldMetadata.js\";\n\nconst imageFileTypes = [\"image/jpeg\", \"image/png\", \"image/svg+xml\", \"image/webp\", \"image/gif\"];\n\nexport const PolarisAutoFileInput = (props: { field: string; control?: Control<any> } & DropZoneProps) => {\n  const [openFileDialog, setOpenFileDialog] = useState(false);\n  const { field: fieldApiIdentifier, control, ...rest } = props;\n  // For showing a preview of the file\n  const [imageThumbnailURL, setImageThumbnailURL] = useState<string>();\n  const { path, metadata } = useFieldMetadata(fieldApiIdentifier);\n  const api = useApi();\n\n  const {\n    field: fieldProps,\n    fieldState: { error },\n  } = useController({\n    control,\n    name: path,\n  });\n\n  const rangeValidation = useMemo(\n    () => metadata.configuration.validations.find((validation) => validation?.__typename === \"GadgetRangeFieldValidation\"),\n    [metadata]\n  ) as GadgetRangeFieldValidation | undefined;\n\n  useEffect(() => {\n    if (fieldProps.value && isAutoFileFieldValue(fieldProps.value) && fieldProps.value.url) {\n      setImageThumbnailURL(fieldProps.value.url);\n    }\n  }, [fieldProps.value]);\n\n  const onlyImages = useMemo(() => {\n    const imageValidation = metadata.configuration.validations.find(\n      (validation) => validation?.__typename === \"GadgetOnlyImageFileFieldValidation\"\n    ) as GadgetOnlyImageFileFieldValidation | undefined;\n    if (!imageValidation) return;\n\n    const acceptedTypes = [...imageFileTypes];\n    if (imageValidation.allowAnimatedImages) {\n      acceptedTypes.push(\"image/gif\");\n    }\n\n    return { acceptedTypes, allowAnimatedImages: imageValidation.allowAnimatedImages };\n  }, [metadata]);\n\n  const handleDropZoneDrop = useCallback(\n    async (_dropFiles: File[], acceptedFiles: File[], _rejectedFiles: File[]) => {\n      const file = acceptedFiles[0];\n      const baseFileValue = {\n        fileName: file.name,\n        mimeType: file.type,\n      } satisfies AutoFileFieldValue;\n\n      setImageThumbnailURL(window.URL.createObjectURL(file));\n\n      if (\n        rangeValidation &&\n        ((rangeValidation.min && file.size < rangeValidation.min) || (rangeValidation.max && file.size > rangeValidation.max))\n      ) {\n        fieldProps.onChange({\n          ...baseFileValue,\n          $invalidFileSize: file.size,\n        } satisfies AutoFileFieldValue);\n        return;\n      }\n\n      fieldProps.onChange({\n        ...baseFileValue,\n        $uploading: true,\n      } satisfies AutoFileFieldValue);\n\n      // Upload the file in the background\n      const { url, token } = await (api as any).getDirectUploadToken();\n      await fetch(url, {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": file.type,\n        },\n        body: file,\n      });\n\n      fieldProps.onChange({\n        directUploadToken: token,\n        ...baseFileValue,\n      } satisfies AutoFileFieldValue);\n    },\n    [api, fieldProps, rangeValidation]\n  );\n\n  const fileUpload = useMemo(() => {\n    if (fieldProps.value) return null;\n\n    const actionHintParts = [\"Accepts\"];\n    if (onlyImages) {\n      actionHintParts.push(`.jpg, .webp, .svg${onlyImages.allowAnimatedImages ? \", .gif\" : \"\"}, and .png`);\n    }\n\n    if (rangeValidation) {\n      if (rangeValidation.min) {\n        if (rangeValidation.max) {\n          actionHintParts.push(`between ${filesize(rangeValidation.min)} and ${filesize(rangeValidation.max)}`);\n        } else {\n          actionHintParts.push(`larger than than ${filesize(rangeValidation.min)}`);\n        }\n      } else {\n        if (rangeValidation.max) {\n          actionHintParts.push(`smaller than ${filesize(rangeValidation.max)}`);\n        }\n      }\n    }\n\n    return <DropZone.FileUpload actionTitle=\"Add file\" actionHint={actionHintParts.length === 1 ? \"\" : actionHintParts.join(\" \")} />;\n  }, [fieldProps.value, onlyImages, rangeValidation]);\n\n  const uploadedFiles = useMemo(() => {\n    const value = fieldProps.value;\n    if (!value || !isAutoFileFieldValue(value)) return null;\n    return (\n      <Box padding=\"100\">\n        <InlineStack gap=\"200\" blockAlign=\"center\">\n          <Thumbnail\n            size=\"small\"\n            alt={value.fileName}\n            source={imageThumbnailURL && imageFileTypes.includes(value.mimeType) ? imageThumbnailURL : NoteIcon}\n          />\n          <div>\n            {value.$uploading ? \"(Uploading) \" : \"\"}\n            {value.fileName}\n          </div>\n        </InlineStack>\n      </Box>\n    );\n  }, [fieldProps.value, imageThumbnailURL]);\n\n  const dropZoneLabel = (\n    <>\n      {metadata.name} {metadata.requiredArgumentForInput ? <span style={{ color: \"var(--p-color-text-critical)\" }}>*</span> : null}\n    </>\n  );\n\n  return (\n    <>\n      <DropZone\n        variableHeight\n        openFileDialog={openFileDialog}\n        label={dropZoneLabel}\n        allowMultiple={false}\n        onDrop={(...args) => {\n          void handleDropZoneDrop(...args);\n        }}\n        onFileDialogClose={() => setOpenFileDialog((prev) => !prev)}\n        {...rest}\n        accept={onlyImages?.acceptedTypes?.join(\",\")}\n      >\n        {uploadedFiles}\n        {fileUpload}\n      </DropZone>\n      {error && error.message && (\n        <div style={{ marginTop: \"4px\" }}>\n          <InlineError fieldID={fieldApiIdentifier} message={error.message} />\n        </div>\n      )}\n    </>\n  );\n};\n"]}