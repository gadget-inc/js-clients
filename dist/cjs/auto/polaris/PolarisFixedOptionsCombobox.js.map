{"version":3,"file":"PolarisFixedOptionsCombobox.js","sourceRoot":"","sources":["../../../../src/auto/polaris/PolarisFixedOptionsCombobox.tsx"],"names":[],"mappings":"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","sourcesContent":["import type { AutocompleteProps } from \"@shopify/polaris\";\nimport { Autocomplete, InlineStack, Tag } from \"@shopify/polaris\";\nimport React, { useCallback, useMemo, useState } from \"react\";\n\nexport interface EnumOption {\n  label: string;\n  value: string;\n}\n\ntype BaseComboboxProps = Omit<AutocompleteProps, \"selected\" | \"onSelect\" | \"textField\"> & {\n  label?: string;\n  options: EnumOption[];\n};\n\nexport type PolarisFixedOptionsSingleComboboxProps = BaseComboboxProps & {\n  value?: string;\n  onChange: (value: string) => void;\n  allowMultiple?: false;\n};\n\nexport type PolarisFixedOptionsMultiComboboxProps = BaseComboboxProps & {\n  value?: string[];\n  onChange: (value: string[]) => void;\n  allowMultiple: true;\n};\n\nexport type PolarisFixedOptionsComboboxProps = PolarisFixedOptionsSingleComboboxProps | PolarisFixedOptionsMultiComboboxProps;\n\nexport const PolarisFixedOptionsCombobox = (props: PolarisFixedOptionsComboboxProps) => {\n  const { label, options: allOptions, value, onChange, allowMultiple, ...rest } = props;\n  const selectedValues = useMemo(() => (value ? (allowMultiple ? value : [value]) : []), [allowMultiple, value]);\n  const selectedOptions = allOptions.filter((option) => selectedValues.includes(option.value));\n\n  const [inputValue, setInputValue] = useState(allowMultiple ? \"\" : selectedOptions[0]?.label ?? \"\");\n  const [options, setOptions] = useState(props.options);\n\n  const callOnChange = useCallback(\n    (newValues: string[]) => {\n      onChange(allowMultiple ? newValues : (newValues[0] as any));\n    },\n    [allowMultiple, onChange]\n  );\n\n  const updateText = useCallback(\n    (value: string) => {\n      setInputValue(value);\n\n      if (value === \"\") {\n        setOptions(props.options);\n        return;\n      }\n\n      const filterRegex = new RegExp(value, \"i\");\n      const resultOptions = props.options.filter((option) => option.label.match(filterRegex));\n      setOptions(resultOptions);\n    },\n    [props.options]\n  );\n\n  const updateSelection = useCallback(\n    (selected: string[]) => {\n      const selectedValue = selected.map((selectedItem) => {\n        const matchedOption = options.find((option) => {\n          return option.value.match(selectedItem);\n        });\n        return matchedOption && matchedOption.value;\n      });\n\n      callOnChange(selected);\n      if (!allowMultiple) {\n        setInputValue(selectedValue[0] || \"\");\n      }\n    },\n    [callOnChange, options]\n  );\n\n  const removeOption = useCallback(\n    (value: string) => () => {\n      const options = [...selectedValues];\n      options.splice(options.indexOf(value), 1);\n      callOnChange(options);\n    },\n    [callOnChange, selectedValues]\n  );\n\n  const verticalContentMarkup =\n    selectedOptions.length > 0 && props.allowMultiple ? (\n      <InlineStack gap=\"200\">\n        {selectedOptions.map((option) => {\n          return (\n            <Tag key={`option-${option.value}`} onRemove={removeOption(option.value)}>\n              {option.label}\n            </Tag>\n          );\n        })}\n      </InlineStack>\n    ) : null;\n\n  const textField = (\n    <Autocomplete.TextField\n      onChange={updateText}\n      label={label}\n      value={inputValue}\n      verticalContent={verticalContentMarkup}\n      placeholder=\"Search\"\n      autoComplete=\"off\"\n      id={`${label}_Autocomplete_Textfield`}\n    />\n  );\n\n  return (\n    <Autocomplete\n      options={options}\n      {...rest}\n      selected={selectedValues}\n      onSelect={updateSelection}\n      textField={textField}\n      id={`${label}_Autocomplete`}\n      allowMultiple={allowMultiple}\n    />\n  );\n};\n"]}