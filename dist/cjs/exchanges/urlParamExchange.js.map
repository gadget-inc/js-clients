{"version":3,"file":"urlParamExchange.js","sourceRoot":"","sources":["../../../src/exchanges/urlParamExchange.ts"],"names":[],"mappings":";;;AACA,qCAAyC;AAElC,MAAM,YAAY,GAAG,CAAC,GAAW,EAAE,WAAgC,EAAE,EAAE;IAC5E,MAAM,CAAC,KAAK,EAAE,MAAM,CAAC,GAAG,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;IACvC,MAAM,SAAS,GAAG,IAAI,eAAe,CAAC,MAAM,CAAC,CAAC;IAC9C,KAAK,MAAM,CAAC,GAAG,EAAE,KAAK,CAAC,IAAI,MAAM,CAAC,OAAO,CAAC,WAAW,CAAC,EAAE,CAAC;QACvD,SAAS,CAAC,GAAG,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;IAC5B,CAAC;IACD,OAAO,GAAG,KAAK,IAAI,SAAS,CAAC,QAAQ,EAAE,EAAE,CAAC;AAC5C,CAAC,CAAC;AAPW,QAAA,YAAY,gBAOvB;AAEW,QAAA,gBAAgB,GAAa,IAAA,kBAAW,EAAC;IACpD,WAAW,EAAE,CAAC,SAAS,EAAE,EAAE;QACzB,IAAI,SAAS,CAAC,OAAO,CAAC,GAAG,IAAI,SAAS,CAAC,OAAO,CAAC,aAAa,EAAE,CAAC;YAC7D,IAAI,CAAC;gBACH,SAAS,CAAC,OAAO,CAAC,GAAG,GAAG,IAAA,oBAAY,EAAC,SAAS,CAAC,OAAO,CAAC,GAAG,EAAE,EAAE,SAAS,EAAE,SAAS,CAAC,OAAO,CAAC,aAAa,EAAE,CAAC,CAAC;YAC9G,CAAC;YAAC,OAAO,KAAK,EAAE,CAAC;gBACf,2HAA2H;YAC7H,CAAC;QACH,CAAC;IACH,CAAC;CACF,CAAC,CAAC","sourcesContent":["import type { Exchange } from \"@urql/core\";\nimport { mapExchange } from \"@urql/core\";\n\nexport const addUrlParams = (url: string, paramsToAdd: Record<string, any>) => {\n  const [start, params] = url.split(\"?\");\n  const paramsObj = new URLSearchParams(params);\n  for (const [key, value] of Object.entries(paramsToAdd)) {\n    paramsObj.set(key, value);\n  }\n  return `${start}?${paramsObj.toString()}`;\n};\n\nexport const urlParamExchange: Exchange = mapExchange({\n  onOperation: (operation) => {\n    if (operation.context.url && operation.context.operationName) {\n      try {\n        operation.context.url = addUrlParams(operation.context.url, { operation: operation.context.operationName });\n      } catch (error) {\n        // not able to parse URL params, just don't add this optional param and let the rest of the system react to the invalid URL\n      }\n    }\n  },\n});\n"]}