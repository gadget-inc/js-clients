{"version":3,"file":"index.js","sourceRoot":"","sources":["../../src/index.ts"],"names":[],"mappings":";;;;AAGA,wDAA8B;AAC9B,2DAAiC;AACjC,yDAAqD;AAA5C,6GAAA,WAAW,OAAA;AACpB,+DAA2D;AAAlD,mHAAA,cAAc,OAAA;AACvB,2DAAuD;AAA9C,+GAAA,YAAY,OAAA;AACrB,iEAA6D;AAApD,qHAAA,eAAe,OAAA;AACxB,iEAA6D;AAApD,qHAAA,eAAe,OAAA;AACxB,6EAAyE;AAAhE,iIAAA,qBAAqB,OAAA;AAC9B,+DAA2D;AAAlD,mHAAA,cAAc,OAAA;AACvB,+DAA2D;AAAlD,mHAAA,cAAc,OAAA;AACvB,+DAA2D;AAAlD,mHAAA,cAAc,OAAA;AACvB,qDAA2B","sourcesContent":["import type { SET_GLOBALS_EVENT_TYPE, SetGlobalsEvent } from \"./extraEvents.js\";\nimport type { CallTool, OpenAiGlobals, RequestDisplayMode } from \"./types.js\";\n\nexport * from \"./Provider.js\";\nexport * from \"./extraEvents.js\";\nexport { useCallTool } from \"./hooks/useCallTool.js\";\nexport { useDisplayMode } from \"./hooks/useDisplayMode.js\";\nexport { useMaxHeight } from \"./hooks/useMaxHeight.js\";\nexport { useOpenAiGlobal } from \"./hooks/useOpenAiGlobal.js\";\nexport { useOpenExternal } from \"./hooks/useOpenExternal.js\";\nexport { useRequestDisplayMode } from \"./hooks/useRequestDisplayMode.js\";\nexport { useSendMessage } from \"./hooks/useSendMessage.js\";\nexport { useWidgetProps } from \"./hooks/useWidgetProps.js\";\nexport { useWidgetState } from \"./hooks/useWidgetState.js\";\nexport * from \"./types.js\";\n\n// currently copied from types.ts in chatgpt/web-sandbox.\n// Will eventually use a public package.\ntype API = {\n  callTool: CallTool;\n  sendFollowUpMessage: (args: { prompt: string }) => Promise<void>;\n  openExternal(payload: { href: string }): void;\n\n  // Layout controls\n  requestDisplayMode: RequestDisplayMode;\n};\n\n/**\n * Global oai object injected by the web sandbox for communicating with chatgpt host page.\n */\ndeclare global {\n  interface Window {\n    openai: API & OpenAiGlobals;\n  }\n\n  interface WindowEventMap {\n    [SET_GLOBALS_EVENT_TYPE]: SetGlobalsEvent;\n  }\n}\n"]}