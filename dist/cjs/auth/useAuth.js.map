{"version":3,"file":"useAuth.js","sourceRoot":"","sources":["../../../src/auth/useAuth.ts"],"names":[],"mappings":";;;AAGA,mDAA6C;AAC7C,6CAAuC;AAEvC;;;GAGG;AACI,MAAM,OAAO,GAAG,CAUrB,MAAe,EA6Bf,EAAE;IACF,MAAM,OAAO,GAAG,IAAA,0BAAU,EAAC,MAAM,CAAC,CAAC;IACnC,MAAM,IAAI,GAAG,IAAA,oBAAO,EAAC,MAAM,CAAC,CAAC;IAC7B,OAAO,EAAE,OAAO,EAAE,IAAI,EAAE,UAAU,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC;AAC/C,CAAC,CAAC;AA3CW,QAAA,OAAO,WA2ClB","sourcesContent":["import type { DefaultSelection, GadgetRecord, Select } from \"@gadgetinc/api-client-core\";\nimport type { OptionsType, ReadOperationOptions } from \"src/utils.js\";\nimport type { ClientWithSessionAndUserManagers, GadgetSession, GadgetUser } from \"./useSession.js\";\nimport { useSession } from \"./useSession.js\";\nimport { useUser } from \"./useUser.js\";\n\n/**\n * Used for fetching the current authentication state of the session\n * @returns An object with the current authentication state: `session`, `user`, and `isSignedIn`\n */\nexport const useAuth = <\n  SessionGivenOptions extends OptionsType,\n  SessionSchemaT,\n  UserGivenOptions extends OptionsType,\n  UserSchemaT,\n  SessionOptions extends Client[\"currentSession\"][\"get\"][\"optionsType\"] & ReadOperationOptions,\n  UserOptions extends Client[\"user\"][\"findMany\"][\"optionsType\"] & ReadOperationOptions,\n  Client extends ClientWithSessionAndUserManagers<SessionGivenOptions, SessionSchemaT, UserGivenOptions, UserSchemaT>,\n  ClientType extends Client | undefined\n>(\n  client?: Client\n): {\n  session:\n    | GadgetRecord<\n        Select<\n          Exclude<Exclude<ClientType, undefined>[\"currentSession\"][\"get\"][\"schemaType\"], null | undefined>,\n          DefaultSelection<\n            Exclude<ClientType, undefined>[\"currentSession\"][\"get\"][\"selectionType\"],\n            SessionOptions,\n            Exclude<ClientType, undefined>[\"currentSession\"][\"get\"][\"defaultSelection\"] & {\n              user: Exclude<ClientType, undefined>[\"user\"][\"findMany\"][\"defaultSelection\"];\n            }\n          >\n        >\n      >\n    | GadgetSession;\n  user:\n    | GadgetRecord<\n        Select<\n          Exclude<Exclude<ClientType, undefined>[\"user\"][\"findMany\"][\"schemaType\"], null | undefined>,\n          DefaultSelection<\n            Exclude<ClientType, undefined>[\"user\"][\"findMany\"][\"selectionType\"],\n            UserOptions,\n            Exclude<ClientType, undefined>[\"user\"][\"findMany\"][\"defaultSelection\"]\n          >\n        >\n      >\n    | GadgetUser;\n  isSignedIn: boolean;\n} => {\n  const session = useSession(client);\n  const user = useUser(client);\n  return { session, user, isSignedIn: !!user };\n};\n"]}