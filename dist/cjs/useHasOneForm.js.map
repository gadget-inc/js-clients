{"version":3,"file":"useHasOneForm.js","sourceRoot":"","sources":["../../src/useHasOneForm.ts"],"names":[],"mappings":";;;AAAA,gFAAkG;AAClG,gFAA0E;AAC1E,wEAA4F;AAC5F,gHAA0G;AAE1G,yDAAoD;AACpD,yCAAiC;AAEjC,iCAA4C;AAErC,MAAM,aAAa,GAAG,CAAC,KAM7B,EAAE,EAAE;IACH,IAAA,4EAAmC,EAAC,KAAK,EAAE,gBAAgB,CAAC,CAAC;IAC7D,MAAM,EAAE,IAAI,EAAE,QAAQ,EAAE,GAAG,IAAA,4CAAmB,EAAC,EAAE,KAAK,EAAE,KAAK,CAAC,KAAK,EAAE,CAAC,CAAC;IACvE,MAAM,EACJ,QAAQ,EACR,SAAS,EACT,SAAS,EAAE,EAAE,aAAa,EAAE,WAAW,EAAE,kBAAkB,EAAE,GAC9D,GAAG,IAAA,iCAAc,GAAE,CAAC;IAErB,MAAM,EAAE,MAAM,EAAE,mBAAmB,EAAE,GAAG,IAAA,4CAAmB,EAAC,KAAK,CAAC,CAAC;IACnE,MAAM,CAAC,WAAW,EAAE,cAAc,CAAC,GAAG,IAAA,gBAAQ,EAAC,KAAK,CAAC,CAAC;IACtD,MAAM,CAAC,UAAU,EAAE,aAAa,CAAC,GAAG,IAAA,gBAAQ,EAAC,KAAK,CAAC,CAAC;IACpD,MAAM,CAAC,SAAS,EAAE,YAAY,CAAC,GAAG,IAAA,gBAAQ,EAAC,KAAK,CAAC,CAAC;IAElD,MAAM,EACJ,MAAM,EACN,mBAAmB,EACnB,UAAU,EACV,YAAY,EAAE,EAAE,OAAO,EAAE,QAAQ,EAAE,SAAS,EAAE,GAC/C,GAAG,mBAAmB,CAAC;IAExB,MAAM,mBAAmB,GAAG,IAAA,+CAAsB,GAAE,CAAC;IACrD,MAAM,UAAU,GAAG,mBAAmB,EAAE,aAAa,CAAC,CAAC,CAAC,mBAAmB,CAAC,aAAa,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC;IACrH,MAAM,kBAAkB,GAAG,mBAAmB,EAAE,qBAAqB;QACnE,CAAC,CAAC,mBAAmB,CAAC,qBAAqB,CAAC,KAAK,CAAC,KAAK,CAAC;QACxD,CAAC,CAAC,UAAU,CAAC;IAEf,MAAM,eAAe,GAAG,IAAA,cAAG,EAAC,aAAa,EAAE,IAAI,CAAC,EAAE,EAAE,CAAC;IAErD,gHAAgH;IAChH,sDAAsD;IACtD,IAAA,iBAAS,EAAC,GAAG,EAAE;QACb,IAAI,kBAAkB,IAAI,MAAM,IAAI,CAAC,MAAM,CAAC,EAAE,IAAI,CAAC,CAAC,OAAO,IAAI,MAAM,CAAC,IAAI,CAAC,CAAC,SAAS,IAAI,MAAM,CAAC,IAAI,eAAe,EAAE,CAAC;YACpH,QAAQ,CAAC,IAAI,GAAG,KAAK,EAAE,eAAe,CAAC,CAAC;QAC1C,CAAC;IACH,CAAC,EAAE,CAAC,MAAM,EAAE,eAAe,EAAE,IAAI,EAAE,QAAQ,EAAE,WAAW,EAAE,kBAAkB,CAAC,CAAC,CAAC;IAE/E,MAAM,YAAY,GAAG,IAAA,2CAAsB,EAAC,KAAK,CAAC,KAAK,EAAE,KAAK,CAAC,YAAY,CAAC,CAAC;IAC7E,MAAM,SAAS,GAAG,CAAC,CAAC,CAAC,MAAM,IAAI,CAAC,CAAC,SAAS,IAAI,MAAM,IAAI,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC;IACzE,MAAM,YAAY,GAAG,MAAM,CAAC,CAAC,CAAC,IAAA,sCAAiB,EAAC,MAAM,EAAE,YAAY,EAAE,KAAK,CAAC,cAAc,EAAE,KAAK,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;IAExH,MAAM,SAAS,GAAG,QAAQ,CAAC,IAAI,IAAI,SAAS,CAAC;IAE7C,OAAO;QACL,IAAI;QACJ,QAAQ;QACR,QAAQ;QACR,MAAM;QACN,mBAAmB;QACnB,WAAW;QACX,cAAc;QACd,UAAU;QACV,aAAa;QACb,SAAS;QACT,YAAY;QACZ,MAAM;QACN,mBAAmB;QACnB,UAAU;QACV,OAAO;QACP,SAAS;QACT,UAAU;QACV,kBAAkB;QAClB,SAAS;QACT,YAAY;QACZ,SAAS;QACT,eAAe;QACf,YAAY;QACZ,cAAc,EAAE,KAAK,CAAC,cAAc;QACpC,aAAa,EAAE,KAAK,CAAC,aAAa;QAClC,SAAS;KACV,CAAC;AACJ,CAAC,CAAC;AA7EW,QAAA,aAAa,iBA6ExB","sourcesContent":["import { useAutoRelationship, useRelationshipContext } from \"./auto/hooks/useAutoRelationship.js\";\nimport { useHasOneController } from \"./auto/hooks/useHasOneController.js\";\nimport { getRecordAsOption, useOptionLabelForField } from \"./auto/hooks/useRelatedModel.js\";\nimport { useRequiredChildComponentsValidator } from \"./auto/hooks/useRequiredChildComponentsValidator.js\";\nimport type { OptionLabel } from \"./auto/interfaces/AutoRelationshipInputProps.js\";\nimport { useFormContext } from \"./useActionForm.js\";\nimport { get } from \"./utils.js\";\n\nimport { useEffect, useState } from \"react\";\n\nexport const useHasOneForm = (props: {\n  field: string;\n  children: React.ReactNode;\n  primaryLabel?: OptionLabel;\n  secondaryLabel?: OptionLabel;\n  tertiaryLabel?: OptionLabel;\n}) => {\n  useRequiredChildComponentsValidator(props, \"AutoHasOneForm\");\n  const { path, metadata } = useAutoRelationship({ field: props.field });\n  const {\n    setValue,\n    getValues,\n    formState: { defaultValues, submitCount, isSubmitSuccessful },\n  } = useFormContext();\n\n  const { record, relatedModelOptions } = useHasOneController(props);\n  const [actionsOpen, setActionsOpen] = useState(false);\n  const [searchOpen, setSearchOpen] = useState(false);\n  const [modalOpen, setModalOpen] = useState(false);\n\n  const {\n    search,\n    searchFilterOptions,\n    pagination,\n    relatedModel: { records, fetching: isLoading },\n  } = relatedModelOptions;\n\n  const relationshipContext = useRelationshipContext();\n  const pathPrefix = relationshipContext?.transformPath ? relationshipContext.transformPath(props.field) : props.field;\n  const metaDataPathPrefix = relationshipContext?.transformMetadataPath\n    ? relationshipContext.transformMetadataPath(props.field)\n    : pathPrefix;\n\n  const defaultRecordId = get(defaultValues, path)?.id;\n\n  // each time the form is submitted if the child record is created we need to set the id to the default record id\n  // that comes from the response to the action mutation\n  useEffect(() => {\n    if (isSubmitSuccessful && record && !record.id && !(\"_link\" in record) && !(\"_unlink\" in record) && defaultRecordId) {\n      setValue(path + \".id\", defaultRecordId);\n    }\n  }, [record, defaultRecordId, path, setValue, submitCount, isSubmitSuccessful]);\n\n  const primaryLabel = useOptionLabelForField(props.field, props.primaryLabel);\n  const hasRecord = !!(record && !(\"_unlink\" in record && record._unlink));\n  const recordOption = record ? getRecordAsOption(record, primaryLabel, props.secondaryLabel, props.tertiaryLabel) : null;\n\n  const childName = metadata.name ?? \"Unknown\";\n\n  return {\n    path,\n    metadata,\n    setValue,\n    record,\n    relatedModelOptions,\n    actionsOpen,\n    setActionsOpen,\n    searchOpen,\n    setSearchOpen,\n    modalOpen,\n    setModalOpen,\n    search,\n    searchFilterOptions,\n    pagination,\n    records,\n    isLoading,\n    pathPrefix,\n    metaDataPathPrefix,\n    hasRecord,\n    recordOption,\n    childName,\n    defaultRecordId,\n    primaryLabel,\n    secondaryLabel: props.secondaryLabel,\n    tertiaryLabel: props.tertiaryLabel,\n    getValues,\n  };\n};\n"]}