{"version":3,"file":"useTable.js","sourceRoot":"","sources":["../../src/useTable.tsx"],"names":[],"mappings":";;;AAQA,iCAAuD;AACvD,+CAAiD;AACjD,6CAAuC;AACvC,2DAA+G;AAI/G;;;;;;;;;;;GAWG;AACI,MAAM,QAAQ,GAAG,CAMtB,OAAwB,EACxB,OAA2F,EAG3F,EAAE;IACF,MAAM,SAAS,GAAG,OAAO,CAAC,QAAQ,CAAC,SAAS,CAAC;IAC7C,MAAM,gBAAgB,GAAa,SAAS,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;IACzG,MAAM,EACJ,QAAQ,EACR,QAAQ,EAAE,gBAAgB,EAC1B,KAAK,EAAE,aAAa,GACrB,GAAG,IAAA,8BAAgB,EAAC,OAAO,CAAC,QAAQ,CAAC,kBAAkB,EAAE,gBAAgB,CAAC,CAAC;IAC5E,MAAM,CAAC,IAAI,EAAE,OAAO,CAAC,GAAG,IAAA,gBAAQ,EAAkC,OAAO,EAAE,IAAI,CAAC,CAAC;IAEjF,MAAM,UAAU,GAAG,IAAA,mBAAW,EAAC,CAAC,OAAe,EAAE,SAAqB,EAAE,EAAE;QACxE,IAAI,SAAS,EAAE,CAAC;YACd,OAAO,CAAC,EAAE,CAAC,OAAO,CAAC,EAAE,SAAS,EAAE,CAAC,CAAC;QACpC,CAAC;aAAM,CAAC;YACN,OAAO,CAAC,SAAS,CAAC,CAAC;QACrB,CAAC;IACH,CAAC,EAAE,EAAE,CAAC,CAAC;IAEP,MAAM,SAAS,GAAG,IAAA,eAAO,EACvB,GAAG,EAAE,CAAC,QAAQ,IAAI,IAAA,yBAAY,EAAC,QAAQ,CAAC,MAAM,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,cAAc,EAAE,OAAO,CAAC,QAAQ,CAAC,gBAAgB,CAAC,EAC7H,CAAC,OAAO,CAAC,QAAQ,CAAC,gBAAgB,EAAE,QAAQ,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,cAAc,CAAC,CACzF,CAAC;IAEF,MAAM,YAAY,GAAG,IAAA,eAAO,EAAC,GAAG,EAAE,CAAC,SAAS,IAAI,IAAA,iCAAoB,EAAC,SAAS,CAAC,EAAE,CAAC,SAAS,CAAC,CAAC,CAAC;IAE9F,MAAM,CAAC,EAAE,IAAI,EAAE,QAAQ,EAAE,YAAY,EAAE,KAAK,EAAE,SAAS,EAAE,IAAI,EAAE,MAAM,EAAE,SAAS,EAAE,EAAE,OAAO,CAAC,GAAG,IAAA,oBAAO,EAAC,OAAO,EAAE;QAC9G,GAAG,OAAO;QACV,IAAI,EAAE,IAAI;QACV,MAAM,EAAE,OAAO,EAAE,MAAM;QACvB,MAAM,EAAE,YAAY;QACpB,KAAK,EAAE,CAAC,QAAQ,EAAE,4CAA4C;KACxD,CAAC,CAAC;IAEV,MAAM,SAAS,GAAG,IAAA,eAAO,EAAC,GAAG,EAAE;QAC7B,OAAO,SAAS,IAAI,IAAI,IAAI,QAAQ;YAClC,CAAC,CAAC;gBACE,IAAI,EAAE,IAAA,yBAAY,EAAC,SAAS,EAAE,IAAI,CAAC;gBACnC,OAAO,EAAE,IAAA,4BAAe,EAAC,SAAS,CAAC;gBACnC,IAAI;gBACJ,QAAQ;aACT;YACH,CAAC,CAAC;gBACE,IAAI,EAAE,IAAI;gBACV,OAAO,EAAE,IAAI;gBACb,IAAI,EAAE,IAAI;gBACV,QAAQ,EAAE,IAAI;aACf,CAAC;IACR,CAAC,EAAE,CAAC,IAAI,EAAE,QAAQ,EAAE,SAAS,CAAC,CAAC,CAAC;IAEhC,MAAM,8BAA8B,GAAG,MAAM,CAAC,KAAK,IAAI,MAAM,CAAC,cAAc,CAAC;IAC7E,MAAM,QAAQ,GAAG,YAAY,IAAI,gBAAgB,IAAI,8BAA8B,CAAC;IACpF,MAAM,KAAK,GAAG,SAAS,IAAI,aAAa,CAAC;IAEzC,OAAO;QACL;YACE,GAAG,SAAS;YACZ,IAAI;YACJ,QAAQ;YACR,KAAK;YACL,MAAM;YACN,IAAI,EAAE,UAAU;YAChB,SAAS;SACV;QACD,OAAO;KACR,CAAC;AACJ,CAAC,CAAC;AA3EW,QAAA,QAAQ,YA2EnB","sourcesContent":["import type { SortOrder } from \"@gadgetinc/api-client-core\";\nimport {\n  type DefaultSelection,\n  type FindManyFunction,\n  type GadgetRecord,\n  type LimitToKnownKeys,\n  type Select,\n} from \"@gadgetinc/api-client-core\";\nimport { useCallback, useMemo, useState } from \"react\";\nimport { useModelMetadata } from \"./metadata.js\";\nimport { useList } from \"./useList.js\";\nimport { getTableColumns, getTableRows, getTableSelectionMap, getTableSpec } from \"./useTableUtils/helpers.js\";\nimport type { TableOptions, TableResult } from \"./useTableUtils/types.js\";\nimport { type OptionsType, type ReadOperationOptions } from \"./utils.js\";\n\n/**\n * Headless React hook for powering a table showing a page of Gadget records from the backend, optionally sorted, filtered, searched, and selected from. Returns a standard hook result set with a tuple of the result object with `data`, `fetching`, and `error` keys, and a `refetch` function. `data` will be a `GadgetRecordList` object holding the list of returned records and pagination info.\n *\n * @param manager Gadget model manager to use\n * @param options options for filtering and searching records, and selecting the fields in each record of the result\n *\n * @example\n *\n * ```\n * TODO\n * ```\n */\nexport const useTable = <\n  GivenOptions extends OptionsType,\n  SchemaT,\n  F extends FindManyFunction<GivenOptions, any, SchemaT, any>,\n  Options extends F[\"optionsType\"] & ReadOperationOptions & TableOptions\n>(\n  manager: { findMany: F },\n  options?: LimitToKnownKeys<Options, F[\"optionsType\"] & ReadOperationOptions & TableOptions>\n): TableResult<\n  GadgetRecord<Select<Exclude<F[\"schemaType\"], null | undefined>, DefaultSelection<F[\"selectionType\"], Options, F[\"defaultSelection\"]>>>[]\n> => {\n  const namespace = manager.findMany.namespace;\n  const namespaceAsArray: string[] = namespace ? (Array.isArray(namespace) ? namespace : [namespace]) : [];\n  const {\n    metadata,\n    fetching: fetchingMetadata,\n    error: metadataError,\n  } = useModelMetadata(manager.findMany.modelApiIdentifier, namespaceAsArray);\n  const [sort, setSort] = useState<OptionsType[\"sort\"] | undefined>(options?.sort);\n\n  const sortColumn = useCallback((colName: string, direction?: SortOrder) => {\n    if (direction) {\n      setSort({ [colName]: direction });\n    } else {\n      setSort(undefined);\n    }\n  }, []);\n\n  const tableSpec = useMemo(\n    () => metadata && getTableSpec(metadata.fields, options?.columns, options?.excludeColumns, manager.findMany.defaultSelection),\n    [manager.findMany.defaultSelection, metadata, options?.columns, options?.excludeColumns]\n  );\n\n  const selectionMap = useMemo(() => tableSpec && getTableSelectionMap(tableSpec), [tableSpec]);\n\n  const [{ data, fetching: dataFetching, error: dataError, page, search, selection }, refresh] = useList(manager, {\n    ...options,\n    sort: sort,\n    filter: options?.filter,\n    select: selectionMap,\n    pause: !metadata, // Don't fetch data until metadata is loaded\n  } as any);\n\n  const tableData = useMemo(() => {\n    return tableSpec && data && metadata\n      ? {\n          rows: getTableRows(tableSpec, data),\n          columns: getTableColumns(tableSpec),\n          data,\n          metadata,\n        }\n      : {\n          rows: null,\n          columns: null,\n          data: null,\n          metadata: null,\n        };\n  }, [data, metadata, tableSpec]);\n\n  const isAwaitingDebouncedSearchValue = search.value != search.debouncedValue;\n  const fetching = dataFetching || fetchingMetadata || isAwaitingDebouncedSearchValue;\n  const error = dataError || metadataError;\n\n  return [\n    {\n      ...tableData,\n      page,\n      fetching,\n      error,\n      search,\n      sort: sortColumn,\n      selection,\n    },\n    refresh,\n  ];\n};\n"]}