{"version":3,"file":"Provider.js","sourceRoot":"","sources":["../../src/Provider.tsx"],"names":[],"mappings":"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","sourcesContent":["import type { AnyClient } from \"@gadgetinc/api-client-core\";\nimport { Provider as GadgetUrqlProvider, useQuery } from \"@gadgetinc/react\";\nimport type { ReactNode } from \"react\";\nimport React, { useEffect, useState } from \"react\";\nimport { GadgetAuthContext } from \"./index.js\";\n\ntype ProviderLocation = {\n  query?: URLSearchParams;\n};\n\nconst BigCommerceSessionQuery = `\n  query BigCommerceSession {\n    currentSession {\n      bigCommerceUserId\n      bigCommerceStore {\n        storeHash\n      }\n      roles {\n        key\n      }\n    }\n  }\n`;\n\nconst InnerProvider = (props: { children: ReactNode; api: AnyClient; locationLoaded: boolean; sessionToken: string | undefined }) => {\n  const { api, locationLoaded, sessionToken } = props;\n\n  const [{ data, fetching, error }] = useQuery<{\n    currentSession: { bigCommerceUserId: string; bigCommerceStore: { storeHash: string }; roles: { key: string }[] };\n  }>({\n    query: BigCommerceSessionQuery,\n    pause: !locationLoaded,\n  });\n\n  useEffect(() => {\n    if (!sessionToken) {\n      console.log(\"[gadget-react-big-commerce] no session token, skipping auth setup\");\n      return;\n    }\n\n    api.connection.setAuthenticationMode({\n      custom: {\n        async processFetch(_input, init) {\n          const headers = new Headers(init.headers);\n          headers.append(\"Authorization\", `BigCommerceSignedPayload ${sessionToken}`);\n          init.headers ??= {};\n          headers.forEach(function (value, key) {\n            (init.headers as Record<string, string>)[key] = value;\n          });\n        },\n        async processTransactionConnectionParams(params) {\n          params.auth.bigCommerceSignedPayload = sessionToken;\n        },\n      },\n    });\n  }, [api, sessionToken]);\n\n  const isAuthenticated = !!data?.currentSession?.roles?.some((role) => role.key === \"Role-BigCommerce-App\");\n  const userId = data?.currentSession?.bigCommerceUserId ?? undefined;\n  const storeHash = data?.currentSession?.bigCommerceStore?.storeHash ?? undefined;\n\n  useEffect(() => {\n    if (!isAuthenticated) {\n      return;\n    }\n\n    const BigCommerce = (window as any).Bigcommerce;\n\n    if (!BigCommerce) {\n      console.warn(\"[gadget-react-big-commerce] BigCommerce global not found, not initializing BigCommerce SDK\");\n      return;\n    }\n\n    console.debug(\"[gadget-react-big-commerce] initializing BigCommerce SDK\");\n    BigCommerce.init();\n  }, [isAuthenticated]);\n\n  console.debug(\"[gadget-react-big-commerce] provider rendering\", {\n    locationLoaded,\n    sessionToken,\n    data,\n    fetching,\n    error,\n    isAuthenticated,\n    userId,\n    storeHash,\n  });\n\n  return (\n    <GadgetAuthContext.Provider\n      value={{\n        loading: !locationLoaded || fetching,\n        error,\n        isAuthenticated,\n        userId,\n        storeHash,\n      }}\n    >\n      {props.children}\n    </GadgetAuthContext.Provider>\n  );\n};\n\nexport const Provider = ({ children, api }: { children: ReactNode; api: AnyClient }) => {\n  const [location, setLocation] = useState<ProviderLocation | null>(null);\n  const locationLoaded = !!location;\n  const { query } = location ?? {};\n  const session = query?.get(\"session\") ?? undefined;\n\n  useEffect(() => {\n    const url = new URL(window.location.href);\n    const query = new URLSearchParams(url.search);\n\n    setLocation({\n      query,\n    });\n\n    if (query.has(\"session\")) {\n      const newSearch = new URLSearchParams(url.search);\n      newSearch.delete(\"session\");\n      window.history.replaceState({}, \"\", `${url.pathname}${newSearch.toString()}${url.hash}`);\n    }\n\n    return () => {\n      window.history.replaceState({}, \"\", `${url.pathname}${url.search}${url.hash}`);\n    };\n  }, []);\n\n  return (\n    <GadgetUrqlProvider api={api}>\n      <InnerProvider api={api} sessionToken={session} locationLoaded={locationLoaded}>\n        {children}\n      </InnerProvider>\n    </GadgetUrqlProvider>\n  );\n};\n"]}