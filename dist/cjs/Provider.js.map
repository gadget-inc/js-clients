{"version":3,"file":"Provider.js","sourceRoot":"","sources":["../../src/Provider.tsx"],"names":[],"mappings":"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","sourcesContent":["import type { AnyClient } from \"@gadgetinc/api-client-core\";\nimport { Provider as GadgetUrqlProvider, useQuery } from \"@gadgetinc/react\";\nimport { useAppBridge } from \"@shopify/app-bridge-react\";\nimport type { ReactNode } from \"react\";\nimport React, { memo, useEffect, useMemo, useState } from \"react\";\nimport type { GadgetAuthContextValue } from \"./index.js\";\nimport { GadgetAuthContext } from \"./index.js\";\n\nexport enum AppType {\n  Standalone,\n  Embedded,\n}\n\n/** Internal props used to create the right structure of providers */\ntype GadgetProviderProps = {\n  children: ReactNode;\n  gadgetAppUrl: string;\n  originalQueryParams?: URLSearchParams;\n  api: AnyClient;\n  type: AppType;\n  host: string | undefined;\n  isReady: boolean;\n  isRootFrameRequest: boolean;\n};\n\nconst GetCurrentSessionQuery = `\n  query GetSessionForShopifyApp {\n    currentSession {\n      id\n      shop {\n        id\n      }\n    }\n    shopifyConnection {\n      requiresReauthentication\n    }\n  }\n`;\n\n// inner component that exists in order to ask for the app bridge\nconst InnerGadgetProvider = memo(\n  ({ children, gadgetAppUrl, originalQueryParams, api, type, host, isReady, isRootFrameRequest }: GadgetProviderProps) => {\n    const appBridge = useAppBridge();\n    // We need to be sure we're in the destination context when running any of the auth steps.\n    // Some browsers have strict policies that prevent sharing local/session storage between embedded & non-embedded contexts.\n    //\n    // We make an exception for install requests since in that scenario there's no embedded app that we can redirect to.\n    // On a browser that this policy enabled, we'll just re-run the auth process after redirecting to the embedded app.\n    const isInstallRequest = originalQueryParams?.has(\"hmac\") && originalQueryParams?.has(\"shop\");\n    const isEmbedded = appBridge.environment.embedded || appBridge.environment.mobile;\n    const inDestinationContext = isEmbedded && type === AppType.Embedded;\n    const forceRedirect = isReady && typeof host !== \"undefined\" && !inDestinationContext;\n    const [context, setContext] = useState<GadgetAuthContextValue>({\n      isAuthenticated: false,\n      isEmbedded: false,\n      canAuth: false,\n      loading: true,\n      appBridge,\n      isRootFrameRequest: false,\n    });\n\n    useEffect(() => {\n      if (!appBridge) {\n        console.debug(\"[gadget-rsab] no app bridge, skipping client auth setup\");\n        return;\n      }\n      // setup the api client to always query using the custom shopify auth implementation\n      api.connection.setAuthenticationMode({\n        custom: {\n          async processFetch(_input, init) {\n            const headers = new Headers(init.headers);\n            headers.append(\"Authorization\", `ShopifySessionToken ${await appBridge.idToken()}`);\n            init.headers ??= {};\n            headers.forEach(function (value, key) {\n              (init.headers as Record<string, string>)[key] = value;\n            });\n          },\n          async processTransactionConnectionParams(params) {\n            params.auth.shopifySessionToken = await appBridge.idToken();\n          },\n        },\n      });\n\n      console.debug(\"[gadget-rsab] set up client auth for session tokens\");\n    }, [api.connection, appBridge]);\n\n    let runningShopifyAuth = false;\n    let isAuthenticated = false;\n\n    // always run one session fetch to the gadget backend on boot to discover if this app is installed\n    const [{ data: currentSessionData, fetching: sessionFetching, error }] = useQuery({\n      query: GetCurrentSessionQuery,\n    });\n\n    if (currentSessionData) {\n      runningShopifyAuth = currentSessionData.shopifyConnection?.requiresReauthentication;\n\n      if (currentSessionData.currentSession) {\n        if (!currentSessionData.currentSession.shop) {\n          runningShopifyAuth = true;\n        } else {\n          // we may be missing scopes, if so, we aren't fully authenticated\n          isAuthenticated = !currentSessionData.shopifyConnection?.requiresReauthentication;\n        }\n      }\n    }\n\n    // redirect to Gadget to initiate the oauth process if we need to.\n    useEffect(() => {\n      if (!runningShopifyAuth || isRootFrameRequest) return;\n      // redirect to gadget app root pages url with oauth params\n      const redirectURL = new URL(\"/api/connections/auth/shopify\", gadgetAppUrl);\n      redirectURL.search = originalQueryParams?.toString() ?? \"\";\n      const redirectURLWithOAuthParams = redirectURL.toString();\n\n      console.debug(\"[gadget-rsab] redirecting to gadget to initiate oauth process\", {\n        appType: type,\n        isInstallRequest,\n        isEmbedded,\n        redirectURL: redirectURLWithOAuthParams,\n        gadgetAppUrl,\n      });\n\n      open(redirectURLWithOAuthParams, \"_top\");\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [gadgetAppUrl, isRootFrameRequest, originalQueryParams, runningShopifyAuth]);\n\n    const loading = (forceRedirect || runningShopifyAuth || sessionFetching) && !isRootFrameRequest;\n\n    useEffect(() => {\n      const context = {\n        isAuthenticated,\n        isEmbedded,\n        canAuth: !!appBridge,\n        loading,\n        appBridge,\n        error,\n        isRootFrameRequest,\n      };\n\n      console.debug(\"[gadget-rsab] context changed\", context);\n\n      return setContext(context);\n    }, [loading, isEmbedded, appBridge, isAuthenticated, error, isRootFrameRequest]);\n\n    return <GadgetAuthContext.Provider value={context}>{children}</GadgetAuthContext.Provider>;\n  }\n);\n\nconst StandaloneInnerProvider = ({\n  isRootFrameRequest,\n  children,\n  query,\n  gadgetAppUrl,\n  type,\n}: {\n  isRootFrameRequest: boolean;\n  children: ReactNode;\n  query?: URLSearchParams;\n  gadgetAppUrl: string;\n  type: AppType;\n}) => {\n  // we still need to run the oauth process if we're in an install context so we should redirect to gadget\n  const isInstallRequest = query?.has(\"hmac\") && query?.has(\"shop\");\n  const runningShopifyAuth = isInstallRequest;\n\n  // redirect to Gadget to initiate the oauth process if we need to.\n  useEffect(() => {\n    if (!runningShopifyAuth || isRootFrameRequest) return;\n    // redirect to gadget app root pages url with oauth params\n    const redirectURL = new URL(\"/api/connections/auth/shopify\", gadgetAppUrl);\n    redirectURL.search = query?.toString() ?? \"\";\n    const redirectURLWithOAuthParams = redirectURL.toString();\n\n    console.debug(\"[gadget-rsab] redirecting to gadget to initiate oauth process in standalone mode or missing app bridge global\", {\n      appType: type,\n      isInstallRequest,\n      redirectURL: redirectURLWithOAuthParams,\n      gadgetAppUrl,\n    });\n\n    window.location.assign(redirectURLWithOAuthParams);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [gadgetAppUrl, isRootFrameRequest, query, runningShopifyAuth]);\n\n  return (\n    <GadgetAuthContext.Provider\n      value={{\n        isAuthenticated: false,\n        isEmbedded: false,\n        canAuth: false,\n        loading: false,\n        appBridge: null,\n        isRootFrameRequest: isRootFrameRequest,\n      }}\n    >\n      {children}\n    </GadgetAuthContext.Provider>\n  );\n};\n\ntype ProviderLocation = {\n  query?: URLSearchParams;\n  asPath?: string;\n};\n\nexport const Provider = ({ type, children, api }: { type?: AppType; children: ReactNode; shopifyApiKey: string; api: AnyClient }) => {\n  // if we haven't properly set up the shopify global then skip anything that requires app bridge\n  const shopifyGlobalDefined = !!(globalThis && globalThis.shopify);\n  const [location, setLocation] = useState<ProviderLocation | null>(null);\n  const isReady = !!location;\n  const { query } = location ?? {};\n  const host = query?.get(\"host\") ?? undefined;\n  const coalescedType = type ?? AppType.Embedded;\n\n  // We store the original query params as that is what shopify uses to generate the HMAC in embedded apps\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  const originalQueryParams = useMemo(() => query, [isReady]);\n  // We need to inform developers if the component is being rendered in a non embedded context when it should be AND we're not in an interstitial installation state. This is determined for now by the absence of both hmac and shop. This will generally occur when someone visits the app url while not in the Shopify admin.\n  const isRootFrameRequest = !query?.has(\"hmac\") && !query?.has(\"shop\") && type == AppType.Embedded;\n\n  const gadgetAppUrl = new URL(api.connection.options.endpoint).origin;\n\n  useEffect(() => {\n    setLocation({\n      asPath: `${window.location.pathname}${window.location.search}`,\n      query: new URLSearchParams(window.location.search),\n    });\n  }, []);\n\n  console.debug(\"[gadget-rsab] provider rendering\", {\n    host,\n    coalescedType,\n    isReady,\n  });\n\n  return (\n    <GadgetUrqlProvider api={api}>\n      {shopifyGlobalDefined && coalescedType === AppType.Embedded ? (\n        <InnerGadgetProvider\n          gadgetAppUrl={gadgetAppUrl}\n          api={api}\n          originalQueryParams={originalQueryParams}\n          type={coalescedType}\n          host={host}\n          isReady={isReady}\n          isRootFrameRequest={isRootFrameRequest}\n        >\n          {children}\n        </InnerGadgetProvider>\n      ) : (\n        <StandaloneInnerProvider isRootFrameRequest={isRootFrameRequest} query={query} type={coalescedType} gadgetAppUrl={gadgetAppUrl}>\n          {children}\n        </StandaloneInnerProvider>\n      )}\n    </GadgetUrqlProvider>\n  );\n};\n"]}