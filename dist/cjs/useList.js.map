{"version":3,"file":"useList.js","sourceRoot":"","sources":["../../src/useList.ts"],"names":[],"mappings":"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","sourcesContent":["import type { DefaultSelection, FindManyFunction, GadgetRecord, LimitToKnownKeys, Select } from \"@gadgetinc/api-client-core\";\nimport type { OperationContext } from \"@urql/core\";\nimport { useCallback, useMemo, useState } from \"react\";\nimport type { SearchResult } from \"./useDebouncedSearch.js\";\nimport { useDebouncedSearch } from \"./useDebouncedSearch.js\";\nimport { useFindMany } from \"./useFindMany.js\";\nimport type { RecordSelection } from \"./useSelectedRecordsController.js\";\nimport { useSelectedRecordsController } from \"./useSelectedRecordsController.js\";\nimport type { ErrorWrapper, OptionsType, ReadOperationOptions } from \"./utils.js\";\nimport { omit } from \"./utils.js\";\n\nexport interface PaginationResult {\n  hasNextPage: boolean | undefined;\n  hasPreviousPage: boolean | undefined;\n  variables: {\n    first?: number;\n    after?: string;\n    last?: number;\n    before?: string;\n  };\n  pageSize: number;\n  goToNextPage(): void;\n  goToPreviousPage(): void;\n}\n\nexport interface ListOptions {\n  pageSize?: number;\n}\n\nexport type ListResult<Data> = [\n  {\n    data?: Data;\n    page: PaginationResult;\n    search: SearchResult;\n    selection: RecordSelection;\n    fetching: boolean;\n    error?: ErrorWrapper;\n  },\n\n  (opts?: Partial<OperationContext>) => void\n];\n\nexport const useList = <\n  GivenOptions extends OptionsType,\n  SchemaT,\n  F extends FindManyFunction<GivenOptions, any, SchemaT, any>,\n  Options extends F[\"optionsType\"] & ReadOperationOptions & ListOptions\n>(\n  manager: { findMany: F },\n  options?: LimitToKnownKeys<Options, F[\"optionsType\"] & ReadOperationOptions & ListOptions>\n): ListResult<\n  Array<\n    GadgetRecord<Select<Exclude<F[\"schemaType\"], null | undefined>, DefaultSelection<F[\"selectionType\"], Options, F[\"defaultSelection\"]>>>\n  >\n> => {\n  const [cursor, setCursor] = useState<string | undefined>();\n  const [direction, setDirection] = useState<\"forward\" | \"backward\">(\"forward\");\n  const clearCursor = useCallback(() => setCursor(undefined), []);\n\n  useMemo(() => {\n    clearCursor();\n    setDirection(\"forward\");\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [options?.sort, clearCursor]);\n\n  const { ...search } = useDebouncedSearch({\n    onDebouncedSearchValueChange() {\n      clearCursor();\n      selection.clearAll(); // Referenced before definition because selectedRecordsController needs to reference the records\n    },\n  });\n\n  const pageSize = options?.pageSize ?? DefaultPageSize;\n\n  let variables;\n  if (direction == \"forward\") {\n    variables = {\n      first: pageSize,\n      after: cursor,\n    };\n  } else {\n    variables = {\n      last: pageSize,\n      before: cursor,\n    };\n  }\n\n  const findManyOptions = omit(options, [\"pageSize\"]);\n\n  const [{ data, fetching, error }, refresh] = useFindMany(manager, {\n    ...findManyOptions,\n    ...(variables as any),\n    ...(search.debouncedValue && { search: search.debouncedValue }),\n  });\n\n  const selection = useSelectedRecordsController({ currentPageIds: data?.map((record) => (record as any).id) ?? [] });\n\n  const goToNextPage = useCallback(() => {\n    if (data && data.hasNextPage) {\n      setDirection(\"forward\");\n      setCursor(data.endCursor);\n    } else {\n      console.warn(\"can't navigate to next page currently, no next page available\");\n    }\n  }, [data]);\n\n  const goToPreviousPage = useCallback(() => {\n    if (data && data.hasPreviousPage) {\n      setDirection(\"backward\");\n      setCursor(data.startCursor);\n    } else {\n      console.warn(\"can't navigate to previous page currently, no previous page available\");\n    }\n  }, [data]);\n\n  const records = data?.map((record) => record);\n\n  const page = {\n    pageSize,\n    goToNextPage,\n    goToPreviousPage,\n    hasNextPage: data?.hasNextPage,\n    hasPreviousPage: data?.hasPreviousPage,\n    variables,\n  };\n\n  return [\n    {\n      data: records,\n      fetching,\n      page,\n      search,\n      error,\n      selection,\n    },\n    refresh,\n  ];\n};\n\nexport const DefaultPageSize = 50;\n"]}