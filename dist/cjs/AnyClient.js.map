{"version":3,"file":"AnyClient.js","sourceRoot":"","sources":["../../src/AnyClient.ts"],"names":[],"mappings":";;;AAiBA;;GAEG;AACI,MAAM,cAAc,GAAG,CAAC,MAAW,EAAuB,EAAE;IACjE,OAAO,MAAM,IAAI,YAAY,IAAI,MAAM,IAAI,MAAM,CAAC,UAAU,IAAI,UAAU,IAAI,MAAM,CAAC,UAAU,CAAC;AAClG,CAAC,CAAC;AAFW,QAAA,cAAc,kBAEzB","sourcesContent":["import type { GadgetConnection } from \"./GadgetConnection.js\";\nimport type { GadgetTransaction } from \"./GadgetTransaction.js\";\nimport type { InternalModelManager } from \"./InternalModelManager.js\";\n\n/**\n * An instance of any Gadget app's API client object\n */\nexport interface AnyClient {\n  connection: GadgetConnection;\n  query(graphQL: string, variables?: Record<string, any>): Promise<any>;\n  mutate(graphQL: string, variables?: Record<string, any>): Promise<any>;\n  transaction<T>(callback: (transaction: GadgetTransaction) => Promise<T>): Promise<T>;\n  internal: {\n    [key: string]: InternalModelManager;\n  };\n}\n\n/**\n * Checks if the given object is an instance of any Gadget app's generated JS client object\n */\nexport const isGadgetClient = (client: any): client is AnyClient => {\n  return client && \"connection\" in client && client.connection && \"endpoint\" in client.connection;\n};\n"]}