{"version":3,"file":"index.js","sourceRoot":"","sources":["../../src/index.ts"],"names":[],"mappings":"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","sourcesContent":["export interface FieldSelection {\n  [key: string]: boolean | null | undefined | FieldCall | FieldSelection;\n}\n\nexport interface BuilderOperation {\n  type: \"query\" | \"subscription\" | \"mutation\";\n  fields: FieldSelection;\n  name?: string;\n  directives?: string[];\n}\n\nconst indent = (str: string, depth: number) => {\n  return str\n    .split(\"\\n\")\n    .map((line) => \" \".repeat(depth) + line)\n    .join(\"\\n\");\n};\n\nconst compileFieldSelection = (fields: FieldSelection, onlyPresentVariableValues = false): string => {\n  const result = Object.entries(fields)\n    .map(([field, value]) => {\n      if (typeof value === \"boolean\") {\n        return value ? field : false;\n      } else if (value instanceof FieldCall) {\n        let args = \"\";\n        let entries = Object.entries(value.args).filter(([_, value]) => value !== null && value !== undefined);\n\n        if (onlyPresentVariableValues) {\n          entries = entries.filter(([_, value]) => (value instanceof Variable ? value.present() : true));\n        }\n\n        const signatures = entries.map(([name, value]) => {\n          return `${name}: ${value instanceof Variable ? `$${value.name ?? name}` : JSON.stringify(value)}`;\n        });\n        if (signatures.length > 0) {\n          args = `(${signatures.join(\", \")})`;\n        }\n\n        const subselection = value.subselection\n          ? `{ \n${compileFieldSelection(value.subselection, onlyPresentVariableValues)} \n}`\n          : \"\";\n\n        return `${field}${args} ${subselection}`;\n      } else {\n        return `${field} {\n${compileFieldSelection(value as FieldSelection, onlyPresentVariableValues)}\n}`;\n      }\n    })\n    .filter((value) => !!value)\n    .join(\"\\n\");\n\n  return indent(result, 2);\n};\n\nconst extractVariables = (fields: FieldSelection, onlyPresentVariableValues = false): Record<string, Variable> => {\n  const variables: Record<string, Variable> = {};\n  Object.entries(fields).forEach(([field, value]) => {\n    if (value instanceof FieldCall) {\n      Object.entries(value.args).forEach(([name, value]) => {\n        if (value instanceof Variable) {\n          variables[value.name ?? name] = value;\n        }\n      });\n    } else if (typeof value === \"object\" && value !== null) {\n      Object.assign(variables, extractVariables(value));\n    }\n  });\n\n  if (onlyPresentVariableValues) {\n    for (const [name, variable] of Object.entries(variables)) {\n      if (variable.value == null) {\n        delete variables[name];\n      }\n    }\n  }\n\n  return variables;\n};\n\nconst compileVariables = (operation: BuilderOperation, onlyPresentVariableValues = false) => {\n  const variables = extractVariables(operation.fields, onlyPresentVariableValues);\n\n  if (Object.keys(variables).length === 0) return \"\";\n  const signatures = Object.entries(variables).map(([name, variable]) => {\n    return `$${name}: ${variable.type}${variable.required ? \"!\" : \"\"}`;\n  });\n\n  return `(${signatures.join(\", \")})`;\n};\n\nclass FieldCall {\n  constructor(readonly args: Record<string, any>, readonly subselection?: FieldSelection) {}\n}\n\nexport interface VariableOptions {\n  type: string;\n  name?: string;\n  required?: boolean;\n  value?: any;\n}\n\n/** Represents one reference to a variable somewhere in a selection */\nexport class Variable {\n  constructor(readonly type: string, readonly required = false, readonly name?: string, readonly value?: any) {}\n  present() {\n    return this.value != null;\n  }\n}\n\n/** Used for calling a field with arguments within the main body of a query */\nexport const Call = (args: Record<string, Variable | any>, subselection?: FieldSelection) => new FieldCall(args, subselection);\n\n/** Used for calling a field with a variable within the args to a field */\nexport const Var = (options: VariableOptions) => new Variable(options.type, options.required, options.name, options.value);\n\n/** Compiles one JS object describing a query into a GraphQL string */\nexport const compile = (operation: BuilderOperation, onlyPresentVariableValues = false): string => {\n  const signature = compileVariables(operation, onlyPresentVariableValues);\n  const directives = operation.directives && operation.directives.length > 0 ? ` ${operation.directives.join(\" \")}` : \"\";\n\n  return `${operation.type} ${operation.name ?? \"\"}${signature}${directives} {\n${compileFieldSelection(operation.fields, onlyPresentVariableValues)}\n}`;\n};\n\n/** Compiles one JS object describing a query into a GraphQL string and set of variable values for passing alongside the query */\nexport const compileWithVariableValues = (operation: BuilderOperation): { query: string; variables: Record<string, any> } => {\n  const variables = extractVariables(operation.fields, true);\n\n  return {\n    query: compile(operation, true),\n    variables: Object.entries(variables ?? {}).reduce((acc, [name, variable]) => {\n      acc[name] = variable.value;\n      return acc;\n    }, {} as Record<string, any>),\n  };\n};\n"]}