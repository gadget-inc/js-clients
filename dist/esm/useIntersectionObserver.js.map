{"version":3,"file":"useIntersectionObserver.js","sourceRoot":"","sources":["../../src/useIntersectionObserver.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,WAAW,EAAE,SAAS,EAAE,MAAM,EAAE,MAAM,OAAO,CAAC;AAEvD,MAAM,CAAC,MAAM,uBAAuB,GAAG,CACrC,WAAuB,EACvB,OAAqC,EACrC,OAAkC,EAClC,EAAE;IACF,MAAM,WAAW,GAAG,MAAM,CAAiB,IAAI,CAAC,CAAC;IAEjD,MAAM,QAAQ,GAAG,WAAW,CAC1B,CAAC,OAAoC,EAAE,EAAE;QACvC,IAAI,OAAO,CAAC,CAAC,CAAC,CAAC,cAAc,EAAE,CAAC;YAC9B,WAAW,EAAE,CAAC;QAChB,CAAC;IACH,CAAC,EACD,CAAC,WAAW,CAAC,CACd,CAAC;IAEF,SAAS,CAAC,GAAG,EAAE;QACb,MAAM,IAAI,GAAG,OAAO,CAAC,OAAO,IAAI,IAAI,CAAC;QACrC,MAAM,QAAQ,GAAG,WAAW,CAAC,OAAO,CAAC;QACrC,IAAI,CAAC,QAAQ;YAAE,OAAO;QAEtB,MAAM,QAAQ,GAAG,IAAI,oBAAoB,CAAC,QAAQ,EAAE;YAClD,IAAI;YACJ,SAAS,EAAE,GAAG;YACd,GAAG,OAAO;SACX,CAAC,CAAC;QACH,QAAQ,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;QAE3B,OAAO,GAAG,EAAE;YACV,IAAI,QAAQ;gBAAE,QAAQ,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;YAC3C,QAAQ,CAAC,UAAU,EAAE,CAAC;QACxB,CAAC,CAAC;IACJ,CAAC,EAAE,CAAC,QAAQ,EAAE,OAAO,EAAE,OAAO,CAAC,CAAC,CAAC;IAEjC,OAAO,WAAW,CAAC;AACrB,CAAC,CAAC","sourcesContent":["import { useCallback, useEffect, useRef } from \"react\";\n\nexport const useIntersectionObserver = (\n  onIntersect: () => void,\n  rootRef: React.RefObject<HTMLElement>,\n  options?: IntersectionObserverInit\n) => {\n  const sentinelRef = useRef<HTMLDivElement>(null);\n\n  const callback = useCallback(\n    (entries: IntersectionObserverEntry[]) => {\n      if (entries[0].isIntersecting) {\n        onIntersect();\n      }\n    },\n    [onIntersect]\n  );\n\n  useEffect(() => {\n    const root = rootRef.current || null;\n    const sentinel = sentinelRef.current;\n    if (!sentinel) return;\n\n    const observer = new IntersectionObserver(callback, {\n      root,\n      threshold: 1.0,\n      ...options,\n    });\n    observer.observe(sentinel);\n\n    return () => {\n      if (sentinel) observer.unobserve(sentinel);\n      observer.disconnect();\n    };\n  }, [callback, rootRef, options]);\n\n  return sentinelRef;\n};\n"]}