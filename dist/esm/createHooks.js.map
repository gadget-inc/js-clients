{"version":3,"file":"createHooks.js","sourceRoot":"","sources":["../../src/createHooks.ts"],"names":[],"mappings":"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","sourcesContent":["import { $coreImplementation } from \"@gadgetinc/core\";\nimport type { AnyVariables, DocumentInput } from \"@urql/core\";\nimport type { GadgetApiContext, RuntimeAdapter } from \"./adapter.js\";\nimport type {\n  CoreHooks,\n  QueryOptions,\n  UseApi,\n  UseConnection,\n  UseCoreImplementation,\n  UseGadgetMutation,\n  UseGadgetQuery,\n  UseGadgetQueryArgs,\n} from \"./types.js\";\nimport { noProviderErrorMessage } from \"./utils.js\";\n\nconst RegisteredHooks: ((adapter: RuntimeAdapter, coreHooks: CoreHooks) => void)[] = [];\n\nexport const hookErrorMessage = (hook: string) =>\n  `You are attempting to use the ${hook} hook, but you are not calling it from a component that is wrapped in a Gadget <Provider/> component. Please ensure you are wrapping this hook with the <Provider/> component from either @gadgetinc/react or @gadgetinc/preact.`;\n\nexport const createHookStub = (hook: string, registerFn?: (adapter: RuntimeAdapter, coreHooks: CoreHooks) => void) => {\n  if (registerFn) {\n    RegisteredHooks.push(registerFn);\n  }\n  return () => {\n    throw new Error(hookErrorMessage(hook));\n  };\n};\n\nexport let useApi: UseApi = createHookStub(\"useApi\");\nexport let useConnection: UseConnection = createHookStub(\"useConnection\");\nexport let useCoreImplementation: UseCoreImplementation = createHookStub(\"useCoreImplementation\");\nexport let useQuery: UseGadgetQuery = createHookStub(\"useQuery\");\nexport let useMutation: UseGadgetMutation = createHookStub(\"useMutation\");\n\nexport const createHooks = (adapter: RuntimeAdapter) => {\n  const coreHooks = createCoreHooks(adapter);\n\n  useQuery = coreHooks.useGadgetQuery;\n  useMutation = coreHooks.useGadgetMutation;\n  useApi = coreHooks.useApi;\n  useConnection = coreHooks.useConnection;\n  useCoreImplementation = coreHooks.useCoreImplementation;\n\n  for (const registration of RegisteredHooks) {\n    registration(adapter, coreHooks);\n  }\n};\n\nconst createCoreHooks = (adapter: RuntimeAdapter): CoreHooks => {\n  const { GadgetApiContext } = adapter;\n\n  const useConnection: UseConnection = () => {\n    const { connection } = adapter.framework.useContext<GadgetApiContext>(GadgetApiContext);\n\n    if (!connection) {\n      throw new Error(\n        `urql client found in context was not set up by the Gadget API client. Please ensure you are wrapping this hook with the <Provider/> component from either @gadgetinc/react or @gadgetinc/preact.\n  \n        Possible remedies:\n         - ensuring you have the <Provider/> component wrapped around your hook invocation\n         - ensuring you are passing a value to the provider, usually <Provider api={api}>\n         - ensuring your @gadget-client/<your-app> package and your @gadgetinc/react or @gadgetinc/preact package are up to date`\n      );\n    }\n\n    return connection;\n  };\n\n  const useApi: UseApi = () => {\n    const { api } = adapter.framework.useContext<GadgetApiContext>(GadgetApiContext);\n\n    if (!api) {\n      throw new Error(\n        `useApi hook called in context where no Gadget API client is available. Please ensure you are wrapping this hook with the <Provider/> component from @gadgetinc/react.\n  \n        Possible remedies:\n         - ensuring you have the <Provider/> component wrapped around your hook invocation\n         - ensuring you are passing an api client instance to the provider, usually <Provider api={api}>\n         - ensuring your @gadget-client/<your-app> package and your @gadgetinc/react package are up to date`\n      );\n    }\n\n    return api;\n  };\n\n  const useCoreImplementation: UseCoreImplementation = () => {\n    const { api } = adapter.framework.useContext<GadgetApiContext>(GadgetApiContext);\n\n    if (!api) {\n      throw new Error(noProviderErrorMessage);\n    }\n\n    if (!api[$coreImplementation]) {\n      throw new Error(\n        `useCoreImplementation hook called in context where no Gadget core implementation is available. Please ensure you are wrapping this hook with the <Provider/> component from @gadgetinc/react.\n  \n        Possible remedies:\n         - ensuring you have the <Provider/> component wrapped around your hook invocation\n         - ensuring you are passing an api client instance to the provider, usually <Provider api={api}>\n         - ensuring your @gadget-client/<your-app> package and your @gadgetinc/react package are up to date`\n      );\n    }\n\n    return api[$coreImplementation];\n  };\n\n  const useMemoizedQueryOptions = <Options extends QueryOptions>(options?: Options): Options => {\n    const { context: _context, suspense: _suspense, ...rest } = options ?? {};\n\n    // use a memo as urql rerenders on context identity changes\n    const context = adapter.framework.useMemo(() => {\n      return {\n        suspense: !!options?.suspense,\n        ...options?.context,\n      };\n    }, [options?.suspense, options?.context]);\n\n    return {\n      ...rest,\n      context,\n    } as unknown as Options;\n  };\n\n  const useStructuralMemo = <T>(value: T) => {\n    const ref = adapter.framework.useRef<T>(value);\n\n    if (!adapter.framework.deepEqual(value, ref.current)) {\n      ref.current = value;\n    }\n\n    return ref.current;\n  };\n\n  const useGadgetQuery = <Data = any, Variables extends AnyVariables = AnyVariables>(args: UseGadgetQueryArgs<Variables, Data>) => {\n    if (!adapter.framework.useContext(GadgetApiContext)) throw new Error(noProviderErrorMessage);\n    const options = useMemoizedQueryOptions(args);\n    return adapter.urql.useQuery<Data, Variables>(options);\n  };\n\n  const useGadgetMutation = <Data = any, Variables extends AnyVariables = AnyVariables>(query: DocumentInput<Data, Variables>) => {\n    if (!adapter.framework.useContext(GadgetApiContext)) throw new Error(noProviderErrorMessage);\n    return adapter.urql.useMutation<Data, Variables>(query);\n  };\n\n  return {\n    useConnection,\n    useApi,\n    useCoreImplementation,\n    useStructuralMemo,\n    useGadgetQuery,\n    useGadgetMutation,\n  };\n};\n"]}