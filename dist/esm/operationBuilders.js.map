{"version":3,"file":"operationBuilders.js","sourceRoot":"","sources":["../../src/operationBuilders.ts"],"names":[],"mappings":"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","sourcesContent":["import type { FieldSelection as BuilderFieldSelection, BuilderOperation, Variable } from \"tiny-graphql-query-compiler\";\nimport { Call, Var, compileWithVariableValues } from \"tiny-graphql-query-compiler\";\nimport type { FieldSelection } from \"./FieldSelection.js\";\nimport type { AnyActionFunction, HasReturnType } from \"./index.js\";\nimport {\n  ErrorsSelection,\n  camelize,\n  capitalizeIdentifier,\n  filterTypeName,\n  hydrationSelection,\n  namespacify,\n  sortTypeName,\n} from \"./support.js\";\nimport type { ActionFunctionOptions, BaseFindOptions, EnqueueBackgroundActionOptions, FindManyOptions, VariablesOptions } from \"./types.js\";\n\n/**\n * Converts Selection nested object format to the tiny-graphql-query-compiler shape\n **/\nconst fieldSelectionToQueryCompilerFields = (selection: FieldSelection, includeTypename = false): BuilderFieldSelection => {\n  const output: BuilderFieldSelection = { ...selection };\n  if (includeTypename) output.__typename = true;\n  return output;\n};\n\nexport type FindFirstPaginationOptions = Omit<FindManyOptions, \"first\" | \"last\" | \"before\" | \"after\">;\n\nconst directivesForOptions = (options?: BaseFindOptions | null) => {\n  if (options?.live) return [\"@live\"];\n  return undefined;\n};\n\nexport const findOneOperation = (\n  operation: string,\n  id: string | undefined,\n  defaultSelection: FieldSelection,\n  modelApiIdentifier: string,\n  options?: BaseFindOptions | null,\n  namespace?: string | string[] | null\n) => {\n  const variables: Record<string, Variable> = {};\n  if (typeof id !== \"undefined\") variables.id = Var({ type: \"GadgetID!\", value: id });\n\n  let fields = {\n    [operation]: Call(variables, fieldSelectionToQueryCompilerFields(options?.select || defaultSelection, true)),\n  };\n\n  fields = namespacify(namespace, fields);\n\n  return compileWithVariableValues({\n    type: \"query\",\n    name: operation,\n    fields: {\n      ...fields,\n      ...hydrationSelection(modelApiIdentifier, namespace),\n    },\n    directives: directivesForOptions(options),\n  });\n};\n\nexport const findOneByFieldOperation = (\n  operation: string,\n  fieldName: string,\n  fieldValue: string,\n  defaultSelection: FieldSelection,\n  modelApiIdentifier: string,\n  options?: BaseFindOptions | null,\n  namespace?: string | string[] | null\n) => {\n  return findManyOperation(\n    operation,\n    defaultSelection,\n    modelApiIdentifier,\n    {\n      ...options,\n      first: 2,\n      filter: {\n        [fieldName]: {\n          equals: fieldValue,\n        },\n      },\n    },\n    namespace\n  );\n};\n\nexport const findManyOperation = (\n  operation: string,\n  defaultSelection: FieldSelection,\n  modelApiIdentifier: string,\n  options?: FindManyOptions,\n  namespace?: string | string[] | null\n) => {\n  let fields = {\n    [operation]: Call(\n      {\n        after: Var({ value: options?.after, type: \"String\" }),\n        first: Var({ value: options?.first, type: \"Int\" }),\n        before: Var({ value: options?.before, type: \"String\" }),\n        last: Var({ value: options?.last, type: \"Int\" }),\n        sort: options?.sort ? Var({ value: options.sort, type: `[${sortTypeName(modelApiIdentifier, namespace)}!]` }) : undefined,\n        filter: options?.filter ? Var({ value: options.filter, type: `[${filterTypeName(modelApiIdentifier, namespace)}!]` }) : undefined,\n        search: options?.search ? Var({ value: options.search, type: \"String\" }) : undefined,\n      },\n      {\n        pageInfo: { hasNextPage: true, hasPreviousPage: true, startCursor: true, endCursor: true },\n        edges: {\n          cursor: true,\n          node: fieldSelectionToQueryCompilerFields(options?.select || defaultSelection, true),\n        },\n      }\n    ),\n  };\n\n  if (namespace) {\n    fields = namespacify(namespace, fields);\n  }\n\n  return compileWithVariableValues({\n    type: \"query\",\n    name: operation,\n    fields: {\n      ...fields,\n      ...hydrationSelection(modelApiIdentifier, namespace),\n    },\n    directives: directivesForOptions(options),\n  });\n};\n\nconst variableOptionsToVariables = (variables: VariablesOptions) => {\n  return Object.fromEntries(Object.entries(variables).map(([name, options]) => [name, Var(options)]));\n};\n\nconst actionResultFieldSelection = (\n  modelSelectionField: string,\n  selection: FieldSelection,\n  isBulkAction?: boolean | null,\n  hasReturnType?: HasReturnType | null,\n  depth = 0\n) => {\n  const fieldSelection: BuilderFieldSelection =\n    depth == 0\n      ? {\n          success: true,\n          ...ErrorsSelection,\n        }\n      : {};\n\n  if (hasReturnType && typeof hasReturnType != \"boolean\") {\n    for (const [selectionField, returnTypeSelection] of Object.entries(hasReturnType)) {\n      if (\"select\" in returnTypeSelection) {\n        fieldSelection[selectionField] = fieldSelectionToQueryCompilerFields(selection, true);\n      } else {\n        fieldSelection[selectionField] = {\n          __typename: selectionField.includes(\"... on\"),\n          ...actionResultFieldSelection(modelSelectionField, selection, isBulkAction, returnTypeSelection.hasReturnType, depth + 1),\n        };\n      }\n    }\n  } else if (hasReturnType) {\n    fieldSelection[isBulkAction && depth == 0 ? \"results\" : \"result\"] = true;\n  } else if (selection) {\n    fieldSelection[modelSelectionField] = fieldSelectionToQueryCompilerFields(selection, true);\n  }\n\n  return fieldSelection as FieldSelection;\n};\n\nexport const actionOperation = (\n  operation: string,\n  defaultSelection: FieldSelection | null,\n  modelApiIdentifier: string,\n  modelSelectionField: string,\n  variables: VariablesOptions,\n  options?: BaseFindOptions | null,\n  namespace?: string | string[] | null,\n  isBulkAction?: boolean | null,\n  hasReturnType?: HasReturnType | null\n) => {\n  const selection = options?.select || defaultSelection;\n\n  let fields: BuilderFieldSelection = {\n    [operation]: Call(\n      variableOptionsToVariables(variables),\n      actionResultFieldSelection(modelSelectionField, selection, isBulkAction, hasReturnType)\n    ),\n  };\n\n  fields = namespacify(namespace, fields);\n\n  const actionOperation: BuilderOperation = {\n    type: \"mutation\",\n    name: operation,\n    fields: {\n      ...fields,\n      ...hydrationSelection(modelApiIdentifier, namespace),\n    },\n    directives: directivesForOptions(options),\n  };\n\n  return compileWithVariableValues(actionOperation);\n};\n\nexport const backgroundActionResultOperation = <Action extends AnyActionFunction, Options extends ActionFunctionOptions<Action>>(\n  id: string,\n  action: Action,\n  options?: Options\n) => {\n  let fields: FieldSelection = {};\n  let resultType: string;\n\n  const backgroundAction = action.isBulk && action.singleAction ? action.singleAction : action;\n\n  let operationName = backgroundAction.operationName;\n  if (backgroundAction.isBulk) {\n    operationName = backgroundAction.operationName.replace(/^bulk/, \"\").replace(/s$/, \"\");\n  }\n\n  if (!backgroundAction.operationReturnType) {\n    resultType = `${camelize(operationName)}Result`;\n  } else {\n    resultType = `${backgroundAction.operationReturnType}Result`;\n  }\n\n  switch (backgroundAction.type) {\n    case \"action\": {\n      const selection = options?.select || backgroundAction.defaultSelection;\n\n      fields = {\n        [`... on ${resultType}`]: actionResultFieldSelection(\n          backgroundAction.modelApiIdentifier,\n          selection,\n          backgroundAction.isBulk,\n          backgroundAction.hasReturnType\n        ),\n      };\n      break;\n    }\n    case \"globalAction\": {\n      fields = {\n        [`... on ${resultType}`]: globalActionFieldSelection(),\n      };\n    }\n  }\n\n  const actionResultOperation: BuilderOperation = {\n    type: \"subscription\",\n    name: capitalizeIdentifier(operationName) + \"BackgroundResult\",\n    fields: {\n      backgroundAction: Call(\n        { id: Var({ value: id, type: \"String!\" }) },\n        {\n          id: true,\n          outcome: true,\n          result: {\n            ...fields,\n          },\n        }\n      ),\n    },\n  };\n\n  return compileWithVariableValues(actionResultOperation);\n};\n\n/** @deprecated previous export name, @see backgroundActionResultOperation */\nexport const actionResultOperation = backgroundActionResultOperation;\n\nconst globalActionFieldSelection = () => {\n  return {\n    success: true,\n    ...ErrorsSelection,\n    result: true,\n  } as FieldSelection;\n};\n\nexport const globalActionOperation = (\n  operation: string,\n  variables: VariablesOptions,\n  namespace?: string | string[] | null,\n  options?: { live?: boolean }\n) => {\n  let fields: BuilderFieldSelection = {\n    [operation]: Call(variableOptionsToVariables(variables), globalActionFieldSelection()),\n  };\n\n  fields = namespacify(namespace, fields);\n\n  return compileWithVariableValues({\n    type: \"mutation\",\n    name: operation,\n    fields,\n    directives: directivesForOptions(options),\n  });\n};\n\nexport interface GraphQLBackgroundActionOptions {\n  retries?: { retryCount: number };\n  queue?: { name: string; maxConcurrency?: number };\n  priority?: \"LOW\" | \"DEFAULT\" | \"HIGH\";\n  startAt?: string;\n}\n\nexport const graphqlizeBackgroundOptions = (options?: EnqueueBackgroundActionOptions<any> | null) => {\n  if (!options) return null;\n\n  const obj = { ...options };\n  if (typeof obj.retries == \"number\") {\n    obj.retries = {\n      retryCount: obj.retries,\n    };\n  }\n\n  if (typeof obj.queue == \"string\") {\n    obj.queue = {\n      name: obj.queue,\n    };\n  }\n\n  if (obj.startAt instanceof Date) {\n    obj.startAt = obj.startAt.toISOString();\n  }\n\n  for (const key of Object.keys(obj)) {\n    if ([\"id\", \"retries\", \"queue\", \"priority\", \"startAt\"].includes(key)) continue;\n    delete obj[key];\n  }\n\n  return obj as GraphQLBackgroundActionOptions;\n};\n\nexport const enqueueActionOperation = (\n  operation: string,\n  variables: VariablesOptions,\n  namespace?: string | string[] | null,\n  options?: EnqueueBackgroundActionOptions<any> | null,\n  isBulk?: boolean\n) => {\n  let fields: BuilderFieldSelection = {\n    [operation]: Call(\n      {\n        ...variableOptionsToVariables(variables),\n        backgroundOptions: Var({\n          type: \"EnqueueBackgroundActionOptions\",\n          value: graphqlizeBackgroundOptions(options),\n        }),\n      },\n      {\n        success: true,\n        errors: {\n          message: true,\n          code: true,\n        },\n        [isBulk ? \"backgroundActions\" : \"backgroundAction\"]: {\n          id: true,\n        },\n      }\n    ),\n  };\n\n  fields = namespacify(namespace, fields);\n\n  return compileWithVariableValues({\n    type: \"mutation\",\n    name: \"enqueue\" + camelize(operation),\n    fields: {\n      background: fields,\n    },\n  });\n};\n"]}