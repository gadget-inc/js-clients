{"version":3,"file":"utils.js","sourceRoot":"","sources":["../../src/utils.ts"],"names":[],"mappings":"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","sourcesContent":["import type { AnyClient, AnyModelManager } from \"@gadgetinc/api-client-core\";\nimport { namespaceDataPath } from \"@gadgetinc/api-client-core\";\nimport type { RefCallback, RefObject } from \"react\";\n\n/**\n * Get a list of path segments from a dot-separated path\n */\nconst pathToPathArray = (path: string | string[]) => {\n  // Check if path is string or array. Regex : ensure that we do not have '.' and brackets.\n  // Regex explained: https://regexr.com/58j0k\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n  return Array.isArray(path) ? path : path.match(/([^[.\\]])+/g)!;\n};\n\n/**\n * Get a dot-separated path from an object\n * From https://youmightnotneed.com/lodash\n */\nexport const get = (obj: any, path: string | string[]) => {\n  if (!path) return undefined;\n  return pathToPathArray(path).reduce((prevObj, key) => prevObj && prevObj[key], obj);\n};\n\n/**\n * Set a dot-separated path to a value on an object\n * From https://youmightnotneed.com/lodash\n */\nexport const set = (obj: any, path: string, value: any) => {\n  const pathArray = pathToPathArray(path);\n  pathArray.reduce((acc, key, i) => {\n    if (acc[key] === undefined) acc[key] = {};\n    if (i === pathArray.length - 1) acc[key] = value;\n    return acc[key];\n  }, obj);\n};\n\n/**\n * Based on Lodash uniqBy to ensure all array elements are unique by a property\n * https://youmightnotneed.com/lodash\n */\nexport const uniqByProperty = (arr: any[], property: string) => {\n  const getPropertyValue = (item: any) => item[property];\n  return arr.filter((x, i, self) => i === self.findIndex((y) => getPropertyValue(x) === getPropertyValue(y)));\n};\n\n/**\n * Based on Lodash uniq to ensure all array elements are unique\n * https://youmightnotneed.com/lodash\n */\nexport const uniq = (arr: any[]) => [...new Set(arr)];\n\n/**\n * Based on Lodash compact to ensure all array elements are truthy\n * https://youmightnotneed.com/lodash\n */\nexport const compact = (arr: any[]) => arr.filter((x) => !!x);\n\n/**\n * Removes the property at path of object.\n * From https://youmightnotneed.com/lodash\n */\nexport const unset = (obj: any, path: string) => {\n  const pathArray = pathToPathArray(path);\n\n  pathArray.reduce((acc, key, i) => {\n    if (i === pathArray.length - 1) delete acc[key];\n    return acc[key];\n  }, obj);\n};\n\n/**\n * Omits the given properties from an object\n * From https://youmightnotneed.com/lodash\n */\nexport const omit = (obj: any, omittedProperties: string[], safe = false) => {\n  obj = { ...obj };\n  omittedProperties.forEach((prop) => {\n    if (safe && !(prop in obj)) {\n      return;\n    }\n    delete obj[prop];\n  });\n  return obj;\n};\n\n/**\n * Wrapper to make a debounced function\n * NOTE: When using this within a React component, make sure to wrap this in a `useCallback` so that the previous timeoutId is preserved between renders.\n */\n// eslint-disable-next-line @typescript-eslint/ban-types\nexport const debounce = (fn: Function, delayInMs = 300) => {\n  let timeoutId: ReturnType<typeof setTimeout>;\n\n  return (...args: any[]) => {\n    clearTimeout(timeoutId);\n    timeoutId = setTimeout(() => fn.apply(this, args), delayInMs);\n  };\n};\n\nexport const getModelManager = (\n  apiClient: AnyClient,\n  apiIdentifier: string,\n  namespace?: string[] | string | null\n): AnyModelManager | undefined => {\n  return get(apiClient, namespaceDataPath([apiIdentifier], namespace).join(\".\"));\n};\n\ntype SortOrder = \"asc\" | \"desc\";\nexport const sortByProperty = <T>(arr: T[], property: keyof T, options?: { order?: SortOrder; transform?: (value: any) => any }): T[] => {\n  const { order = \"asc\", transform } = options ?? {};\n\n  return arr.sort((a, b) => {\n    const aValue = transform ? transform(a[property]) : a[property];\n    const bValue = transform ? transform(b[property]) : b[property];\n\n    if (aValue < bValue) {\n      return order === \"asc\" ? -1 : 1;\n    }\n    if (aValue > bValue) {\n      return order === \"asc\" ? 1 : -1;\n    }\n    return 0;\n  });\n};\n\n/**\n * In some cases, we need to exclude the `ref` property from the original object (e.g. input controllers) to prevent from showing up a warning message from React.\n * This function helps to get the object without the `ref` property.\n *\n * Check out https://github.com/gadget-inc/js-clients/pull/466 for more details.\n */\nexport const getPropsWithoutRef = <T extends { ref: RefCallback<any> | RefObject<any> }>(props: T) => {\n  const { ref: _ref, ...rest } = props;\n  return rest;\n};\n\nexport type RichTextValueType = {\n  markdown: string;\n  __typename: \"RichText\";\n};\n\nexport type RoleAssignmentsValueType = {\n  key: string;\n  name: string;\n  __typename: \"Role\";\n};\n\nexport type FileValueType = {\n  url: string;\n  mimeType: string;\n  fileName: string;\n  __typename: \"StoredFile\";\n};\n\nexport type ValueWithTypename = {\n  __typename: string;\n  [key: string]: ColumnValueType;\n};\n\nexport type HasManyValueType = {\n  __typename: string;\n  edges: {\n    node: ValueWithTypename;\n  }[];\n};\n\nexport type Nullable<T> = T | null;\n\nexport type ColumnValueType =\n  | Nullable<string>\n  | Nullable<number>\n  | Nullable<boolean>\n  | Nullable<Date>\n  | null\n  | Nullable<string>[]\n  | Array<null>\n  | RoleAssignmentsValueType[]\n  | Nullable<FileValueType>\n  | Nullable<RichTextValueType>\n  | Nullable<ValueWithTypename>\n  | Nullable<HasManyValueType>;\n\nexport const isRoleAssignmentsArray = (value: ColumnValueType): value is RoleAssignmentsValueType[] => {\n  if (!Array.isArray(value) || value.length === 0) return false;\n  if (!value.every((item) => item !== null && typeof item === \"object\" && \"__typename\" in item && item.__typename === \"Role\")) return false;\n  return true;\n};\n\n/**\n * Humanizes a camelCase string by adding spaces between words and capitalizing the first letter\n * Examples\n *    humanizeCamelCase(\"createNewWidget\") => \"Create New Widget\"\n *    humanizeCamelCase(\"do99Things\") => \"Do 99 Things\"\n */\nexport const humanizeCamelCase = (camelCaseString: string): string => {\n  // Regular expression to find sequences of lowercase letters or digits followed by uppercase letters\n  const uppercaseAfterLowercaseRegex = /([a-z\\d])([A-Z])/g;\n\n  // Add a space between the lowercase letter or digit and the uppercase letter\n  let humanized = camelCaseString.replace(uppercaseAfterLowercaseRegex, \"$1 $2\");\n\n  // Adjust to keep sequential numbers together with spaces around them\n  humanized = humanized.replace(/([a-zA-Z])(\\d)/g, \"$1 $2\");\n  humanized = humanized.replace(/(\\d)([a-zA-Z])/g, \"$1 $2\");\n\n  // Capitalize the first letter\n  return humanized.replace(/^./, (str) => str.toUpperCase());\n};\n\nexport const deepMerge = (obj1: any, obj2: any) => {\n  for (const key in obj2) {\n    if (Object.prototype.hasOwnProperty.call(obj2, key)) {\n      if (obj2[key] instanceof Object && obj1[key] instanceof Object) {\n        obj1[key] = deepMerge(obj1[key], obj2[key]);\n      } else {\n        obj1[key] = obj2[key];\n      }\n    }\n  }\n  return obj1;\n};\n\n/**\n * Deep flattens an object by converting all nested objects into a single level of keys.\n * Example:\n *    deepFlattenObject( { a: { b: { c: 1, d: 2, }, e: 3, }, f: 4, }} ) => {\n *      \"a.b.c\": 1, \"a.b.d\": 2, \"a.e\": 3, \"f\": 4\n *    }\n * @param obj - The object to flatten.\n * @param parentKey - The current key path in the object.\n * @param separator - The separator to use between keys.\n * @returns A flattened object with keys separated by the specified separator.\n */\nexport const deepFlattenObject = (obj: any, parentKey = \"\", separator = \".\"): Record<string, any> => {\n  const result: Record<string, any> = {};\n\n  for (const key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      const newKey = parentKey ? `${parentKey}${separator}${key}` : key;\n\n      if (typeof obj[key] === \"object\" && obj[key] !== null && !Array.isArray(obj[key])) {\n        Object.assign(result, deepFlattenObject(obj[key], newKey, separator));\n      } else {\n        result[newKey] = obj[key];\n      }\n    }\n  }\n\n  return result;\n};\n\n/**\n * Get a list of all the keys in a flattened object\n * @param obj - The object to flatten\n * @returns A list of all the keys in the flattened object\n */\nexport const getFlattenedObjectKeys = (obj: any) => {\n  return Object.keys(deepFlattenObject(obj));\n};\n\nexport const groupPaths = (paths: string[], uniquePaths = true) => {\n  const groups: Record<string, string[]> = {};\n\n  const pathsToGroup = uniquePaths ? Array.from(new Set(paths)) : paths;\n\n  for (const path of pathsToGroup) {\n    const [rootSegment, ...childSegments] = path.split(\".\");\n\n    groups[rootSegment] ??= [];\n\n    if (childSegments.length) {\n      groups[rootSegment].push(childSegments.join(\".\"));\n    }\n  }\n\n  return groups;\n};\n\n/**\n * Get the step value for a number input based on the number of decimals\n * @param numberOfDecimals - The number of decimals\n * @returns The step value\n */\nexport const getStepFromNumberOfDecimals = (numberOfDecimals: number) =>\n  numberOfDecimals === 0 ? 1 : Number(`0.${\"0\".repeat(numberOfDecimals - 1)}1`);\n\n/**\n * Count the number of decimals in a string\n * @param value - The string to count the decimals in\n * @returns The number of decimals\n */\nexport const countNumberOfDecimals = (value: string) => {\n  if (value.includes(\"e\")) {\n    // +e scientific notation for large numbers does not get decimal steps\n    return 0;\n  }\n  const [, decimals] = value.split(\".\");\n  return decimals?.length ?? 0;\n};\n\n/**\n * Get an error message from an error string\n * @param errorString - The error string\n * @returns The error message\n */\nexport const getErrorMessage = (errorString: string) => {\n  if (errorString.includes(\"GGT_PERMISSION_DENIED\")) return `Missing permissions. Cannot read related model`;\n\n  if (errorString.includes(\"GGT_INVALID_STORED_DATA\")) return `Invalid records found in related model`;\n\n  return \"Cannot retrieve records from related model\";\n};\n"]}