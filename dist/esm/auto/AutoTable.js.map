{"version":3,"file":"AutoTable.js","sourceRoot":"","sources":["../../../src/auto/AutoTable.tsx"],"names":[],"mappings":"","sourcesContent":["import type { FindManyFunction, GadgetRecord } from \"@gadgetinc/api-client-core\";\nimport { type DefaultSelection, type Select } from \"@gadgetinc/api-client-core\";\nimport type { TableOptions, TableRow } from \"../use-table/types.js\";\nimport type { OptionsType } from \"../utils.js\";\n\n/**\n * The props to pass to an AutoTable. Includes both the Gadget-land props as well as the adapter specific props.\n **/\nexport type AutoTableProps<\n  GivenOptions extends OptionsType,\n  SchemaT,\n  FinderFunction extends FindManyFunction<GivenOptions, any, SchemaT, any>,\n  Options extends FinderFunction[\"optionsType\"]\n> = {\n  model: { findMany: FinderFunction };\n  select?: Options[\"select\"];\n  pageSize?: number;\n  initialCursor?: string;\n  initialDirection?: string;\n  live?: boolean;\n  columns?: TableOptions[\"columns\"];\n  excludeColumns?: string[];\n  onClick?: (\n    row: TableRow,\n    record: GadgetRecord<\n      Select<\n        Exclude<FinderFunction[\"schemaType\"], null | undefined>,\n        DefaultSelection<FinderFunction[\"selectionType\"], Options, FinderFunction[\"defaultSelection\"]>\n      >\n    >\n  ) => void;\n  initialSort?: Options[\"sort\"];\n  filter?: Options[\"filter\"];\n  actions?: TableOptions[\"actions\"];\n  excludeActions?: TableOptions[\"excludeActions\"];\n  selectable?: boolean;\n  emptyState?: React.ReactNode;\n  lastColumnSticky?: boolean;\n  hasZebraStriping?: boolean;\n  resourceName?: { singular: string; plural: string };\n  condensed?: boolean;\n  searchable?: boolean;\n  searchValue?: string;\n  paginate?: boolean;\n};\n"]}