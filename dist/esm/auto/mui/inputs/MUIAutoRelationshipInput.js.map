{"version":3,"file":"MUIAutoRelationshipInput.js","sourceRoot":"","sources":["../../../../../src/auto/mui/inputs/MUIAutoRelationshipInput.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,YAAY,EAAE,GAAG,EAAE,SAAS,EAAE,UAAU,EAAE,MAAM,eAAe,CAAC;AACzE,OAAO,KAAK,MAAM,OAAO,CAAC;AAC1B,OAAO,EAAE,8BAA8B,EAAE,MAAM,+CAA+C,CAAC;AAG/F,MAAM,CAAC,MAAM,qBAAqB,GAAG,CAAC,KAAiC,EAAE,EAAE;IACzE,OAAO,oBAAC,wBAAwB,OAAK,KAAK,GAAI,CAAC;AACjD,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,wBAAwB,GAAG,CAAC,KAAiC,EAAE,EAAE;IAC5E,MAAM,EAAE,KAAK,EAAE,OAAO,EAAE,WAAW,EAAE,GAAG,KAAK,CAAC;IAE9C,MAAM,EAAE,IAAI,EAAE,SAAS,EAAE,YAAY,EAAE,QAAQ,EAAE,UAAU,EAAE,MAAM,EAAE,SAAS,EAAE,GAAG,8BAA8B,CAAC;QAChH,KAAK,EAAE,KAAK;QACZ,OAAO,EAAE,OAAO;QAChB,WAAW,EAAE,WAAW;KACzB,CAAC,CAAC;IAEH,IAAI,SAAS,EAAE,CAAC;QACd,sGAAsG;QACtG,OAAO,IAAI,CAAC;IACd,CAAC;IAED,OAAO,CACL,oBAAC,YAAY,IACX,EAAE,EAAE,GAAG,SAAS,CAAC,EAAE,IAAI,SAAS,CAAC,KAAK,EAAE,EACxC,YAAY,EAAE,CAAC,KAAK,EAAE,MAAM,EAAE,EAAE;YAC9B,MAAM,gBAAgB,GAAG,MAAM,CAAC,QAAQ,KAAK,IAAI,CAAC;YAClD,MAAM,UAAU,GAAG,MAAM,CAAC,QAAQ,KAAK,SAAS,CAAC,EAAE,CAAC;YACpD,OAAO,gBAAgB,IAAI,YAAY,CAAC,WAAW,CAAC,CAAC,CAAC,CACpD,oBAAC,GAAG,OACE,KAAK,EACT,SAAS,EAAC,IAAI,EACd,OAAO,EAAE,GAAG,EAAE,CAAC,SAAS,EACxB,WAAW,EAAE,GAAG,EAAE,CAAC,UAAU,CAAC,qBAAqB,EAAE;gBAMrD,oBAAC,UAAU,IAAC,KAAK,EAAE,MAAM,IAAG,mBAAmB,CAAC,KAAK,CAAc,CAC/D,CACP,CAAC,CAAC,CAAC,CACF,oBAAC,GAAG,IAAC,SAAS,EAAC,IAAI,KAAK,KAAK;gBAC1B,UAAU,IAAI,KAAK;gBACnB,MAAM,CAAC,KAAK,CACT,CACP,CAAC;QACJ,CAAC,EACD,OAAO,EAAE,CAAC,GAAG,YAAY,CAAC,OAAO,EAAE,mBAAmB,CAAC,EACvD,QAAQ,EAAE,CAAC,CAAC,EAAE,aAAa,EAAE,EAAE,CAAC,SAAS,CAAC,GAAG,CAAC,SAAS,CAAC,EAAE,KAAK,aAAa,CAAC,QAAQ,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,aAAa,CAAC,QAAQ,CAAC,EAC3H,OAAO,EAAE,GAAG,EAAE,CAAC,MAAM,CAAC,GAAG,EAAE,EAC3B,WAAW,EAAE,CAAC,MAAM,EAAE,EAAE,CAAC,CACvB,oBAAC,SAAS,OAAK,MAAM,EAAE,KAAK,EAAE,MAAM,CAAC,KAAK,EAAE,KAAK,EAAE,QAAQ,CAAC,IAAI,EAAE,QAAQ,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE,IAAI,EAAE,IAAI,GAAI,CAC9H,GACa,CACjB,CAAC;AACJ,CAAC,CAAC;AAEF,MAAM,mBAAmB,GAAG,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,WAAW,EAAE,CAAC","sourcesContent":["import { Autocomplete, Box, TextField, Typography } from \"@mui/material\";\nimport React from \"react\";\nimport { useRelationshipInputController } from \"../../hooks/useRelationshipInputController.js\";\nimport { AutoRelationshipInputProps } from \"../../interfaces/AutoRelationshipInputProps.js\";\n\nexport const MUIAutoBelongsToInput = (props: AutoRelationshipInputProps) => {\n  return <MUIAutoRelationshipInput {...props} />;\n};\n\nexport const MUIAutoRelationshipInput = (props: AutoRelationshipInputProps) => {\n  const { field, control, optionLabel } = props;\n\n  const { path, isHasMany, relatedModel, metadata, pagination, search, selection } = useRelationshipInputController({\n    field: field,\n    control: control,\n    optionLabel: optionLabel,\n  });\n\n  if (isHasMany) {\n    // TODO - Update to account for HasMany relationship. Multiselect functionality and more advanced hook\n    return null;\n  }\n\n  return (\n    <Autocomplete\n      id={`${selection.id}_${selection.label}`}\n      renderOption={(props, option) => {\n        const isShowMoreButton = option.recordId === \"-1\";\n        const isSelected = option.recordId === selection.id;\n        return isShowMoreButton && relatedModel.hasNextPage ? (\n          <Box\n            {...props}\n            component=\"li\"\n            onClick={() => undefined} // Overriding the default onClick makes this un-selectable\n            onMouseOver={() => pagination.loadNextPageOfRecords()}\n          >\n            {/* TODO \n              - Implement a ListBox type of component that automatically loads more records when scrolled to the bottom\n              - Currently using a `hover to show more` approach since scroll controls need debouncing and scroll position tracking systems\n            */}\n            <Typography color={\"blue\"}>{showMoreHoverOption.label}</Typography>\n          </Box>\n        ) : (\n          <Box component=\"li\" {...props}>\n            {isSelected && `✔️ `}\n            {option.label}\n          </Box>\n        );\n      }}\n      options={[...relatedModel.options, showMoreHoverOption]}\n      onChange={(e, selectedValue) => selection.set(selection.id === selectedValue.recordId ? undefined : selectedValue.recordId)}\n      onClose={() => search.set()}\n      renderInput={(params) => (\n        <TextField {...params} value={search.value} label={metadata.name} onChange={(e) => search.set(e.target.value)} name={path} />\n      )}\n    ></Autocomplete>\n  );\n};\n\nconst showMoreHoverOption = { recordId: \"-1\", label: \"Show more\" };\n"]}