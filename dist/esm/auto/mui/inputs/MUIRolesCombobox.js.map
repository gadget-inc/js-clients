{"version":3,"file":"MUIRolesCombobox.js","sourceRoot":"","sources":["../../../../../src/auto/mui/inputs/MUIRolesCombobox.tsx"],"names":[],"mappings":"AACA,OAAO,EAAE,YAAY,EAAE,SAAS,EAAE,MAAM,eAAe,CAAC;AACxD,OAAO,KAAK,EAAE,EAAE,OAAO,EAAE,MAAM,OAAO,CAAC;AACvC,OAAO,EAAE,gBAAgB,EAAE,MAAM,sBAAsB,CAAC;AAExD,MAAM,CAAC,MAAM,gBAAgB,GAAG,CAC9B,KAAsI,EACtI,EAAE;IACF,MAAM,EAAE,KAAK,EAAE,QAAQ,EAAE,KAAK,EAAE,GAAG,gBAAgB,EAAE,CAAC;IACtD,MAAM,OAAO,GAAG,OAAO,CAAC,GAAG,EAAE;QAC3B,IAAI,CAAC,KAAK;YAAE,OAAO,EAAE,CAAC;QACtB,OAAO,KAAK,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,IAAI,CAAC,IAAI,EAAE,KAAK,EAAE,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;IACpE,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC;IAEZ,IAAI,KAAK;QAAE,MAAM,KAAK,CAAC;IACvB,IAAI,QAAQ;QAAE,OAAO,oBAAC,SAAS,IAAC,KAAK,EAAE,KAAK,CAAC,KAAK,EAAE,YAAY,EAAC,KAAK,EAAC,QAAQ,EAAE,QAAQ,GAAI,CAAC;IAE9F,OAAO,CACL,oBAAC,YAAY,IACX,aAAa,QACb,QAAQ,QACR,OAAO,EAAE,OAAO,KACZ,KAAK,EACT,WAAW,EAAE,CAAC,MAAM,EAAE,EAAE,CAAC,oBAAC,SAAS,OAAK,MAAM,EAAE,KAAK,EAAE,KAAK,CAAC,KAAK,GAAI,GACtE,CACH,CAAC;AACJ,CAAC,CAAC","sourcesContent":["import type { AutocompleteProps, TextFieldProps } from \"@mui/material\";\nimport { Autocomplete, TextField } from \"@mui/material\";\nimport React, { useMemo } from \"react\";\nimport { useRolesMetadata } from \"../../../metadata.js\";\n\nexport const MUIRolesCombobox = (\n  props: Omit<AutocompleteProps<{ id: string; label: string }, true, any, any>, \"multiple\" | \"options\" | \"renderInput\"> & TextFieldProps\n) => {\n  const { roles, fetching, error } = useRolesMetadata();\n  const options = useMemo(() => {\n    if (!roles) return [];\n    return roles.map((role) => ({ id: role.name, label: role.name }));\n  }, [roles]);\n\n  if (error) throw error;\n  if (fetching) return <TextField label={props.label} autoComplete=\"off\" disabled={fetching} />;\n\n  return (\n    <Autocomplete\n      disablePortal\n      multiple\n      options={options}\n      {...props}\n      renderInput={(params) => <TextField {...params} label={props.label} />}\n    />\n  );\n};\n"]}