{"version":3,"file":"useHasManyThroughInputController.js","sourceRoot":"","sources":["../../../../src/auto/hooks/useHasManyThroughInputController.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,aAAa,EAAE,cAAc,EAAE,MAAM,wBAAwB,CAAC;AAEvE,OAAO,EAAE,gBAAgB,EAAE,MAAM,uBAAuB,CAAC;AACzD,OAAO,EAAE,sBAAsB,EAAE,MAAM,sBAAsB,CAAC;AAE9D,MAAM,CAAC,MAAM,gCAAgC,GAAG,CAAC,KAAiC,EAAE,EAAE;IACpF,MAAM,EAAE,KAAK,EAAE,GAAG,KAAK,CAAC;IACxB,MAAM,aAAa,GAAG,gBAAgB,CAAC,KAAK,CAAC,CAAC;IAC9C,MAAM,EAAE,IAAI,EAAE,GAAG,aAAa,CAAC;IAE/B,MAAM,UAAU,GAAG,aAAa,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,OAAO,EAAE,gBAAgB,EAAE,CAAC,CAAC;IAC5E,MAAM,EAAE,SAAS,EAAE,GAAG,cAAc,EAAE,CAAC;IAEvC,OAAO,CAAC,GAAG,CAAC,EAAE,IAAI,EAAE,UAAU,EAAE,SAAS,EAAE,CAAC,CAAC;IAE7C,+EAA+E;IAE/E,yEAAyE;IAEzE,sCAAsC;IACtC,oDAAoD;IACpD,wFAAwF;IACxF,gCAAgC;IAEhC,iDAAiD;IACjD,MAAM,mBAAmB,GAAG,sBAAsB,CAAC,KAAK,CAAC,CAAC;IAE1D,gDAAgD;IAEhD,oDAAoD;IACpD,2CAA2C;IAE3C,0CAA0C;IAC1C,4GAA4G;IAC5G,iBAAiB;IAEjB,sCAAsC;IACtC,uCAAuC;IACvC,0EAA0E;IAE1E,uBAAuB;IACvB,gBAAgB;IAChB,QAAQ;IAER,+BAA+B;IAC/B,uBAAuB;IACvB,eAAe;IACf,wBAAwB;IACxB,qBAAqB;IACrB,iEAAiE;IACjE,YAAY;IACZ,QAAQ;IACR,OAAO;IACP,yDAAyD;IACzD,KAAK;IAEL,sCAAsC;IACtC,uCAAuC;IACvC,kFAAkF;IAElF,wBAAwB;IACxB,sCAAsC;IACtC,mDAAmD;IACnD,8CAA8C;IAC9C,+BAA+B;IAC/B,iBAAiB;IACjB,kCAAkC;IAClC,UAAU;IACV,eAAe;IACf,iBAAiB;IACjB,qBAAqB;IACrB,4BAA4B;IAC5B,YAAY;IACZ,QAAQ;IACR,OAAO;IACP,8CAA8C;IAC9C,KAAK;IAEL,OAAO;QACL,aAAa;QACb,mBAAmB;QACnB,mBAAmB;QACnB,gBAAgB;QAChB,aAAa;QACb,kBAAkB;QAClB,kBAAkB;KACnB,CAAC;AACJ,CAAC,CAAC","sourcesContent":["import { useFieldArray, useFormContext } from \"../../useActionForm.js\";\nimport type { AutoRelationshipInputProps } from \"../interfaces/AutoRelationshipInputProps.js\";\nimport { useFieldMetadata } from \"./useFieldMetadata.js\";\nimport { useRelatedModelOptions } from \"./useRelatedModel.js\";\n\nexport const useHasManyThroughInputController = (props: AutoRelationshipInputProps) => {\n  const { field } = props;\n  const fieldMetadata = useFieldMetadata(field);\n  const { path } = fieldMetadata;\n\n  const fieldArray = useFieldArray({ name: path, keyName: \"_fieldArrayKey\" });\n  const { formState } = useFormContext();\n\n  console.log({ path, fieldArray, formState });\n\n  // const fieldArray = useFieldArray({ name: path, keyName: \"_fieldArrayKey\" });\n\n  // const records: Record<string, any>[] = useWatch({ name: path }) ?? [];\n\n  // const { metadata } = fieldMetadata;\n  // const inverseFieldApiIdentifier = useMemo(() => {\n  //   return (metadata.configuration as GadgetHasManyConfig).inverseField?.apiIdentifier;\n  // }, [metadata.configuration]);\n\n  // const { remove, append, update } = fieldArray;\n  const relatedModelOptions = useRelatedModelOptions(props);\n\n  // const { relatedModel } = relatedModelOptions;\n\n  // const errorMessage = relatedModel.error?.message;\n  // const isLoading = relatedModel.fetching;\n\n  // const selectedRecords = useMemo(() => {\n  //   return (records ?? []).filter((value: { _unlink?: string }) => !(\"_unlink\" in value && value._unlink));\n  // }, [records]);\n\n  // const onRemoveRecord = useCallback(\n  //   (record: Record<string, any>) => {\n  //     const index = records.findIndex((value) => value.id === record.id);\n\n  //     if (index < 0) {\n  //       return;\n  //     }\n\n  //     if (\"_link\" in record) {\n  //       remove(index);\n  //     } else {\n  //       update(index, {\n  //         ...record,\n  //         _unlink: { id: record.id, inverseFieldApiIdentifier },\n  //       });\n  //     }\n  //   },\n  //   [inverseFieldApiIdentifier, records, remove, update]\n  // );\n\n  // const onSelectRecord = useCallback(\n  //   (record: Record<string, any>) => {\n  //     const index = (records ?? []).findIndex((value) => value.id === record.id);\n\n  //     if (index >= 0) {\n  //       const value = records[index];\n  //       if (\"_unlink\" in value && value._unlink) {\n  //         const { _unlink, ...rest } = value;\n  //         update(index, rest);\n  //       } else {\n  //         onRemoveRecord(record);\n  //       }\n  //     } else {\n  //       append({\n  //         ...record,\n  //         _link: record.id,\n  //       });\n  //     }\n  //   },\n  //   [records, onRemoveRecord, update, append]\n  // );\n\n  return {\n    fieldMetadata,\n    relatedModelOptions,\n    // selectedRecords,\n    // errorMessage,\n    // isLoading,\n    // onSelectRecord,\n    // onRemoveRecord,\n  };\n};\n"]}