{"version":3,"file":"useHasManyThroughController.js","sourceRoot":"","sources":["../../../../src/auto/hooks/useHasManyThroughController.tsx"],"names":[],"mappings":"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","sourcesContent":["import { assert } from \"@gadgetinc/api-client-core\";\nimport React, { createContext, useCallback, useContext, useMemo, type ReactNode } from \"react\";\nimport { GadgetFieldType, type GadgetHasManyThroughConfig } from \"../../internal/gql/graphql.js\";\nimport { useFieldArray } from \"../../useActionForm.js\";\nimport type { AutoRelationshipFormProps, AutoRelationshipInputProps } from \"../interfaces/AutoRelationshipInputProps.js\";\nimport { useRelationshipContext } from \"./useAutoRelationship.js\";\nimport { useFieldMetadata } from \"./useFieldMetadata.js\";\nimport { useRelatedModelOptions } from \"./useRelatedModel.js\";\nimport { assertFieldType } from \"./utils.js\";\n\nexport const useHasManyThroughController = (props: Omit<AutoRelationshipFormProps, \"children\" | \"label\">) => {\n  const fieldMetadata = useFieldMetadata(props.field);\n  const { path, metadata } = fieldMetadata;\n\n  assertFieldType({\n    fieldApiIdentifier: props.field,\n    actualFieldType: metadata.fieldType,\n    expectedFieldType: GadgetFieldType.HasManyThrough,\n  });\n\n  const configuration = metadata.configuration as GadgetHasManyThroughConfig;\n  const joinModelHasManyFieldApiIdentifier = assert(\n    configuration.joinModelHasManyFieldApiIdentifier,\n    \"joinModelHasManyFieldApiIdentifier is required for hasManyThrough fields\"\n  );\n\n  const relatedModelOptions = useRelatedModelOptions(props);\n\n  const fieldArrayPath = path.replace(metadata.apiIdentifier, joinModelHasManyFieldApiIdentifier);\n\n  const fieldArray = useFieldArray({ name: fieldArrayPath, keyName: \"_fieldArrayKey\" });\n\n  const records: Record<string, any>[] = useMemo(() => {\n    return fieldArray.fields.map((field) => {\n      const { _fieldArrayKey, ...rest } = field;\n      return rest;\n    });\n  }, [fieldArray.fields]);\n\n  const inverseRelatedModelField = useMemo(() => {\n    return (metadata.configuration as GadgetHasManyThroughConfig).inverseRelatedModelField?.apiIdentifier;\n  }, [metadata.configuration]);\n\n  return {\n    fieldArrayPath,\n    fieldMetadata,\n    fieldArray,\n    records,\n    relatedModelOptions,\n    inverseRelatedModelField,\n    joinModelField: joinModelHasManyFieldApiIdentifier,\n    joinModelApiIdentifier: configuration.joinModel?.apiIdentifier,\n  };\n};\n\nexport const useHasManyThroughInputController = (props: AutoRelationshipInputProps) => {\n  const { fieldMetadata, fieldArray, records, relatedModelOptions, inverseRelatedModelField } = useHasManyThroughController({\n    field: props.field,\n    recordLabel: props.optionLabel,\n    recordFilter: props.recordFilter,\n  });\n\n  const { relatedModel } = relatedModelOptions;\n  const { remove, append } = fieldArray;\n\n  const selectedRecords = useMemo(() => {\n    const siblingRecords: any[] = [];\n    const seenIds = new Set<string>();\n\n    for (const record of records) {\n      if (inverseRelatedModelField && record[inverseRelatedModelField] && !seenIds.has(record[inverseRelatedModelField].id)) {\n        siblingRecords.push(record[inverseRelatedModelField]);\n        seenIds.add(record[inverseRelatedModelField].id);\n      }\n    }\n\n    return siblingRecords;\n  }, [records, inverseRelatedModelField]);\n\n  const errorMessage = relatedModel.error?.message;\n  const isLoading = relatedModel.fetching;\n\n  const onRemoveRecord = useCallback(\n    (record: Record<string, any>) => {\n      const index = records.findIndex((value) => inverseRelatedModelField && value[inverseRelatedModelField]?.id === record.id);\n      if (index < 0) {\n        return;\n      }\n\n      remove(index);\n    },\n    [inverseRelatedModelField, records, remove]\n  );\n\n  const onSelectRecord = useCallback(\n    (record: Record<string, any>) => {\n      const index = records.findIndex((value) => inverseRelatedModelField && value[inverseRelatedModelField]?.id === record.id);\n      if (index >= 0) {\n        remove(index);\n      } else if (inverseRelatedModelField) {\n        append({\n          [inverseRelatedModelField]: { ...record, _link: record.id },\n        });\n      }\n    },\n    [inverseRelatedModelField, records, remove, append]\n  );\n\n  return {\n    fieldMetadata,\n    relatedModelOptions,\n    selectedRecords,\n    errorMessage,\n    isLoading,\n    fieldArray,\n    onSelectRecord,\n    onRemoveRecord,\n  };\n};\n\nexport const AutoHasManyThroughJoinModelForm = (props: {\n  /** The React children containing inputs on the join model in an AutoHasManyThroughForm component */\n  children?: ReactNode;\n}) => {\n  useEnsureInHasManyThroughForm();\n\n  return <HasManyThroughJoinModelContext.Provider value={true}>{props.children}</HasManyThroughJoinModelContext.Provider>;\n};\n\nexport const HasManyThroughJoinModelContext = createContext<null | true>(null);\n\n// Export a hook that just checks if we're inside the component\nexport const useIsInHasManyThroughJoinModelInput = () => {\n  return useContext(HasManyThroughJoinModelContext) !== null;\n};\n\nexport const useEnsureInHasManyThroughForm = () => {\n  const relationshipContext = useRelationshipContext();\n\n  if (!relationshipContext || !relationshipContext.hasManyThrough) {\n    throw new Error(`'AutoJoinModelInput' can only be used within a 'AutoHasManyThroughForm' component`);\n  }\n};\n"]}