{"version":3,"file":"useFieldMetadata.js","sourceRoot":"","sources":["../../../../src/auto/hooks/useFieldMetadata.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,aAAa,EAAE,MAAM,gBAAgB,CAAC;AAC/C,OAAO,EAAE,mBAAmB,EAAE,MAAM,uBAAuB,CAAC;AAE5D,MAAM,CAAC,MAAM,gBAAgB,GAAG,CAAC,kBAA0B,EAAE,EAAE;IAC7D,MAAM,EAAE,QAAQ,EAAE,gBAAgB,EAAE,OAAO,EAAE,GAAG,mBAAmB,EAAE,CAAC;IACtE,MAAM,MAAM,GAAG,aAAa,CAAC,gBAAgB,EAAE,EAAE,GAAG,OAAO,EAAE,CAAC,CAAC;IAC/D,MAAM,mBAAmB,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE,CAAC,KAAK,CAAC,QAAQ,CAAC,aAAa,KAAK,kBAAkB,CAAC,CAAC;IAExG,IAAI,CAAC,mBAAmB,EAAE,CAAC;QACzB,MAAM,IAAI,KAAK,CAAC,UAAU,kBAAkB,yBAAyB,CAAC,CAAC;IACzE,CAAC;IAED,OAAO,mBAAmB,CAAC;AAC7B,CAAC,CAAC","sourcesContent":["import { useFormFields } from \"../AutoForm.js\";\nimport { useAutoFormMetadata } from \"../AutoFormContext.js\";\n\nexport const useFieldMetadata = (fieldApiIdentifier: string) => {\n  const { metadata: autoFormMetadata, options } = useAutoFormMetadata();\n  const fields = useFormFields(autoFormMetadata, { ...options });\n  const targetFieldMetadata = fields.find((field) => field.metadata.apiIdentifier === fieldApiIdentifier);\n\n  if (!targetFieldMetadata) {\n    throw new Error(`Field \"${fieldApiIdentifier}\" not found in metadata`);\n  }\n\n  return targetFieldMetadata;\n};\n"]}