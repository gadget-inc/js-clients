{"version":3,"file":"useFieldMetadata.js","sourceRoot":"","sources":["../../../../src/auto/hooks/useFieldMetadata.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,mBAAmB,EAAE,MAAM,uBAAuB,CAAC;AAC5D,OAAO,EAAE,sBAAsB,EAAE,MAAM,iCAAiC,CAAC;AAEzE,MAAM,CAAC,MAAM,gBAAgB,GAAG,CAAC,kBAA0B,EAAE,EAAE;IAC7D,MAAM,mBAAmB,GAAG,sBAAsB,EAAE,CAAC;IACrD,MAAM,EAAE,KAAK,EAAE,MAAM,EAAE,GAAG,mBAAmB,EAAE,CAAC;IAEhD,IAAI,IAAY,CAAC;IACjB,IAAI,YAAoB,CAAC;IAEzB,IAAI,mBAAmB,IAAI,KAAK,EAAE,CAAC;QACjC,IAAI,GAAG,KAAK,CAAC,aAAa,GAAG,GAAG,GAAG,mBAAmB,CAAC,aAAa,CAAC,kBAAkB,CAAC,CAAC;QACzF,YAAY,GAAG,mBAAmB,EAAE,qBAAqB;YACvD,CAAC,CAAC,KAAK,CAAC,aAAa,GAAG,GAAG,GAAG,mBAAmB,CAAC,qBAAqB,CAAC,kBAAkB,CAAC;YAC3F,CAAC,CAAC,IAAI,CAAC;IACX,CAAC;SAAM,CAAC;QACN,IAAI,GAAG,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,aAAa,GAAG,GAAG,GAAG,kBAAkB,CAAC,CAAC,CAAC,kBAAkB,CAAC;QACnF,YAAY,GAAG,IAAI,CAAC;IACtB,CAAC;IAED,MAAM,mBAAmB,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE,CAAC,KAAK,CAAC,IAAI,KAAK,YAAY,CAAC,CAAC;IAEhF,IAAI,CAAC,mBAAmB,EAAE,CAAC;QACzB,MAAM,IAAI,KAAK,CAAC,UAAU,kBAAkB,yBAAyB,CAAC,CAAC;IACzE,CAAC;IAED,OAAO,EAAE,IAAI,EAAE,QAAQ,EAAE,mBAAmB,CAAC,QAAQ,EAAE,CAAC;AAC1D,CAAC,CAAC","sourcesContent":["import { useAutoFormMetadata } from \"../AutoFormContext.js\";\nimport { useRelationshipContext } from \"../hooks/useAutoRelationship.js\";\n\nexport const useFieldMetadata = (fieldApiIdentifier: string) => {\n  const relationshipContext = useRelationshipContext();\n  const { model, fields } = useAutoFormMetadata();\n\n  let path: string;\n  let metaDataPath: string;\n\n  if (relationshipContext && model) {\n    path = model.apiIdentifier + \".\" + relationshipContext.transformPath(fieldApiIdentifier);\n    metaDataPath = relationshipContext?.transformMetadataPath\n      ? model.apiIdentifier + \".\" + relationshipContext.transformMetadataPath(fieldApiIdentifier)\n      : path;\n  } else {\n    path = model ? model.apiIdentifier + \".\" + fieldApiIdentifier : fieldApiIdentifier;\n    metaDataPath = path;\n  }\n\n  const targetFieldMetadata = fields.find((field) => field.path === metaDataPath);\n\n  if (!targetFieldMetadata) {\n    throw new Error(`Field \"${fieldApiIdentifier}\" not found in metadata`);\n  }\n\n  return { path, metadata: targetFieldMetadata.metadata };\n};\n"]}