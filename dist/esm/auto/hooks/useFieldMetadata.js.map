{"version":3,"file":"useFieldMetadata.js","sourceRoot":"","sources":["../../../../src/auto/hooks/useFieldMetadata.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,mBAAmB,EAAE,MAAM,uBAAuB,CAAC;AAE5D,MAAM,CAAC,MAAM,gBAAgB,GAAG,CAAC,kBAA0B,EAAE,EAAE;IAC7D,MAAM,EAAE,KAAK,EAAE,MAAM,EAAE,GAAG,mBAAmB,EAAE,CAAC;IAChD,MAAM,YAAY,GAChB,KAAK,IAAI,KAAK,CAAC,aAAa;QAC1B,CAAC,CAAC,KAAK,CAAC,aAAa,GAAG,GAAG,GAAG,kBAAkB,CAAC,eAAe;QAChE,CAAC,CAAC,kBAAkB,CAAC,CAAC,gBAAgB;IAE1C,MAAM,mBAAmB,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE,CAAC,KAAK,CAAC,IAAI,KAAK,YAAY,CAAC,CAAC;IAEhF,IAAI,CAAC,mBAAmB,EAAE,CAAC;QACzB,MAAM,IAAI,KAAK,CAAC,UAAU,kBAAkB,yBAAyB,CAAC,CAAC;IACzE,CAAC;IAED,OAAO;QACL,IAAI,EAAE,YAAY;QAClB,QAAQ,EAAE,mBAAmB,CAAC,QAAQ;KACvC,CAAC;AACJ,CAAC,CAAC","sourcesContent":["import { useAutoFormMetadata } from \"../AutoFormContext.js\";\n\nexport const useFieldMetadata = (fieldApiIdentifier: string) => {\n  const { model, fields } = useAutoFormMetadata();\n  const metaDataPath =\n    model && model.apiIdentifier\n      ? model.apiIdentifier + \".\" + fieldApiIdentifier // Model action\n      : fieldApiIdentifier; // Global action\n\n  const targetFieldMetadata = fields.find((field) => field.path === metaDataPath);\n\n  if (!targetFieldMetadata) {\n    throw new Error(`Field \"${fieldApiIdentifier}\" not found in metadata`);\n  }\n\n  return {\n    path: metaDataPath,\n    metadata: targetFieldMetadata.metadata,\n  };\n};\n"]}