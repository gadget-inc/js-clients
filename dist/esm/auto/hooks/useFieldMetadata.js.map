{"version":3,"file":"useFieldMetadata.js","sourceRoot":"","sources":["../../../../src/auto/hooks/useFieldMetadata.tsx"],"names":[],"mappings":"AACA,OAAO,EAAE,mBAAmB,EAAE,MAAM,uBAAuB,CAAC;AAE5D,MAAM,CAAC,MAAM,gBAAgB,GAAG,CAAC,kBAA0B,EAAE,EAAE;IAC7D,MAAM,EAAE,KAAK,EAAE,MAAM,EAAE,GAAG,mBAAmB,EAAE,CAAC;IAEhD,MAAM,aAAa,GAAG,KAAK,IAAI,KAAK,CAAC,aAAa,CAAC;IACnD,MAAM,YAAY,GAAG,aAAa;QAChC,CAAC,CAAC,KAAK,CAAC,aAAa,GAAG,GAAG,GAAG,kBAAkB,CAAC,eAAe;QAChE,CAAC,CAAC,kBAAkB,CAAC,CAAC,gBAAgB;IAExC,MAAM,mBAAmB,GAAG,MAAM,CAAC,IAAI,CACrC,CAAC,KAAK,EAAE,EAAE,CAAC,KAAK,CAAC,IAAI,KAAK,YAAY,IAAI,+BAA+B,CAAC,kBAAkB,EAAE,KAAK,CAAC,CACrG,CAAC;IAEF,IAAI,CAAC,mBAAmB,EAAE,CAAC;QACzB,MAAM,IAAI,KAAK,CAAC,UAAU,kBAAkB,yBAAyB,CAAC,CAAC;IACzE,CAAC;IAED,OAAO,mBAAmB,CAAC;AAC7B,CAAC,CAAC;AAEF,MAAM,+BAA+B,GAAG,CACtC,kBAA0B,EAC1B,cAGC,EACD,EAAE,CAAC,cAAc,CAAC,QAAQ,CAAC,UAAU,KAAK,kBAAkB,IAAI,cAAc,CAAC,IAAI,KAAK,kBAAkB,CAAC","sourcesContent":["import { type FieldMetadata } from \"../../metadata.js\";\nimport { useAutoFormMetadata } from \"../AutoFormContext.js\";\n\nexport const useFieldMetadata = (fieldApiIdentifier: string) => {\n  const { model, fields } = useAutoFormMetadata();\n\n  const isModelAction = model && model.apiIdentifier;\n  const metaDataPath = isModelAction\n    ? model.apiIdentifier + \".\" + fieldApiIdentifier // Model action\n    : fieldApiIdentifier; // Global action\n\n  const targetFieldMetadata = fields.find(\n    (field) => field.path === metaDataPath || isFieldCustomParamOnModelAction(fieldApiIdentifier, field)\n  );\n\n  if (!targetFieldMetadata) {\n    throw new Error(`Field \"${fieldApiIdentifier}\" not found in metadata`);\n  }\n\n  return targetFieldMetadata;\n};\n\nconst isFieldCustomParamOnModelAction = (\n  fieldApiIdentifier: string,\n  fieldCandidate: {\n    path: string;\n    metadata: FieldMetadata;\n  }\n) => fieldCandidate.metadata.__typename !== \"GadgetModelField\" && fieldCandidate.path === fieldApiIdentifier;\n"]}