{"version":3,"file":"useHiddenInput.js","sourceRoot":"","sources":["../../../../src/auto/hooks/useHiddenInput.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,MAAM,OAAO,CAAC;AAClC,OAAO,EAAE,cAAc,EAAE,MAAM,iBAAiB,CAAC;AACjD,OAAO,EAAE,eAAe,EAAE,MAAM,+BAA+B,CAAC;AAChE,OAAO,EAAE,gBAAgB,EAAE,MAAM,uBAAuB,CAAC;AAEzD,MAAM,CAAC,MAAM,cAAc,GAAG,CAAC,KAAoC,EAAE,EAAE;IACrE,MAAM,EAAE,KAAK,EAAE,KAAK,EAAE,GAAG,KAAK,CAAC;IAC/B,MAAM,EAAE,IAAI,EAAE,QAAQ,EAAE,GAAG,gBAAgB,CAAC,KAAK,CAAC,CAAC;IACnD,MAAM,EAAE,QAAQ,EAAE,SAAS,EAAE,GAAG,cAAc,EAAE,CAAC;IAEjD,SAAS,CAAC,GAAG,EAAE;QACb,IAAI,SAAS,GAAG,IAAI,CAAC;QAErB,IAAI,QAAQ,CAAC,SAAS,IAAI,eAAe,CAAC,SAAS,EAAE,CAAC;YACpD,SAAS,GAAG,GAAG,IAAI,KAAK,CAAC;QAC3B,CAAC;QAED,QAAQ,CAAC,SAAS,EAAE,KAAK,EAAE;YACzB,WAAW,EAAE,IAAI;SAClB,CAAC,CAAC;IACL,CAAC,EAAE,CAAC,SAAS,CAAC,aAAa,EAAE,IAAI,EAAE,QAAQ,EAAE,KAAK,EAAE,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC;IAEzE,OAAO;QACL,KAAK;QACL,IAAI,EAAE,QAAQ,CAAC,IAAI;KACpB,CAAC;AACJ,CAAC,CAAC","sourcesContent":["import { useEffect } from \"react\";\nimport { useFormContext } from \"react-hook-form\";\nimport { GadgetFieldType } from \"../../internal/gql/graphql.js\";\nimport { useFieldMetadata } from \"./useFieldMetadata.js\";\n\nexport const useHiddenInput = (props: { field: string; value: any }) => {\n  const { field, value } = props;\n  const { path, metadata } = useFieldMetadata(field);\n  const { setValue, formState } = useFormContext();\n\n  useEffect(() => {\n    let setAtPath = path;\n\n    if (metadata.fieldType == GadgetFieldType.BelongsTo) {\n      setAtPath = `${path}.id`;\n    }\n\n    setValue(setAtPath, value, {\n      shouldDirty: true,\n    });\n  }, [formState.defaultValues, path, setValue, value, metadata.fieldType]);\n\n  return {\n    value,\n    name: metadata.name,\n  };\n};\n"]}