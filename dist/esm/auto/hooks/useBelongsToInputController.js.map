{"version":3,"file":"useBelongsToInputController.js","sourceRoot":"","sources":["../../../../src/auto/hooks/useBelongsToInputController.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,WAAW,EAAE,SAAS,EAAE,OAAO,EAAE,MAAM,OAAO,CAAC;AACxD,OAAO,EAAE,aAAa,EAAE,MAAM,iBAAiB,CAAC;AAEhD,OAAO,EAAE,gBAAgB,EAAE,MAAM,uBAAuB,CAAC;AACzD,OAAO,EAAE,sBAAsB,EAAE,MAAM,6BAA6B,CAAC;AAErE,MAAM,CAAC,MAAM,2BAA2B,GAAG,CAAC,KAAiC,EAAE,EAAE;IAC/E,MAAM,EAAE,KAAK,EAAE,OAAO,EAAE,GAAG,KAAK,CAAC;IACjC,MAAM,aAAa,GAAG,gBAAgB,CAAC,KAAK,CAAC,CAAC;IAC9C,MAAM,EAAE,IAAI,EAAE,GAAG,aAAa,CAAC;IAE/B,MAAM,mBAAmB,GAAG,sBAAsB,CAAC,KAAK,CAAC,CAAC;IAC1D,MAAM,EAAE,QAAQ,EAAE,YAAY,EAAE,GAAG,mBAAmB,CAAC;IAEvD,MAAM,EACJ,KAAK,EAAE,UAAU,EACjB,UAAU,EAAE,EAAE,KAAK,EAAE,UAAU,EAAE,GAClC,GAAG,aAAa,CAAC;QAChB,IAAI,EAAE,IAAI,GAAG,KAAK;QAClB,OAAO;KACR,CAAC,CAAC;IAEH,MAAM,SAAS,GAAG,QAAQ,CAAC,QAAQ,IAAI,YAAY,CAAC,QAAQ,CAAC;IAC7D,MAAM,YAAY,GAAG,UAAU,EAAE,OAAO,IAAI,QAAQ,CAAC,KAAK,EAAE,OAAO,IAAI,YAAY,CAAC,KAAK,EAAE,OAAO,CAAC;IAEnG,MAAM,yBAAyB,GAAG,OAAO,CAAC,GAAG,EAAE;QAC7C,OAAO,CAAC,QAAQ,CAAC,QAAQ,IAAI,QAAQ,CAAC,OAAO,IAAI,QAAQ,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,GAAG,KAAK,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;IACtH,CAAC,EAAE,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC;IAExB,MAAM,+BAA+B,GAAG,OAAO,CAAC,GAAG,EAAE;QACnD,OAAO,CAAC,QAAQ,CAAC,QAAQ,IAAI,QAAQ,CAAC,OAAO,IAAI,QAAQ,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;IAClH,CAAC,EAAE,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC;IAExB,SAAS,CAAC,GAAG,EAAE;QACb,sEAAsE;QACtE,IAAI,CAAC,QAAQ,CAAC,QAAQ,IAAI,yBAAyB,EAAE,CAAC;YACpD,UAAU,CAAC,QAAQ,CAAC,yBAAyB,CAAC,CAAC;QACjD,CAAC;IACH,CAAC,EAAE,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC;IAExB,MAAM,cAAc,GAAG,WAAW,CAAC,CAAC,QAAgB,EAAE,EAAE;QACtD,UAAU,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;IAChC,CAAC,EAAE,EAAE,CAAC,CAAC;IAEP,MAAM,cAAc,GAAG,WAAW,CAAC,GAAG,EAAE;QACtC,UAAU,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;IAC5B,CAAC,EAAE,EAAE,CAAC,CAAC;IAEP,OAAO;QACL,aAAa;QACb,mBAAmB;QAEnB,cAAc;QACd,cAAc;QAEd,gBAAgB,EAAE,UAAU,CAAC,KAAK;QAClC,+BAA+B;QAE/B,SAAS;QACT,YAAY;KACb,CAAC;AACJ,CAAC,CAAC","sourcesContent":["import { useCallback, useEffect, useMemo } from \"react\";\nimport { useController } from \"react-hook-form\";\nimport { AutoRelationshipInputProps } from \"../interfaces/AutoRelationshipInputProps.js\";\nimport { useFieldMetadata } from \"./useFieldMetadata.js\";\nimport { useRelatedModelOptions } from \"./useRelatedModelOptions.js\";\n\nexport const useBelongsToInputController = (props: AutoRelationshipInputProps) => {\n  const { field, control } = props;\n  const fieldMetadata = useFieldMetadata(field);\n  const { path } = fieldMetadata;\n\n  const relatedModelOptions = useRelatedModelOptions(props);\n  const { selected, relatedModel } = relatedModelOptions;\n\n  const {\n    field: fieldProps,\n    fieldState: { error: fieldError },\n  } = useController({\n    name: path + \".id\",\n    control,\n  });\n\n  const isLoading = selected.fetching || relatedModel.fetching;\n  const errorMessage = fieldError?.message || selected.error?.message || relatedModel.error?.message;\n\n  const retrievedSelectedRecordId = useMemo(() => {\n    return !selected.fetching && selected.records && selected.records.length ? selected.records[0][`${field}Id`] : null;\n  }, [selected.fetching]);\n\n  const retrievedSelectedRecordIdExists = useMemo(() => {\n    return !selected.fetching && selected.records && selected.records.length ? !!selected.records[0][field] : false;\n  }, [selected.fetching]);\n\n  useEffect(() => {\n    // Initializing the controller with the selected record ID from the DB\n    if (!selected.fetching && retrievedSelectedRecordId) {\n      fieldProps.onChange(retrievedSelectedRecordId);\n    }\n  }, [selected.fetching]);\n\n  const onSelectRecord = useCallback((recordId: string) => {\n    fieldProps.onChange(recordId);\n  }, []);\n\n  const onRemoveRecord = useCallback(() => {\n    fieldProps.onChange(null);\n  }, []);\n\n  return {\n    fieldMetadata,\n    relatedModelOptions,\n\n    onSelectRecord,\n    onRemoveRecord,\n\n    selectedRecordId: fieldProps.value,\n    retrievedSelectedRecordIdExists,\n\n    isLoading,\n    errorMessage,\n  };\n};\n"]}