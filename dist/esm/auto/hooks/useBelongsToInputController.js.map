{"version":3,"file":"useBelongsToInputController.js","sourceRoot":"","sources":["../../../../src/auto/hooks/useBelongsToInputController.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,WAAW,EAAE,MAAM,OAAO,CAAC;AACpC,OAAO,EAAE,cAAc,EAAE,QAAQ,EAAE,MAAM,wBAAwB,CAAC;AAElE,OAAO,EAAE,gBAAgB,EAAE,MAAM,uBAAuB,CAAC;AACzD,OAAO,EAAE,sBAAsB,EAAE,MAAM,sBAAsB,CAAC;AAE9D,MAAM,CAAC,MAAM,2BAA2B,GAAG,CAAC,KAAiC,EAAE,EAAE;IAC/E,MAAM,EAAE,KAAK,EAAE,GAAG,KAAK,CAAC;IACxB,MAAM,aAAa,GAAG,gBAAgB,CAAC,KAAK,CAAC,CAAC;IAC9C,MAAM,EAAE,IAAI,EAAE,GAAG,aAAa,CAAC;IAC/B,MAAM,EAAE,QAAQ,EAAE,GAAG,cAAc,EAAE,CAAC;IAEtC,MAAM,mBAAmB,GAAG,sBAAsB,CAAC,KAAK,CAAC,CAAC;IAC1D,MAAM,EAAE,YAAY,EAAE,GAAG,mBAAmB,CAAC;IAE7C,MAAM,KAAK,GAAG,QAAQ,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,CAAC;IAEvC,MAAM,cAAc,GAAoC,KAAK,EAAE,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,SAAS,CAAC;IAEtF,MAAM,SAAS,GAAG,YAAY,CAAC,QAAQ,CAAC;IACxC,MAAM,YAAY,GAAG,YAAY,CAAC,KAAK,EAAE,OAAO,CAAC;IAEjD,MAAM,cAAc,GAAG,WAAW,CAChC,CAAC,MAA2B,EAAE,EAAE;QAC9B,OAAO,CAAC,GAAG,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC,CAAC;QAC9B,QAAQ,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;IACzB,CAAC,EACD,CAAC,IAAI,EAAE,QAAQ,CAAC,CACjB,CAAC;IAEF,MAAM,cAAc,GAAG,WAAW,CAAC,GAAG,EAAE;QACtC,MAAM,EAAE,UAAU,EAAE,GAAG,IAAI,EAAE,GAAG,KAAK,CAAC;QAEtC,MAAM,aAAa,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,EAAE;YAC1D,GAAG,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC;YAChB,OAAO,GAAG,CAAC;QACb,CAAC,EAAE,EAA0B,CAAC,CAAC;QAE/B,QAAQ,CAAC,IAAI,EAAE,EAAE,GAAG,aAAa,EAAE,EAAE,EAAE,IAAI,EAAE,UAAU,EAAE,CAAC,CAAC;IAC7D,CAAC,EAAE,CAAC,IAAI,EAAE,QAAQ,EAAE,KAAK,CAAC,CAAC,CAAC;IAE5B,OAAO;QACL,aAAa;QACb,mBAAmB;QACnB,cAAc;QACd,cAAc;QACd,cAAc;QACd,SAAS;QACT,YAAY;KACb,CAAC;AACJ,CAAC,CAAC","sourcesContent":["import { useCallback } from \"react\";\nimport { useFormContext, useWatch } from \"../../useActionForm.js\";\nimport type { AutoRelationshipInputProps } from \"../interfaces/AutoRelationshipInputProps.js\";\nimport { useFieldMetadata } from \"./useFieldMetadata.js\";\nimport { useRelatedModelOptions } from \"./useRelatedModel.js\";\n\nexport const useBelongsToInputController = (props: AutoRelationshipInputProps) => {\n  const { field } = props;\n  const fieldMetadata = useFieldMetadata(field);\n  const { path } = fieldMetadata;\n  const { setValue } = useFormContext();\n\n  const relatedModelOptions = useRelatedModelOptions(props);\n  const { relatedModel } = relatedModelOptions;\n\n  const value = useWatch({ name: path });\n\n  const selectedRecord: Record<string, any> | undefined = value?.id ? value : undefined;\n\n  const isLoading = relatedModel.fetching;\n  const errorMessage = relatedModel.error?.message;\n\n  const onSelectRecord = useCallback(\n    (record: Record<string, any>) => {\n      console.log({ path, record });\n      setValue(path, record);\n    },\n    [path, setValue]\n  );\n\n  const onRemoveRecord = useCallback(() => {\n    const { __typename, ...rest } = value;\n\n    const nullifiedRest = Object.keys(rest).reduce((acc, key) => {\n      acc[key] = null;\n      return acc;\n    }, {} as Record<string, null>);\n\n    setValue(path, { ...nullifiedRest, id: null, __typename });\n  }, [path, setValue, value]);\n\n  return {\n    fieldMetadata,\n    relatedModelOptions,\n    onSelectRecord,\n    onRemoveRecord,\n    selectedRecord,\n    isLoading,\n    errorMessage,\n  };\n};\n"]}