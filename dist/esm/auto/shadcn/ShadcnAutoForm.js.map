{"version":3,"file":"ShadcnAutoForm.js","sourceRoot":"","sources":["../../../../src/auto/shadcn/ShadcnAutoForm.tsx"],"names":[],"mappings":"AAEA,OAAO,KAAK,EAAE,EAAE,UAAU,EAAE,MAAM,OAAO,CAAC;AAC1C,OAAO,EAAE,YAAY,EAAE,MAAM,wBAAwB,CAAC;AACtD,OAAO,EAAE,iBAAiB,EAAE,MAAM,gBAAgB,CAAC;AAEnD,OAAO,EAAE,WAAW,EAAE,MAAM,gBAAgB,CAAC;AAC7C,OAAO,EAAE,qBAAqB,EAAE,MAAM,gCAAgC,CAAC;AACvE,OAAO,EAAE,yCAAyC,EAAE,uBAAuB,EAAE,MAAM,uBAAuB,CAAC;AAC3G,OAAO,EAAE,+BAA+B,EAAE,MAAM,yCAAyC,CAAC;AAC1F,OAAO,EAAE,0BAA0B,EAAE,MAAM,mCAAmC,CAAC;AAE/E,OAAO,EAAE,mBAAmB,EAAE,MAAM,6BAA6B,CAAC;AAClE,OAAO,EAAE,2BAA2B,EAAE,MAAM,mDAAmD,CAAC;AAChG,OAAO,EAAE,yBAAyB,EAAE,MAAM,iDAAiD,CAAC;AAC5F,OAAO,EAAE,gCAAgC,EAAE,MAAM,wDAAwD,CAAC;AAC1G,OAAO,EAAE,wBAAwB,EAAE,MAAM,gDAAgD,CAAC;AAC1F,OAAO,EAAE,oBAAoB,EAAE,MAAM,8BAA8B,CAAC;AACpE,OAAO,EAAE,sBAAsB,EAAE,MAAM,sCAAsC,CAAC;AAU9E;;GAEG;AACH,MAAM,CAAC,MAAM,YAAY,GAAG,CAAkC,QAAkB,EAAE,EAAE;IAClF,MAAM,EAAE,QAAQ,EAAE,EAAE,EAAE,GAAG,QAAQ,CAAC;IAElC,MAAM,sBAAsB,GAAG,0BAA0B,CAAC,QAAQ,CAAC,CAAC;IACpE,MAAM,WAAW,GAAG,EAAE,GAAG,QAAQ,EAAE,MAAM,EAAE,sBAAsB,EAAE,CAAC;IAEpE,MAAM,EACJ,SAAS,EACT,cAAc,EACd,aAAa,EACb,aAAa,EACb,aAAa,EACb,kBAAkB,EAClB,iBAAiB,EACjB,gBAAgB,EAChB,wBAAwB,EACxB,eAAe,EACf,cAAc,EACd,YAAY,EACZ,eAAe,EACf,WAAW,EACX,eAAe,EACf,iBAAiB,EACjB,iBAAiB,EAEjB,kBAAkB,EAClB,gBAAgB,EAChB,uBAAuB,EACvB,eAAe,GAChB,GAAG,mBAAmB,CAAC,WAAW,CAAC,CAAC;IAErC,MAAM,UAAU,GAAG,oBAAoB,CAAC,WAAW,CAAC,CAAC;IACrD,MAAM,EAAE,sBAAsB,EAAE,iBAAiB,EAAE,kBAAkB,EAAE,GAAG,sBAAsB,CAAC,WAAW,CAAC,CAAC;IAE9G,MAAM,cAAc,GAAG,wBAAwB,CAAC,WAAW,CAAC,CAAC;IAC7D,MAAM,iBAAiB,GAAG,2BAA2B,CAAC,WAAW,CAAC,CAAC;IACnE,MAAM,eAAe,GAAG,yBAAyB,CAAC,WAAW,CAAC,CAAC;IAC/D,MAAM,sBAAsB,GAAG,gCAAgC,CAAC,WAAW,CAAC,CAAC;IAE7E,MAAM,aAAa,GAAG,UAAU,CAA6D,CAAC,EAAE,SAAS,EAAE,GAAG,KAAK,EAAE,EAAE,GAAG,EAAE,EAAE;QAC5H,OAAO,8BAAM,GAAG,EAAE,GAAG,EAAE,UAAU,QAAC,SAAS,EAAE,EAAE,CAAC,WAAW,EAAE,SAAS,CAAC,KAAM,KAAK,GAAI,CAAC;IACzF,CAAC,CAAC,CAAC;IAEH,SAAS,QAAQ,CAIf,KAA6D;QAC7D,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,GAAG,KAAK,CAAC;QACjC,qBAAqB,CAAC,KAAK,CAAC,CAAC;QAE7B,qEAAqE;QACrE,MAAM,YAAY,GAAG,GAAG,oBAAoB,IAAI,MAAM,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,kBAAkB,GAAG,CAAC,CAAC,CAAC,EAAE,GAAG,MAAM,CAAC,aAAa,IAAI,IAAI,CAAC,SAAS,CACpI,MAAM,CACP,EAAE,CAAC;QAEJ,OAAO,CACL,oBAAC,yCAAyC,IAAC,qBAAqB,EAAE,KAAK,CAAC,QAAQ,CAAC,KAAK,CAAC,KAAK,CAAC,QAAQ,CAAC,GAAG,CAAC;YACxG,oBAAC,aAAa,IAAC,GAAG,EAAE,YAAY,KAAM,KAAK,GAAI,CACL,CAC7C,CAAC;IACJ,CAAC;IAED,SAAS,aAAa,CAIpB,KAA6D;QAC7D,MAAM,EAAE,MAAM,EAAE,OAAO,EAAE,MAAM,EAAE,MAAM,EAAE,GAAG,IAAI,EAAE,GAAG,KAAK,CAAC;QAE3D,MAAM,EACJ,QAAQ,EACR,gBAAgB,EAChB,aAAa,EACb,MAAM,EACN,MAAM,EACN,SAAS,EACT,YAAY,EACZ,kBAAkB,EAClB,mBAAmB,EACnB,SAAS,GACV,GAAG,WAAW,CAAC,KAAK,CAAC,CAAC;QAEvB,MAAM,SAAS,GAAG,OAAO,IAAI,KAAK,IAAI,KAAK,CAAC,KAAK,KAAK,SAAS,CAAC,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,iBAAiB,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC;QAExH,IAAI,KAAK,CAAC,cAAc,IAAI,kBAAkB,EAAE,CAAC;YAC/C,OAAO,KAAK,CAAC,cAAc,CAAC;QAC9B,CAAC;QAED,IAAI,gBAAgB,EAAE,CAAC;YACrB,OAAO,CACL,oBAAC,aAAa,OAAK,IAAI,EAAE,QAAQ,EAAE,MAAa,IAC7C,KAAK,CAAC,eAAe,IAAI,oBAAC,QAAQ,OAAG,CACxB,CACjB,CAAC;QACJ,CAAC;QAED,MAAM,uBAAuB,GAA4B;YACvD,MAAM;YACN,MAAM;YACN,QAAQ;YACR,YAAY,EAAE;gBACZ,YAAY,EAAE,kBAAkB;gBAChC,KAAK,EAAE,SAAS,IAAI,aAAa;gBACjC,YAAY;aACb;YACD,KAAK,EAAE;gBACL,aAAa,EAAE,oBAAoB,IAAI,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,kBAAkB,CAAC,CAAC,CAAC,SAAS;gBACrF,SAAS,EAAE,MAAM,CAAC,SAAS;aAC5B;YACD,MAAM;SACP,CAAC;QAEF,MAAM,WAAW,GAAG,KAAK,CAAC,QAAQ,IAAI,CACpC;YACG,SAAS,IAAI,4BAAI,SAAS,EAAC,oBAAoB,IAAE,SAAS,CAAM;YAChE,CAAC,KAAK,CAAC,SAAS,IAAI,oBAAC,sBAAsB,OAAG;YAC9C,CAAC,KAAK,CAAC,SAAS,IAAI,oBAAC,iBAAiB,OAAG;YACzC,CAAC,aAAa,IAAI,CACjB;gBACG,MAAM,CAAC,GAAG,CAAC,CAAC,EAAE,QAAQ,EAAE,EAAE,EAAE,CAAC,CAC5B,oBAAC,SAAS,IAAC,KAAK,EAAE,QAAQ,CAAC,aAAa,EAAE,GAAG,EAAE,QAAQ,CAAC,aAAa,GAAI,CAC1E,CAAC;gBACF,oBAAC,UAAU,QAAE,aAAa,IAAI,KAAK,IAAI,KAAK,CAAC,WAAW,CAAC,CAAC,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC,CAAC,QAAQ,CAAc,CACpG,CACJ,CACA,CACJ,CAAC;QAEF,OAAO,CACL,oBAAC,uBAAuB,CAAC,QAAQ,IAAC,KAAK,EAAE,uBAAuB;YAC9D,oBAAC,YAAY,OAAK,mBAAmB;gBACnC,oBAAC,aAAa,OACR,IAAI,EACR,SAAS,EAAE,EAAE,CAAC,GAAG,SAAS,IAAI,YAAY,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,EAAE,IAAI,IAAI,CAAC,SAAS,IAAI,EAAE,EAAE,CAAC,EACzF,QAAQ,EAAE,MAAa,IAEtB,WAAW,CACE,CACH,CACkB,CACpC,CAAC;IACJ,CAAC;IAED,OAAO;QACL,QAAQ;QAER,SAAS;QACT,gBAAgB;QAChB,kBAAkB;QAClB,cAAc;QACd,wBAAwB;QACxB,aAAa;QACb,aAAa;QACb,eAAe;QACf,WAAW;QACX,aAAa;QACb,eAAe;QACf,iBAAiB;QACjB,iBAAiB;QACjB,cAAc;QACd,eAAe;QACf,iBAAiB;QACjB,YAAY;QAEZ,kBAAkB;QAClB,gBAAgB;QAChB,uBAAuB;QACvB,eAAe;QAEf,iBAAiB;QACjB,eAAe;QACf,sBAAsB;QACtB,+BAA+B;QAC/B,cAAc;QAEd,UAAU;QACV,iBAAiB;QACjB,kBAAkB;QAClB,sBAAsB;KACvB,CAAC;AACJ,CAAC,CAAC","sourcesContent":["import type { ActionFunction, GlobalActionFunction, OptionsType } from \"@gadgetinc/api-client-core\";\nimport type { ComponentProps } from \"react\";\nimport React, { forwardRef } from \"react\";\nimport { FormProvider } from \"../../useActionForm.js\";\nimport { humanizeCamelCase } from \"../../utils.js\";\nimport type { AutoFormProps } from \"../AutoForm.js\";\nimport { useAutoForm } from \"../AutoForm.js\";\nimport { validateAutoFormProps } from \"../AutoFormActionValidators.js\";\nimport { AutoFormFieldsFromChildComponentsProvider, AutoFormMetadataContext } from \"../AutoFormContext.js\";\nimport { AutoHasManyThroughJoinModelForm } from \"../hooks/useHasManyThroughController.js\";\nimport { makeDefaultPreventedButton } from \"./ShadcnDefaultPreventedButton.js\";\nimport type { ShadcnElements } from \"./elements.js\";\nimport { makeShadcnAutoInput } from \"./inputs/ShadcnAutoInput.js\";\nimport { makeShadcnAutoBelongsToForm } from \"./inputs/relationships/ShadcnAutoBelongsToForm.js\";\nimport { makeShadcnAutoHasManyForm } from \"./inputs/relationships/ShadcnAutoHasManyForm.js\";\nimport { makeShadcnAutoHasManyThroughForm } from \"./inputs/relationships/ShadcnAutoHasManyThroughForm.js\";\nimport { makeShadcnAutoHasOneForm } from \"./inputs/relationships/ShadcnAutoHasOneForm.js\";\nimport { makeShadcnAutoSubmit } from \"./submit/ShadcnAutoSubmit.js\";\nimport { makeSubmitResultBanner } from \"./submit/ShadcnSubmitResultBanner.js\";\n\ntype FormContainerT = React.ForwardRefExoticComponent<React.FormHTMLAttributes<HTMLFormElement> & React.RefAttributes<HTMLFormElement>>;\n\nexport type ShadcnAutoFormProps<\n  GivenOptions extends OptionsType,\n  SchemaT,\n  ActionFunc extends ActionFunction<GivenOptions, any, any, SchemaT, any> | GlobalActionFunction<any>\n> = AutoFormProps<GivenOptions, SchemaT, ActionFunc> & Omit<ComponentProps<FormContainerT>, \"action\" | \"defaultValue\">;\n\n/**\n * Renders a form for an action on a model automatically using Shadcn\n */\nexport const makeAutoForm = <Elements extends ShadcnElements>(elements: Elements) => {\n  const { Skeleton, cn } = elements;\n\n  const DefaultPreventedButton = makeDefaultPreventedButton(elements);\n  const allElements = { ...elements, Button: DefaultPreventedButton };\n\n  const {\n    AutoInput,\n    AutoRolesInput,\n    AutoFileInput,\n    AutoEnumInput,\n    AutoJSONInput,\n    AutoDateTimePicker,\n    AutoPasswordInput,\n    AutoBooleanInput,\n    AutoEncryptedStringInput,\n    AutoStringInput,\n    AutoEmailInput,\n    AutoUrlInput,\n    AutoNumberInput,\n    AutoIdInput,\n    AutoHiddenInput,\n    AutoTextAreaInput,\n    AutoRichTextInput,\n\n    AutoBelongsToInput,\n    AutoHasManyInput,\n    AutoHasManyThroughInput,\n    AutoHasOneInput,\n  } = makeShadcnAutoInput(allElements);\n\n  const AutoSubmit = makeShadcnAutoSubmit(allElements);\n  const { SubmitSuccessfulBanner, SubmitErrorBanner, SubmitResultBanner } = makeSubmitResultBanner(allElements);\n\n  const AutoHasOneForm = makeShadcnAutoHasOneForm(allElements);\n  const AutoBelongsToForm = makeShadcnAutoBelongsToForm(allElements);\n  const AutoHasManyForm = makeShadcnAutoHasManyForm(allElements);\n  const AutoHasManyThroughForm = makeShadcnAutoHasManyThroughForm(allElements);\n\n  const FormContainer = forwardRef<HTMLFormElement, React.FormHTMLAttributes<HTMLFormElement>>(({ className, ...props }, ref) => {\n    return <form ref={ref} noValidate className={cn(\"space-y-6\", className)} {...props} />;\n  });\n\n  function AutoForm<\n    GivenOptions extends OptionsType,\n    SchemaT,\n    ActionFunc extends ActionFunction<GivenOptions, any, any, SchemaT, any> | GlobalActionFunction<any>\n  >(props: ShadcnAutoFormProps<GivenOptions, SchemaT, ActionFunc>) {\n    const { action, findBy } = props;\n    validateAutoFormProps(props);\n\n    // Component key to force re-render when the action or findBy changes\n    const componentKey = `${\"modelApiIdentifier\" in action ? `${action.modelApiIdentifier}.` : \"\"}${action.operationName}.${JSON.stringify(\n      findBy\n    )}`;\n\n    return (\n      <AutoFormFieldsFromChildComponentsProvider hasCustomFormChildren={React.Children.count(props.children) > 0}>\n        <AutoFormInner key={componentKey} {...props} />\n      </AutoFormFieldsFromChildComponentsProvider>\n    );\n  }\n\n  function AutoFormInner<\n    GivenOptions extends OptionsType,\n    SchemaT,\n    ActionFunc extends ActionFunction<GivenOptions, any, any, SchemaT, any> | GlobalActionFunction<any>\n  >(props: ShadcnAutoFormProps<GivenOptions, SchemaT, ActionFunc>) {\n    const { record: _record, action, findBy, ...rest } = props;\n\n    const {\n      metadata,\n      fetchingMetadata,\n      metadataError,\n      fields,\n      submit,\n      formError,\n      isSubmitting,\n      isSubmitSuccessful,\n      originalFormMethods,\n      isLoading,\n    } = useAutoForm(props);\n\n    const formTitle = \"title\" in props && props.title !== undefined ? props.title : humanizeCamelCase(action.operationName);\n\n    if (props.successContent && isSubmitSuccessful) {\n      return props.successContent;\n    }\n\n    if (fetchingMetadata) {\n      return (\n        <FormContainer {...rest} onSubmit={submit as any}>\n          {props.loadingSkeleton ?? <Skeleton />}\n        </FormContainer>\n      );\n    }\n\n    const autoFormMetadataContext: AutoFormMetadataContext = {\n      findBy,\n      submit,\n      metadata,\n      submitResult: {\n        isSuccessful: isSubmitSuccessful,\n        error: formError ?? metadataError,\n        isSubmitting,\n      },\n      model: {\n        apiIdentifier: \"modelApiIdentifier\" in action ? action.modelApiIdentifier : undefined,\n        namespace: action.namespace,\n      },\n      fields,\n    };\n\n    const formContent = props.children ?? (\n      <>\n        {formTitle && <h2 className=\"text-2xl font-bold\">{formTitle}</h2>}\n        {!props.onSuccess && <SubmitSuccessfulBanner />}\n        {!props.onFailure && <SubmitErrorBanner />}\n        {!metadataError && (\n          <>\n            {fields.map(({ metadata }) => (\n              <AutoInput field={metadata.apiIdentifier} key={metadata.apiIdentifier} />\n            ))}\n            <AutoSubmit>{\"submitLabel\" in props && props.submitLabel ? props.submitLabel : \"Submit\"}</AutoSubmit>\n          </>\n        )}\n      </>\n    );\n\n    return (\n      <AutoFormMetadataContext.Provider value={autoFormMetadataContext}>\n        <FormProvider {...originalFormMethods}>\n          <FormContainer\n            {...rest}\n            className={cn(`${isLoading || isSubmitting ? \"opacity-30\" : \"\"} ${rest.className ?? \"\"}`)}\n            onSubmit={submit as any}\n          >\n            {formContent}\n          </FormContainer>\n        </FormProvider>\n      </AutoFormMetadataContext.Provider>\n    );\n  }\n\n  return {\n    AutoForm,\n\n    AutoInput,\n    AutoBooleanInput,\n    AutoDateTimePicker,\n    AutoEmailInput,\n    AutoEncryptedStringInput,\n    AutoEnumInput,\n    AutoFileInput,\n    AutoHiddenInput,\n    AutoIdInput,\n    AutoJSONInput,\n    AutoNumberInput,\n    AutoPasswordInput,\n    AutoRichTextInput,\n    AutoRolesInput,\n    AutoStringInput,\n    AutoTextAreaInput,\n    AutoUrlInput,\n\n    AutoBelongsToInput,\n    AutoHasManyInput,\n    AutoHasManyThroughInput,\n    AutoHasOneInput,\n\n    AutoBelongsToForm,\n    AutoHasManyForm,\n    AutoHasManyThroughForm,\n    AutoHasManyThroughJoinModelForm,\n    AutoHasOneForm,\n\n    AutoSubmit,\n    SubmitErrorBanner,\n    SubmitResultBanner,\n    SubmitSuccessfulBanner,\n  };\n};\n"]}