{"version":3,"file":"elements.js","sourceRoot":"","sources":["../../../../src/auto/shadcn/elements.tsx"],"names":[],"mappings":"","sourcesContent":["import type React from \"react\";\nimport type { AvatarFallbackProps, AvatarImageProps, AvatarProps } from \"./types/avatarTypes.js\";\nimport type {\n  DialogCloseProps,\n  DialogContentProps,\n  DialogDescriptionProps,\n  DialogFooterProps,\n  DialogHeaderProps,\n  DialogOverlayProps,\n  DialogPortalProps,\n  DialogProps,\n  DialogTitleProps,\n  DialogTriggerProps,\n} from \"./types/dialogTypes.js\";\nimport type {\n  TableBodyProps,\n  TableCaptionProps,\n  TableCellProps,\n  TableFooterProps,\n  TableHeadProps,\n  TableHeaderProps,\n  TableProps,\n  TableRowProps,\n} from \"./types/tableTypes.js\";\nimport type { TooltipContentProps, TooltipProps, TooltipProviderProps, TooltipTriggerProps } from \"./types/tooltipTypes.js\";\n\n/** The props that a badge component injected into autocomponent's shadcn must support */\nexport interface BadgeProps extends React.HTMLAttributes<HTMLDivElement> {\n  variant?: any;\n}\n/** The props that a component injected into autocomponent's shadcn must support */\nexport interface BaseProps extends React.PropsWithChildren {\n  className?: string;\n}\n\n/** The props that a button component injected into autocomponent's shadcn must support */\nexport interface ButtonProps extends React.ButtonHTMLAttributes<HTMLButtonElement> {\n  asChild?: boolean;\n  variant?: \"default\" | \"destructive\" | \"outline\" | \"secondary\" | \"ghost\" | \"link\" | null;\n  size?: \"default\" | \"sm\" | \"lg\" | \"icon\" | null;\n}\n\ntype Direction = \"ltr\" | \"rtl\";\n\nexport interface DropdownMenuProps {\n  children?: React.ReactNode;\n  dir?: Direction;\n  open?: boolean;\n  defaultOpen?: boolean;\n  onOpenChange?(open: boolean): void;\n  modal?: boolean;\n}\n\n/** The props that a command component injected into autocomponent's shadcn must support */\nexport interface CommandProps extends React.HTMLAttributes<HTMLDivElement> {\n  children?: React.ReactNode;\n}\n\n/** The props that an alert component injected into autocomponent's shadcn must support */\nexport interface AlertProps extends BaseProps {\n  variant?: \"default\" | \"destructive\" | null;\n}\n\n/** The props that a card component injected into autocomponent's shadcn must support */\nexport interface CardProps extends BaseProps {\n  variant?: \"default\" | \"destructive\" | null;\n}\n\n/** The props that a card header component injected into autocomponent's shadcn must support */\nexport type CardHeaderProps = BaseProps;\n\n/** The props that a card footer component injected into autocomponent's shadcn must support */\nexport type CardFooterProps = BaseProps;\n\n/** The props that a card title component injected into autocomponent's shadcn must support */\nexport type CardTitleProps = BaseProps;\n\n/** The props that a card description component injected into autocomponent's shadcn must support */\nexport type CardDescriptionProps = BaseProps;\n\n/** The props that a card content component injected into autocomponent's shadcn must support */\nexport type CardContentProps = BaseProps;\n\n/** The props that an alert title component injected into autocomponent's shadcn must support */\nexport type AlertTitleProps = BaseProps;\n\n/** The props that an alert description component injected into autocomponent's shadcn must support */\nexport type AlertDescriptionProps = BaseProps;\n\n/** The props that a form component injected into autocomponent's shadcn must support */\nexport type FormProps = BaseProps;\n\n/** The props that an input component injected into autocomponent's shadcn must support */\nexport type InputProps = React.InputHTMLAttributes<HTMLInputElement>;\n\n/** The props that a label component injected into autocomponent's shadcn must support */\nexport type LabelProps = React.LabelHTMLAttributes<HTMLLabelElement>;\n\n/** The props that a scroll area component injected into autocomponent's shadcn must support */\nexport type ScrollAreaProps = React.HTMLAttributes<HTMLDivElement>;\n\n/** The props that a scroll bar component injected into autocomponent's shadcn must support */\nexport interface ScrollBarProps extends React.HTMLAttributes<HTMLDivElement> {\n  orientation?: \"vertical\" | \"horizontal\";\n}\n\n/** The props that a checkbox component injected into autocomponent's shadcn must support */\nexport interface CheckboxProps extends Omit<ButtonProps, \"checked\" | \"defaultChecked\"> {\n  checked?: boolean | \"indeterminate\";\n  defaultChecked?: boolean | \"indeterminate\";\n  required?: boolean;\n  onCheckedChange?(checked: boolean | \"indeterminate\"): void;\n}\n\n/** The props that a popover component injected into autocomponent's shadcn must support */\nexport interface PopoverProps extends React.HTMLAttributes<HTMLDivElement> {\n  open?: boolean;\n  defaultOpen?: boolean;\n  onOpenChange?: (open: boolean) => void;\n}\n\n/** The props that a popover anchor component injected into autocomponent's shadcn must support */\nexport type PopoverAnchorProps = React.HTMLAttributes<HTMLDivElement>;\n\n/** The props that a popover content component injected into autocomponent's shadcn must support */\nexport type PopoverContentProps = React.HTMLAttributes<HTMLDivElement>;\n\n/** The props that a popover trigger component injected into autocomponent's shadcn must support */\nexport type PopoverTriggerProps = React.HTMLAttributes<HTMLDivElement>;\n\n/** The props that a skeleton component injected into autocomponent's shadcn must support */\nexport type SkeletonProps = Pick<React.HTMLAttributes<HTMLDivElement>, \"className\">;\n\n/** One toast for showing via the toasting system */\nexport type ToasterToast = {\n  className?: string;\n  title?: any;\n  description?: any;\n  action?: any;\n  variant?: any;\n};\n\nexport type MergeClassNames = (defaultClassNames: string | string[], userClassName?: string) => string;\n\nexport interface ShadcnElements {\n  /** The Badge component from shadcn */\n  Badge: React.ComponentType<BadgeProps>;\n\n  /** The Alert component from shadcn */\n  Alert: React.ComponentType<AlertProps>;\n  /** The AlertTitle component from shadcn */\n  AlertTitle: React.ComponentType<AlertTitleProps>;\n  /** The AlertDescription component from shadcn */\n  AlertDescription: React.ComponentType<AlertDescriptionProps>;\n\n  /** The Button component from shadcn */\n  Button: React.ForwardRefExoticComponent<ButtonProps & React.RefAttributes<HTMLButtonElement>>;\n\n  /** The Card component from shadcn */\n  Card: React.ComponentType<CardProps>;\n\n  /** The Calendar component from shadcn */\n  Calendar: React.ComponentType<any>;\n\n  /** The CommandLoading component from shadcn */\n  CommandLoading: React.ComponentType<React.HTMLAttributes<HTMLDivElement>>;\n\n  /** The CardHeader component from shadcn */\n  CardHeader: React.ComponentType<CardHeaderProps>;\n  /** The CardFooter component from shadcn */\n  CardFooter: React.ComponentType<CardFooterProps>;\n  /** The CardTitle component from shadcn */\n  CardTitle: React.ComponentType<CardTitleProps>;\n  /** The CardDescription component from shadcn */\n  CardDescription: React.ComponentType<CardDescriptionProps>;\n  /** The CardContent component from shadcn */\n  CardContent: React.ComponentType<CardContentProps>;\n\n  /** The Command component from shadcn */\n  //:TODO: This is a hack to get the Command component to work with the CommandItem component. please fix this.\n  Command: React.ForwardRefExoticComponent<React.ComponentType<CommandProps> & React.RefAttributes<HTMLDivElement> & any>;\n  /** The CommandEmpty component from shadcn */\n  CommandEmpty: React.ComponentType<React.HTMLAttributes<HTMLDivElement>>;\n  /** The CommandGroup component from shadcn */\n  CommandGroup: React.ComponentType<React.HTMLAttributes<HTMLDivElement>>;\n  // /** The CommandInput component from shadcn */\n  // CommandInput: React.ComponentType<React.HTMLAttributes<HTMLDivElement>>;\n  CommandInput: any;\n  /** The CommandItem component from shadcn */\n  CommandItem: React.ComponentType<React.ComponentPropsWithoutRef<any>>;\n  /** The CommandList component from shadcn */\n  CommandList: React.ComponentType<React.HTMLAttributes<HTMLDivElement>>;\n  /** The CommandSeparator component from shadcn */\n  CommandSeparator: React.ComponentType<React.HTMLAttributes<HTMLDivElement>>;\n\n  /** The Checkbox component from shadcn */\n  Checkbox: React.ForwardRefExoticComponent<CheckboxProps & React.RefAttributes<HTMLButtonElement>>;\n\n  /** The DropdownMenu component from shadcn */\n  DropdownMenu: React.ComponentType<DropdownMenuProps>;\n  /** The DropdownMenuTrigger component from shadcn */\n  DropdownMenuTrigger: React.ComponentType<any>;\n  /** The DropdownMenuContent component from shadcn */\n  DropdownMenuContent: React.ComponentType<React.HTMLAttributes<HTMLDivElement>>;\n  /** The DropdownMenuItem component from shadcn */\n  DropdownMenuItem: React.ComponentType<any>;\n  /** The DropdownMenuLabel component from shadcn */\n  DropdownMenuLabel: React.ComponentType<React.HTMLAttributes<HTMLDivElement>>;\n  /** The DropdownMenuSeparator component from shadcn */\n  DropdownMenuSeparator: React.ComponentType<React.HTMLAttributes<HTMLDivElement>>;\n\n  /** The Form component from shadcn */\n  Form: React.ComponentType<FormProps>;\n\n  /** The Input component from shadcn */\n  Input: React.ComponentType<InputProps>;\n\n  /** The Label component from shadcn */\n  Label: React.ComponentType<LabelProps>;\n\n  /** The Textarea component from shadcn */\n  Textarea: React.ComponentType<React.HTMLAttributes<HTMLTextAreaElement>>;\n\n  //TODO: Remove these as they are not used\n  /** The Popover component from shadcn */\n  Popover: React.ComponentType<PopoverProps>;\n  //TODO: Remove these as they are not used\n  /** The PopoverAnchor component from shadcn */\n  PopoverAnchor: React.ComponentType<PopoverAnchorProps>;\n  //TODO: Remove these as they are not used\n  /** The PopoverContent component from shadcn */\n  PopoverContent: React.ComponentType<PopoverContentProps>;\n  /** The PopoverTrigger component from shadcn */\n  //:TODO: This is a hack to get the PopoverTrigger component to work with the Popover component. please fix this.\n  PopoverTrigger: React.ForwardRefExoticComponent<PopoverTriggerProps & React.RefAttributes<HTMLButtonElement> & any>;\n\n  /** The ScrollArea component from shadcn */\n  ScrollArea: React.ForwardRefExoticComponent<ScrollAreaProps & React.RefAttributes<HTMLDivElement> & any>;\n\n  /** The ScrollBar component from shadcn */\n  ScrollBar: React.ComponentType<ScrollBarProps>;\n\n  /** The Skeleton component from shadcn */\n  Skeleton: React.ComponentType<SkeletonProps>;\n\n  /** The toast imperative function from shadcn */\n  toast: (props: ToasterToast) => void;\n\n  /** The Table component from shadcn */\n  Table: React.ComponentType<TableProps>;\n  /** The TableBody component from shadcn */\n  TableBody: React.ComponentType<TableBodyProps>;\n  /** The TableCaption component from shadcn */\n  TableCaption: React.ComponentType<TableCaptionProps>;\n  /** The TableCell component from shadcn */\n  TableCell: React.ComponentType<TableCellProps>;\n  /** The TableFooter component from shadcn */\n  TableFooter: React.ComponentType<TableFooterProps>;\n  /** The TableHead component from shadcn */\n  TableHead: React.ComponentType<TableHeadProps>;\n  /** The TableHeader component from shadcn */\n  TableHeader: React.ComponentType<TableHeaderProps>;\n  /** The TableRow component from shadcn */\n  TableRow: React.ComponentType<TableRowProps>;\n\n  /** The TooltipProvider component from shadcn */\n  TooltipProvider: React.ComponentType<TooltipProviderProps>;\n  /** The Tooltip component from shadcn */\n  Tooltip: React.ComponentType<TooltipProps>;\n  /** The TooltipTrigger component from shadcn */\n  TooltipTrigger: React.ComponentType<TooltipTriggerProps>;\n  /** The TooltipContent component from shadcn */\n  TooltipContent: React.ComponentType<TooltipContentProps>;\n\n  /** The Avatar component from shadcn */\n  Avatar: React.ComponentType<AvatarProps>;\n  /** The AvatarImage component from shadcn */\n  AvatarImage: React.ComponentType<AvatarImageProps>;\n  /** The AvatarFallback component from shadcn */\n  AvatarFallback: React.ComponentType<AvatarFallbackProps>;\n\n  /** The Dialog component from shadcn that provides the root dialog functionality */\n  Dialog: React.ComponentType<DialogProps>;\n  /** The DialogTrigger component from shadcn that opens the dialog when clicked */\n  DialogTrigger: React.ComponentType<DialogTriggerProps>;\n  /** The DialogPortal component from shadcn that renders dialog content in a portal */\n  DialogPortal: React.ComponentType<DialogPortalProps>;\n  /** The DialogClose component from shadcn that closes the dialog when clicked */\n  DialogClose: React.ComponentType<DialogCloseProps>;\n  /** The DialogOverlay component from shadcn that provides the backdrop overlay */\n  DialogOverlay: React.ComponentType<DialogOverlayProps>;\n  /** The DialogContent component from shadcn that contains the main dialog content */\n  DialogContent: React.ComponentType<DialogContentProps>;\n  /** The DialogHeader component from shadcn that provides header styling and layout */\n  DialogHeader: React.ComponentType<DialogHeaderProps>;\n  /** The DialogFooter component from shadcn that provides footer styling and layout */\n  DialogFooter: React.ComponentType<DialogFooterProps>;\n  /** The DialogTitle component from shadcn that renders the dialog title */\n  DialogTitle: React.ComponentType<DialogTitleProps>;\n  /** The DialogDescription component from shadcn that renders descriptive text */\n  DialogDescription: React.ComponentType<DialogDescriptionProps>;\n\n  cn: MergeClassNames;\n}\n"]}