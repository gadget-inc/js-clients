{"version":3,"file":"ShadcnAutoTableTextCell.js","sourceRoot":"","sources":["../../../../../../src/auto/shadcn/table/cells/ShadcnAutoTableTextCell.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,MAAM,OAAO,CAAC;AAC1B,OAAO,EAAE,eAAe,EAAE,MAAM,mCAAmC,CAAC;AAQpE,MAAM,CAAC,MAAM,2BAA2B,GAAG,CAAC,QAAyC,EAAE,EAAE;IACvF,MAAM,EAAE,KAAK,EAAE,eAAe,EAAE,OAAO,EAAE,cAAc,EAAE,cAAc,EAAE,GAAG,QAAQ,CAAC;IAErF,SAAS,uBAAuB,CAAC,KAAqB;QACpD,MAAM,EAAE,KAAK,EAAE,GAAG,KAAK,CAAC;QACxB,MAAM,gBAAgB,GAAG,OAAO,KAAK,KAAK,QAAQ,CAAC,CAAC,CAAC,CAAC,UAAU,IAAI,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,KAAK,EAAE,CAAC;QAEjI,MAAM,EAAE,YAAY,EAAE,eAAe,EAAE,YAAY,EAAE,GAAG,eAAe,EAAE,CAAC;QAE1E,OAAO,CACL,6BAAK,KAAK,EAAE,EAAE,QAAQ,EAAE,MAAM,EAAE,EAAE,GAAG,EAAE,YAAY;YACjD,oBAAC,eAAe;gBACd,oBAAC,OAAO;oBACL,YAAY,IAAI,CACf,oBAAC,cAAc,IAAC,SAAS,EAAC,+IAA+I,IACtK,gBAAgB,CACF,CAClB;oBACD,oBAAC,cAAc,IAAC,SAAS,EAAC,0CAA0C;wBAClE,oBAAC,KAAK;4BACJ,8BAAM,GAAG,EAAE,eAAe,IAAG,gBAAgB,CAAQ,CAC/C,CACO,CACT,CACM,CACd,CACP,CAAC;IACJ,CAAC;IAED,OAAO,uBAAuB,CAAC;AACjC,CAAC,CAAC","sourcesContent":["import React from \"react\";\nimport { useIsOverflowed } from \"../../../hooks/useIsOverflowed.js\";\nimport type { ShadcnElements } from \"../../elements.js\";\n\nexport type ShadcnAutoTableTextCellElements = Pick<\n  ShadcnElements,\n  \"Label\" | \"TooltipProvider\" | \"Tooltip\" | \"TooltipTrigger\" | \"TooltipContent\"\n>;\n\nexport const makeShadcnAutoTableTextCell = (elements: ShadcnAutoTableTextCellElements) => {\n  const { Label, TooltipProvider, Tooltip, TooltipTrigger, TooltipContent } = elements;\n\n  function ShadcnAutoTableTextCell(props: { value: any }) {\n    const { value } = props;\n    const stringifiedValue = typeof value === \"object\" ? (\"markdown\" in value ? value.markdown : JSON.stringify(value)) : `${value}`;\n\n    const { isOverflowed, childElementRef, containerRef } = useIsOverflowed();\n\n    return (\n      <div style={{ maxWidth: \"100%\" }} ref={containerRef}>\n        <TooltipProvider>\n          <Tooltip>\n            {isOverflowed && (\n              <TooltipContent className=\"max-w-[150px] max-h-[100px] overflow-y-auto overflow-x-hidden bg-background border border-neutral-300 shadow-md whitespace-normal break-words\">\n                {stringifiedValue}\n              </TooltipContent>\n            )}\n            <TooltipTrigger className=\"max-w-full overflow-hidden text-ellipsis\">\n              <Label>\n                <span ref={childElementRef}>{stringifiedValue}</span>\n              </Label>\n            </TooltipTrigger>\n          </Tooltip>\n        </TooltipProvider>\n      </div>\n    );\n  }\n\n  return ShadcnAutoTableTextCell;\n};\n"]}