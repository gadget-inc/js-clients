{"version":3,"file":"ShadcnAutoFileInput.js","sourceRoot":"","sources":["../../../../../src/auto/shadcn/inputs/ShadcnAutoFileInput.tsx"],"names":[],"mappings":"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","sourcesContent":["import { DeleteIcon, File } from \"lucide-react\";\nimport React, { HtmlHTMLAttributes, useMemo, type ReactNode } from \"react\";\nimport type { Control } from \"../../../useActionForm.js\";\nimport { isAutoFileFieldValue } from \"../../../validationSchema.js\";\nimport { autoInput } from \"../../AutoInput.js\";\nimport { useFileInputController } from \"../../hooks/useFileInputController.js\";\nimport { ShadcnElements } from \"../elements.js\";\n\nexport const makeShadcnAutoFileInput = ({\n  Input,\n  Label,\n  Button,\n  Avatar,\n  AvatarImage,\n  AvatarFallback,\n}: Pick<ShadcnElements, \"Input\" | \"Label\" | \"Button\" | \"Avatar\" | \"AvatarImage\" | \"AvatarFallback\">) => {\n  function ShadcnAutoFileInput(\n    props: {\n      field: string;\n      control?: Control<any>;\n      label?: ReactNode;\n    } & HtmlHTMLAttributes<HTMLDivElement>\n  ) {\n    const { field: fieldApiIdentifier, control, ...rest } = props;\n\n    const {\n      fieldProps,\n      errorMessage,\n      imageThumbnailURL,\n      onFileUpload,\n      clearFileValue,\n      canClearFileValue,\n      validations,\n      metadata,\n      actionHintParts,\n    } = useFileInputController({\n      field: fieldApiIdentifier,\n      control,\n    });\n\n    const fileUploadContainer = useMemo(() => {\n      if (!actionHintParts) {\n        return null;\n      }\n\n      return (\n        <div>\n          {actionHintParts.length > 1 && (\n            <Label>\n              <span className=\"block text-sm text-gray-500 mb-2\">\n                {actionHintParts.map((part, index) => (\n                  <span key={index} className=\"mr-1\">\n                    {part}\n                  </span>\n                ))}\n              </span>\n            </Label>\n          )}\n\n          <Input\n            type=\"file\"\n            {...props}\n            accept={validations.onlyImages?.acceptedTypes?.join(\",\")}\n            onChange={(e) => {\n              if (e.target.files) {\n                void onFileUpload(Array.from(e.target.files));\n              }\n            }}\n          />\n        </div>\n      );\n    }, [actionHintParts, validations.onlyImages?.acceptedTypes, props, onFileUpload]);\n\n    const inputLabel = props.label ?? (\n      <div style={{ display: \"flex\", gap: \"4px\" }}>\n        {metadata.name}\n        {metadata.requiredArgumentForInput ? <span style={{ color: \"var(--p-color-text-critical)\" }}>{\"*\"}</span> : null}\n      </div>\n    );\n\n    const filePreview = useMemo(() => {\n      const value = fieldProps.value;\n      if (!value || !isAutoFileFieldValue(value)) return null;\n\n      return (\n        <div className=\"p-8 pr-16\">\n          <div className=\"flex justify-between items-center gap-8\">\n            <div className=\"flex items-center gap-4\">\n              <Avatar>\n                <AvatarImage src={imageThumbnailURL} />\n                <AvatarFallback>\n                  <File />\n                </AvatarFallback>\n              </Avatar>\n\n              <div className=\"text-sm\">\n                {value.$uploading ? \"(Uploading) \" : \"\"}\n                {value.fileName}\n              </div>\n            </div>\n\n            {/* Delete Button */}\n            {canClearFileValue && (\n              <Button variant=\"ghost\" size=\"sm\" onClick={() => clearFileValue()} id={`clear-file-${fieldApiIdentifier}`}>\n                <DeleteIcon className=\"w-4 h-4\" />\n              </Button>\n            )}\n          </div>\n        </div>\n      );\n    }, [canClearFileValue, clearFileValue, fieldApiIdentifier, fieldProps.value, imageThumbnailURL]);\n\n    return (\n      <div>\n        {inputLabel}\n        {fileUploadContainer}\n        {filePreview}\n        <div>\n          {errorMessage && (\n            <div style={{ marginTop: \"4px\" }}>\n              <Label className=\"text-red-500\">{errorMessage}</Label>\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  }\n\n  return autoInput(ShadcnAutoFileInput);\n};\n"]}