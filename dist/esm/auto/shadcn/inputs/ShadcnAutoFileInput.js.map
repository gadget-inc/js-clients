{"version":3,"file":"ShadcnAutoFileInput.js","sourceRoot":"","sources":["../../../../../src/auto/shadcn/inputs/ShadcnAutoFileInput.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,QAAQ,EAAE,MAAM,UAAU,CAAC;AACpC,OAAO,KAAK,EAAE,EAAsB,OAAO,EAAkB,MAAM,OAAO,CAAC;AAE3E,OAAO,EAAE,SAAS,EAAE,MAAM,oBAAoB,CAAC;AAC/C,OAAO,EAAE,4BAA4B,EAAE,sBAAsB,EAAE,MAAM,uCAAuC,CAAC;AAG7G,MAAM,CAAC,MAAM,uBAAuB,GAAG,CAAC,EAAE,KAAK,EAAE,KAAK,EAA2C,EAAE,EAAE;IACnG,SAAS,mBAAmB,CAC1B,KAIsC;QAEtC,MAAM,EAAE,KAAK,EAAE,kBAAkB,EAAE,OAAO,EAAE,GAAG,IAAI,EAAE,GAAG,KAAK,CAAC;QAC9D,MAAM,EAAE,UAAU,EAAE,YAAY,EAAE,iBAAiB,EAAE,YAAY,EAAE,cAAc,EAAE,iBAAiB,EAAE,WAAW,EAAE,QAAQ,EAAE,GAC3H,sBAAsB,CAAC;YACrB,KAAK,EAAE,kBAAkB;YACzB,OAAO;SACR,CAAC,CAAC;QAEL,MAAM,mBAAmB,GAAG,OAAO,CAAC,GAAG,EAAE;YACvC,IAAI,UAAU,CAAC,KAAK;gBAAE,OAAO,IAAI,CAAC;YAElC,MAAM,eAAe,GAAG,CAAC,SAAS,CAAC,CAAC;YACpC,IAAI,WAAW,CAAC,UAAU,EAAE,CAAC;gBAC3B,eAAe,CAAC,IAAI,CAAC,oBAAoB,WAAW,CAAC,UAAU,CAAC,mBAAmB,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,YAAY,CAAC,CAAC;YACnH,CAAC;YAED,IAAI,WAAW,CAAC,QAAQ,EAAE,CAAC;gBACzB,MAAM,UAAU,GAAG,WAAW,CAAC,QAAQ,CAAC;gBACxC,MAAM,OAAO,GAAG,4BAA4B,CAAC,UAAU,EAAE;oBACvD,OAAO,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,EAAE,CAAC,WAAW,QAAQ,CAAC,GAAG,CAAC,QAAQ,QAAQ,CAAC,GAAG,CAAC,EAAE;oBACtE,GAAG,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,gBAAgB,QAAQ,CAAC,GAAG,CAAC,EAAE;oBAC7C,GAAG,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,eAAe,QAAQ,CAAC,GAAG,CAAC,EAAE;iBAC7C,CAAC,CAAC;gBACH,IAAI,OAAO;oBAAE,eAAe,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YAC7C,CAAC;YAED,OAAO,CACL;gBACE,oBAAC,KAAK,QACH,eAAe,CAAC,MAAM,GAAG,CAAC,IAAI,CAC7B,8BAAM,SAAS,EAAC,kCAAkC,IAC/C,eAAe,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,KAAK,EAAE,EAAE,CAAC,CACpC,8BAAM,GAAG,EAAE,KAAK,EAAE,SAAS,EAAC,MAAM,IAC/B,IAAI,CACA,CACR,CAAC,CACG,CACR,CACK;gBACR,oBAAC,KAAK,IAAC,IAAI,EAAC,MAAM,KAAK,KAAK,GAAI,CAC5B,CACP,CAAC;QACJ,CAAC,EAAE,CAAC,UAAU,CAAC,KAAK,EAAE,WAAW,CAAC,QAAQ,EAAE,WAAW,CAAC,UAAU,CAAC,CAAC,CAAC;QAErE,OAAO,iCAAM,mBAAmB,CAAO,CAAC;IAC1C,CAAC;IAED,OAAO,SAAS,CAAC,mBAAmB,CAAC,CAAC;AACxC,CAAC,CAAC","sourcesContent":["import { filesize } from \"filesize\";\nimport React, { HtmlHTMLAttributes, useMemo, type ReactNode } from \"react\";\nimport type { Control } from \"../../../useActionForm.js\";\nimport { autoInput } from \"../../AutoInput.js\";\nimport { getFileSizeValidationMessage, useFileInputController } from \"../../hooks/useFileInputController.js\";\nimport { ShadcnElements } from \"../elements.js\";\n\nexport const makeShadcnAutoFileInput = ({ Input, Label }: Pick<ShadcnElements, \"Input\" | \"Label\">) => {\n  function ShadcnAutoFileInput(\n    props: {\n      field: string;\n      control?: Control<any>;\n      label?: ReactNode;\n    } & HtmlHTMLAttributes<HTMLDivElement>\n  ) {\n    const { field: fieldApiIdentifier, control, ...rest } = props;\n    const { fieldProps, errorMessage, imageThumbnailURL, onFileUpload, clearFileValue, canClearFileValue, validations, metadata } =\n      useFileInputController({\n        field: fieldApiIdentifier,\n        control,\n      });\n\n    const fileUploadContainer = useMemo(() => {\n      if (fieldProps.value) return null;\n\n      const actionHintParts = [\"Accepts\"];\n      if (validations.onlyImages) {\n        actionHintParts.push(`.jpg, .webp, .svg${validations.onlyImages.allowAnimatedImages ? \", .gif\" : \"\"}, and .png`);\n      }\n\n      if (validations.fileSize) {\n        const validation = validations.fileSize;\n        const message = getFileSizeValidationMessage(validation, {\n          inRange: (min, max) => `between ${filesize(min)} and ${filesize(max)}`,\n          max: (max) => `smaller than ${filesize(max)}`,\n          min: (min) => `larger than ${filesize(min)}`,\n        });\n        if (message) actionHintParts.push(message);\n      }\n\n      return (\n        <div>\n          <Label>\n            {actionHintParts.length > 0 && (\n              <span className=\"block text-sm text-gray-500 mb-2\">\n                {actionHintParts.map((part, index) => (\n                  <span key={index} className=\"mr-1\">\n                    {part}\n                  </span>\n                ))}\n              </span>\n            )}\n          </Label>\n          <Input type=\"file\" {...props} />\n        </div>\n      );\n    }, [fieldProps.value, validations.fileSize, validations.onlyImages]);\n\n    return <div>{fileUploadContainer}</div>;\n  }\n\n  return autoInput(ShadcnAutoFileInput);\n};\n"]}