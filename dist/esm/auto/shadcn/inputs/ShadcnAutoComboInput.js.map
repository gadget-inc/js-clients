{"version":3,"file":"ShadcnAutoComboInput.js","sourceRoot":"","sources":["../../../../../src/auto/shadcn/inputs/ShadcnAutoComboInput.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,EAAE,EAAE,MAAM,EAAE,QAAQ,EAAE,MAAM,OAAO,CAAC;AAEhD,OAAO,EAAE,eAAe,EAAE,MAAM,6BAA6B,CAAC;AAE9D,OAAO,EAAE,cAAc,EAAE,MAAM,sBAAsB,CAAC;AAGtD,OAAO,EAAE,sBAAsB,EAAE,MAAM,uCAAuC,CAAC;AAkB/E,MAAM,CAAC,MAAM,wBAAwB,GAAG,CAAC,EACvC,OAAO,EACP,YAAY,EACZ,KAAK,EACL,WAAW,EACX,WAAW,EACX,YAAY,EACZ,YAAY,EACZ,QAAQ,GAIT,EAAE,EAAE;IACH,MAAM,EAAE,kBAAkB,EAAE,GAAG,sBAAsB,CAAC;QACpD,WAAW;QACX,WAAW;QACX,YAAY;QACZ,YAAY;QACZ,QAAQ;QACR,KAAK;KACN,CAAC,CAAC;IAEH,SAAS,oBAAoB,CAAC,KAA4B;QACxD,MAAM,QAAQ,GAAG,MAAM,CAAmB,IAAI,CAAC,CAAC;QAChD,MAAM,aAAa,GAAG,MAAM,CAAiB,IAAI,CAAC,CAAC;QACnD,MAAM,CAAC,IAAI,EAAE,OAAO,CAAC,GAAG,QAAQ,CAAC,KAAK,CAAC,CAAC;QACxC,MAAM,CAAC,UAAU,EAAE,aAAa,CAAC,GAAG,QAAQ,CAAC,KAAK,CAAC,YAAY,IAAI,EAAE,CAAC,CAAC;QACvE,MAAM,EAAE,GAAG,KAAK,CAAC,EAAE,IAAI,GAAG,KAAK,CAAC,IAAI,QAAQ,CAAC;QAC7C,MAAM,UAAU,GAAG,KAAK,CAAC,KAAK,IAAI,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC;QAEtD,MAAM,iBAAiB,GAAG,KAAK,CAAC,QAAQ,CAAC,wBAAwB,CAAC,CAAC,CAAC,oBAAC,cAAc,YAAmB,CAAC,CAAC,CAAC,IAAI,CAAC;QAE9G,eAAe,CAAC,aAAa,EAAE,GAAG,EAAE;YAClC,IAAI,IAAI,EAAE,CAAC;gBACT,OAAO,CAAC,KAAK,CAAC,CAAC;YACjB,CAAC;QACH,CAAC,CAAC,CAAC;QAEH,OAAO,CACL,6BAAK,GAAG,EAAE,aAAa;YACpB,CAAC,KAAK,CAAC,SAAS,IAAI,CACnB,oBAAC,KAAK,IAAC,OAAO,EAAE,EAAE;gBACf,UAAU;;gBAAG,iBAAiB,CACzB,CACT;YACD,6BAAK,SAAS,EAAE,8BAA8B,IAAI,CAAC,CAAC,CAAC,kBAAkB,CAAC,CAAC,CAAC,EAAE,EAAE;gBAC3E,KAAK,CAAC,iBAAiB,IAAI,6BAAK,SAAS,EAAC,qBAAqB,IAAE,KAAK,CAAC,iBAAiB,CAAO;gBAChG,oBAAC,OAAO,IAAC,SAAS,EAAC,uBAAuB;oBACxC,oBAAC,YAAY,IACX,IAAI,EAAE,KAAK,CAAC,IAAI,EAChB,GAAG,EAAE,QAAQ,iBACA,EAAE,EACf,KAAK,EAAE,UAAU,EACjB,aAAa,EAAE,CAAC,KAAa,EAAE,EAAE;4BAC/B,aAAa,CAAC,KAAK,CAAC,CAAC;4BACrB,KAAK,CAAC,QAAQ,EAAE,CAAC,KAAK,CAAC,CAAC;wBAC1B,CAAC,EACD,OAAO,EAAE,GAAG,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC,EAC5B,WAAW,EAAE,KAAK,CAAC,WAAW,EAC9B,SAAS,EAAC,2EAA2E,GACrF;oBACD,IAAI,IAAI,CACP;wBACE,oBAAC,kBAAkB,IACjB,gBAAgB,EAAE,KAAK,CAAC,gBAAgB,EACxC,SAAS,EAAE,KAAK,CAAC,SAAS,EAC1B,YAAY,EAAE,KAAK,CAAC,YAAY,EAChC,OAAO,EAAE,KAAK,CAAC,OAAO,EACtB,OAAO,EAAE,KAAK,CAAC,OAAO,EACtB,OAAO,EAAE,KAAK,CAAC,OAAO,EACtB,QAAQ,EAAE,KAAK,CAAC,QAAQ,EACxB,aAAa,EAAE,KAAK,CAAC,aAAa,EAClC,aAAa,EAAE,KAAK,CAAC,aAAa,EAClC,YAAY,EAAE,KAAK,CAAC,YAAY,EAChC,UAAU,EAAE,KAAK,CAAC,UAAU,EAC5B,WAAW,EAAE,UAAU,EACvB,cAAc,EAAE,aAAa,EAC7B,gBAAgB,EAAE,KAAK,CAAC,gBAAgB,EACxC,YAAY,EAAE,KAAK,CAAC,YAAY,EAChC,WAAW,EAAE,KAAK,CAAC,mBAAmB,EACtC,UAAU,EAAE,KAAK,CAAC,kBAAkB,GACpC,CACD,CACJ,CACO,CACN,CACF,CACP,CAAC;IACJ,CAAC;IAED,OAAO,oBAAoB,CAAC;AAC9B,CAAC,CAAC","sourcesContent":["import React, { useRef, useState } from \"react\";\nimport type { FieldMetadata } from \"../../../metadata.js\";\nimport { useClickOutside } from \"../../../useClickOutside.js\";\nimport type { AutoRelationshipInputProps } from \"../../interfaces/AutoRelationshipInputProps.js\";\nimport { ShadcnRequired } from \"../ShadcnRequired.js\";\nimport type { ShadcnElements } from \"../elements.js\";\nimport type { RelatedModelOptionsProps } from \"./relationships/RelatedModelOption.js\";\nimport { makeRelatedModelOption } from \"./relationships/RelatedModelOption.js\";\ninterface ShadcnComboInputProps extends AutoRelationshipInputProps, RelatedModelOptionsProps {\n  selectedRecordTag: React.JSX.Element | null;\n  path: string;\n  id?: string; // This is used to set the id of the input field\n  metadata: FieldMetadata;\n  hideLabel?: boolean;\n  allowMultiple?: boolean;\n  allowOther?: boolean;\n  onAddExtraOption?: (value: string) => void;\n  formatOptionText?: (option: string) => React.ReactNode;\n  emptyMessage?: string;\n  defaultValue?: string;\n  onScrolledToBottom?: () => void;\n  willLoadMoreOptions?: boolean;\n  onChange?: (value: string) => void;\n}\n\nexport const makeShadcnAutoComboInput = ({\n  Command,\n  CommandInput,\n  Label,\n  CommandItem,\n  CommandList,\n  CommandEmpty,\n  CommandGroup,\n  Checkbox,\n}: Pick<\n  ShadcnElements,\n  \"Command\" | \"CommandInput\" | \"Label\" | \"CommandItem\" | \"CommandList\" | \"CommandEmpty\" | \"CommandGroup\" | \"Checkbox\"\n>) => {\n  const { RelatedModelOption } = makeRelatedModelOption({\n    CommandItem,\n    CommandList,\n    CommandEmpty,\n    CommandGroup,\n    Checkbox,\n    Label,\n  });\n\n  function ShadcnAutoComboInput(props: ShadcnComboInputProps) {\n    const inputRef = useRef<HTMLInputElement>(null);\n    const outsideBoxRef = useRef<HTMLDivElement>(null);\n    const [open, setOpen] = useState(false);\n    const [inputValue, setInputValue] = useState(props.defaultValue || \"\");\n    const id = props.id || `${props.path}-input`;\n    const inputLabel = props.label || props.metadata.name;\n\n    const requiredIndicator = props.metadata.requiredArgumentForInput ? <ShadcnRequired>*</ShadcnRequired> : null;\n\n    useClickOutside(outsideBoxRef, () => {\n      if (open) {\n        setOpen(false);\n      }\n    });\n\n    return (\n      <div ref={outsideBoxRef}>\n        {!props.hideLabel && (\n          <Label htmlFor={id}>\n            {inputLabel} {requiredIndicator}\n          </Label>\n        )}\n        <div className={`relative rounded-md border ${open ? \"ring-1 ring-ring\" : \"\"}`}>\n          {props.selectedRecordTag && <div className=\"py-2 px-2 pt-2 pb-1\">{props.selectedRecordTag}</div>}\n          <Command className=\"overflow-visible z-50\">\n            <CommandInput\n              name={props.path}\n              ref={inputRef}\n              data-testid={id}\n              value={inputValue}\n              onValueChange={(value: string) => {\n                setInputValue(value);\n                props.onChange?.(value);\n              }}\n              onFocus={() => setOpen(true)}\n              placeholder={props.placeholder}\n              className=\"ml-2 bg-transparent outline-none placeholder:text-muted-foreground flex-1\"\n            />\n            {open && (\n              <>\n                <RelatedModelOption\n                  onAddExtraOption={props.onAddExtraOption}\n                  isLoading={props.isLoading}\n                  errorMessage={props.errorMessage}\n                  options={props.options}\n                  records={props.records}\n                  actions={props.actions}\n                  onSelect={props.onSelect}\n                  checkSelected={props.checkSelected}\n                  allowMultiple={props.allowMultiple}\n                  renderOption={props.renderOption}\n                  allowOther={props.allowOther}\n                  searchValue={inputValue}\n                  setSearchValue={setInputValue}\n                  formatOptionText={props.formatOptionText}\n                  emptyMessage={props.emptyMessage}\n                  canLoadMore={props.willLoadMoreOptions}\n                  onLoadMore={props.onScrolledToBottom}\n                />\n              </>\n            )}\n          </Command>\n        </div>\n      </div>\n    );\n  }\n\n  return ShadcnAutoComboInput;\n};\n"]}