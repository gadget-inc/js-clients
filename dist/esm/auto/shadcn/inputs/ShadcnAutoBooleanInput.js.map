{"version":3,"file":"ShadcnAutoBooleanInput.js","sourceRoot":"","sources":["../../../../../src/auto/shadcn/inputs/ShadcnAutoBooleanInput.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,EAAE,EAAE,SAAS,EAAE,MAAM,OAAO,CAAC;AAEzC,OAAO,EAAE,aAAa,EAAE,cAAc,EAAE,MAAM,2BAA2B,CAAC;AAC1E,OAAO,EAAE,GAAG,EAAE,MAAM,mBAAmB,CAAC;AACxC,OAAO,EAAE,SAAS,EAAE,MAAM,oBAAoB,CAAC;AAC/C,OAAO,EAAE,gBAAgB,EAAE,MAAM,iCAAiC,CAAC;AACnE,OAAO,EAAE,cAAc,EAAE,MAAM,sBAAsB,CAAC;AAGtD,MAAM,CAAC,MAAM,0BAA0B,GAAG,CAAC,EAAE,QAAQ,EAAE,KAAK,EAA8C,EAAE,EAAE;IAC5G,SAAS,sBAAsB,CAC7B,KAK0B;QAE1B,MAAM,EAAE,KAAK,EAAE,kBAAkB,EAAE,OAAO,EAAE,GAAG,IAAI,EAAE,GAAG,KAAK,CAAC;QAC9D,MAAM,EAAE,IAAI,EAAE,QAAQ,EAAE,GAAG,gBAAgB,CAAC,kBAAkB,CAAC,CAAC;QAEhE,MAAM,EACJ,KAAK,EAAE,UAAU,EACjB,UAAU,EAAE,EAAE,KAAK,EAAE,GACtB,GAAG,aAAa,CAAC;YAChB,OAAO;YACP,IAAI,EAAE,IAAI;SACX,CAAC,CAAC;QAEH,MAAM,EACJ,SAAS,EAAE,EAAE,aAAa,EAAE,GAC7B,GAAG,cAAc,EAAE,CAAC;QAErB,SAAS,CAAC,GAAG,EAAE;YACb,IAAI,QAAQ,CAAC,wBAAwB,EAAE,CAAC;gBACtC,qEAAqE;gBACrE,uFAAuF;gBACvF,MAAM,YAAY,GAAG,GAAG,CAAC,aAAa,IAAI,EAAE,EAAE,IAAI,CAAC,IAAI,KAAK,CAAC;gBAC7D,UAAU,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC;YACpC,CAAC;QACH,CAAC,EAAE,CAAC,QAAQ,CAAC,wBAAwB,EAAE,aAAa,CAAC,CAAC,CAAC;QAEvD,MAAM,KAAK,GAAG,KAAK,CAAC,KAAK,IAAI,QAAQ,CAAC,IAAI,CAAC;QAC3C,MAAM,EAAE,KAAK,EAAE,MAAM,EAAE,GAAG,cAAc,EAAE,GAAG,UAAU,CAAC;QAExD,OAAO,CACL,6BAAK,SAAS,EAAC,6BAA6B;YAC1C,oBAAC,QAAQ,OACH,cAAc,EAClB,EAAE,EAAE,IAAI,EACR,OAAO,EAAE,MAAM,kBACD,CAAC,CAAC,KAAK,KACjB,IAAI,EACR,QAAQ,EAAE,KAAK,CAAC,QAAQ,IAAI,KAAK,EACjC,eAAe,EAAE,UAAU,CAAC,QAAQ,GACpC;YACF,oBAAC,KAAK,IAAC,OAAO,EAAE,IAAI,EAAE,SAAS,EAAE,GAAG,KAAK,CAAC,SAAS,IAAI,EAAE,IAAI,KAAK,CAAC,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC,EAAE,EAAE,IACvF,KAAK,CACA;YACP,KAAK,IAAI,oBAAC,cAAc,QAAE,KAAK,CAAC,OAAO,CAAkB,CACtD,CACP,CAAC;IACJ,CAAC;IAED,OAAO,SAAS,CAAC,sBAAsB,CAAC,CAAC;AAC3C,CAAC,CAAC","sourcesContent":["import React, { useEffect } from \"react\";\nimport type { Control } from \"../../../useActionForm.js\";\nimport { useController, useFormContext } from \"../../../useActionForm.js\";\nimport { get } from \"../../../utils.js\";\nimport { autoInput } from \"../../AutoInput.js\";\nimport { useFieldMetadata } from \"../../hooks/useFieldMetadata.js\";\nimport { ShadcnRequired } from \"../ShadcnRequired.js\";\nimport type { CheckboxProps, ShadcnElements } from \"../elements.js\";\n\nexport const makeShadcnAutoBooleanInput = ({ Checkbox, Label }: Pick<ShadcnElements, \"Checkbox\" | \"Label\">) => {\n  function ShadcnAutoBooleanInput(\n    props: {\n      field: string;\n      control?: Control<any>;\n      className?: string;\n      label?: string;\n    } & Partial<CheckboxProps>\n  ) {\n    const { field: fieldApiIdentifier, control, ...rest } = props;\n    const { path, metadata } = useFieldMetadata(fieldApiIdentifier);\n\n    const {\n      field: fieldProps,\n      fieldState: { error },\n    } = useController({\n      control,\n      name: path,\n    });\n\n    const {\n      formState: { defaultValues },\n    } = useFormContext();\n\n    useEffect(() => {\n      if (metadata.requiredArgumentForInput) {\n        // when the field is required, this defaults to false to match the UI\n        // When not required, the field will have a null value unless it is touched by the user\n        const defaultValue = get(defaultValues ?? {}, path) ?? false;\n        fieldProps.onChange(defaultValue);\n      }\n    }, [metadata.requiredArgumentForInput, defaultValues]);\n\n    const label = props.label ?? metadata.name;\n    const { value: _value, ...restFieldProps } = fieldProps;\n\n    return (\n      <div className=\"flex items-center space-x-2\">\n        <Checkbox\n          {...restFieldProps}\n          id={path}\n          checked={_value}\n          aria-invalid={!!error}\n          {...rest}\n          disabled={props.disabled ?? false}\n          onCheckedChange={fieldProps.onChange}\n        />\n        <Label htmlFor={path} className={`${props.className ?? \"\"} ${error ? \"text-red-500\" : \"\"}`}>\n          {label}\n        </Label>\n        {error && <ShadcnRequired>{error.message}</ShadcnRequired>}\n      </div>\n    );\n  }\n\n  return autoInput(ShadcnAutoBooleanInput);\n};\n"]}