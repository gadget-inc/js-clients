{"version":3,"file":"ShadcnAutoDateTimePicker.js","sourceRoot":"","sources":["../../../../../src/auto/shadcn/inputs/ShadcnAutoDateTimePicker.tsx"],"names":[],"mappings":"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","sourcesContent":["import { CalendarIcon, X } from \"lucide-react\";\nimport React, { useCallback, useState, type ReactNode } from \"react\";\nimport { copyTime, formatDate, getDateTimeObjectFromDate, getTimeString, isValidDate, zonedTimeToUtc } from \"../../../dateTimeUtils.js\";\nimport type { GadgetDateTimeConfig } from \"../../../internal/gql/graphql.js\";\nimport { autoInput } from \"../../AutoInput.js\";\nimport { useDateTimeField } from \"../../hooks/useDateTimeField.js\";\nimport { ShadcnRequired } from \"../ShadcnRequired.js\";\nimport type { ShadcnElements } from \"../elements.js\";\nimport \"./auto-date-time-input.css\";\n\nexport interface Range {\n  start: Date;\n  end: Date;\n}\n\nexport interface DatePickerProps {\n  onChange: (date: Date) => void;\n  selected: Date;\n  onSelect: (date: Date) => void;\n  initialFocus: boolean;\n  mode: \"single\" | \"range\";\n  weekStartsOn: number;\n  dayAccessibilityLabelPrefix: string;\n  onMonthChange: (month: number, year: number) => void;\n  allowRange: boolean;\n  multiMonth: boolean;\n  disableDatesBefore: Date;\n  disableDatesAfter: Date;\n  disableSpecificDates: Date[];\n  range: Range;\n}\n\nexport const makeShadcnAutoDateTimePicker = ({\n  Button,\n  Calendar,\n  Label,\n  Popover,\n  PopoverTrigger,\n  PopoverContent,\n}: Pick<ShadcnElements, \"Button\" | \"Calendar\" | \"Label\" | \"Popover\" | \"PopoverTrigger\" | \"PopoverContent\">) => {\n  const ClearButton = (props: { onClear: () => void }) => {\n    return (\n      <div\n        className=\"ml-auto h-4 w-4 bg-transparent hover:opacity-30\"\n        onClick={(e) => {\n          e.stopPropagation();\n          props.onClear();\n        }}\n      >\n        <X />\n      </div>\n    );\n  };\n\n  function ShadcnAutoDateTimePicker(props: {\n    field: string;\n    id?: string;\n    value?: Date;\n    onChange?: (value?: Date) => void;\n    error?: string;\n    includeTime?: boolean;\n    hideTimePopover?: boolean;\n    label?: ReactNode;\n    datePickerProps?: Partial<DatePickerProps>;\n    timePickerProps?: { label?: ReactNode; placeholder?: string };\n  }) {\n    const { localTz, localTime, onChange, fieldProps, metadata, fieldState } = useDateTimeField({\n      field: props.field,\n      value: props.value,\n      onChange: props?.onChange,\n    });\n\n    const value = props.value ?? fieldProps.value;\n    const timeString = localTime ? getTimeString(getDateTimeObjectFromDate(localTime, true), true) : undefined;\n    const config = metadata.configuration;\n\n    const onDateChange = useCallback<Exclude<DatePickerProps[\"onChange\"], undefined>>(\n      (range) => {\n        (fieldProps || value) && copyTime(range, zonedTimeToUtc(range, localTz));\n        const dateOverride = value ?? new Date(fieldProps.value);\n        if (isValidDate(dateOverride)) {\n          range.setHours(dateOverride.getHours());\n          range.setMinutes(dateOverride.getMinutes());\n          range.setSeconds(dateOverride.getSeconds());\n          range.setMilliseconds(dateOverride.getMilliseconds());\n        }\n        onChange?.(zonedTimeToUtc(range, localTz));\n        fieldProps.onChange(zonedTimeToUtc(range, localTz));\n      },\n      [fieldProps, value, localTz, onChange]\n    );\n\n    const [isOpen, setIsOpen] = useState(false);\n\n    const handleDateSelect = (selectedDate: Date | undefined) => {\n      if (selectedDate) {\n        onDateChange?.(selectedDate);\n      }\n    };\n\n    const handleTimeInput = (inputTimeString: string) => {\n      const [hours, minutes] = inputTimeString.split(\":\").map(Number);\n      const newDate = localTime ? new Date(localTime) : new Date();\n      newDate.setHours(hours);\n      newDate.setMinutes(minutes);\n\n      onChange?.(zonedTimeToUtc(newDate, localTz));\n      fieldProps.onChange(zonedTimeToUtc(newDate, localTz));\n    };\n\n    const handleClear = () => {\n      onChange?.(undefined);\n      fieldProps.onChange(undefined);\n    };\n\n    return (\n      <Popover open={isOpen} onOpenChange={setIsOpen}>\n        <PopoverTrigger asChild onClick={(e: React.MouseEvent<HTMLButtonElement>) => e.stopPropagation()}>\n          <div>\n            <Label htmlFor={props.id ? `${props.id}-date` : undefined}>\n              {props.label ?? metadata.name ?? \"Date\"}\n              {metadata.requiredArgumentForInput && <ShadcnRequired>*</ShadcnRequired>}\n            </Label>\n            <Button\n              id={props.id ? `${props.id}-date` : undefined}\n              variant=\"outline\"\n              type=\"button\"\n              className={`w-full justify-start text-left font-normal ${!localTime ? \"text-muted-foreground\" : \"\"}`}\n            >\n              <CalendarIcon className=\"mr-2 h-4 w-4\" />\n              {localTime ? (\n                formatDate(localTime, props.includeTime ?? (config as GadgetDateTimeConfig).includeTime, true)\n              ) : (\n                <span className=\"opacity-50\">\n                  {props.includeTime ?? (config as GadgetDateTimeConfig).includeTime ? \"YYYY-MM-DD hh:mm aa\" : \"YYYY-MM-DD\"}\n                </span>\n              )}\n              {localTime && !metadata.requiredArgumentForInput && <ClearButton onClear={handleClear} />}\n            </Button>\n            {(props.error || fieldState.error?.message) && (\n              <Label className=\"text-red-500\">{props.error || fieldState.error?.message}</Label>\n            )}\n          </div>\n        </PopoverTrigger>\n        <PopoverContent className=\"w-auto p-0\">\n          <div className=\"flex flex-row flex-nowrap\">\n            <div className=\"relative bg-background\">\n              <Calendar\n                mode=\"single\"\n                defaultMonth={localTime}\n                selected={localTime}\n                onSelect={handleDateSelect}\n                initialFocus\n                classNames={{\n                  month_grid: \"w-full\",\n                  selected: \"bg-primary text-primary-foreground\",\n                  nav: \"translate-y-3\",\n                  day_button: \"w-full\",\n                }}\n              />\n            </div>\n            {(props.includeTime ?? (config as GadgetDateTimeConfig).includeTime) && (\n              <div className=\"flex flex-col p-4 bg-white border-l\">\n                <Label htmlFor={props.id ? `${props.id}-time` : undefined} data-testid={props.id ? `${props.id}-time` : undefined}>\n                  {props.timePickerProps?.label ?? \"Time\"} (HH:MM)\n                </Label>\n                <input\n                  type=\"time\"\n                  id={props.id ? `${props.id}-time` : undefined}\n                  data-testid={props.id ? `${props.id}-time` : undefined}\n                  className=\"shadcn-auto-form-time-input w-32 px-3 py-2 border rounded-md mt-2\"\n                  value={timeString}\n                  onChange={(e) => handleTimeInput(e.target.value)}\n                />\n              </div>\n            )}\n          </div>\n        </PopoverContent>\n      </Popover>\n    );\n  }\n\n  ShadcnAutoDateTimePicker.displayName = \"ShadcnAutoDateTimePicker\";\n\n  return autoInput(ShadcnAutoDateTimePicker);\n};\n"]}