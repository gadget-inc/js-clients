{"version":3,"file":"ShadcnAutoStringInput.js","sourceRoot":"","sources":["../../../../../src/auto/shadcn/inputs/ShadcnAutoStringInput.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAmD,MAAM,OAAO,CAAC;AAExE,OAAO,EAAE,SAAS,EAAE,MAAM,oBAAoB,CAAC;AAC/C,OAAO,EAAE,wBAAwB,EAAE,MAAM,yCAAyC,CAAC;AACnF,OAAO,EAAE,cAAc,EAAE,MAAM,sBAAsB,CAAC;AAGtD;;;;GAIG;AACH,MAAM,CAAC,MAAM,yBAAyB,GAAG,CAAC,EAAE,KAAK,EAAE,KAAK,EAA2C,EAAE,EAAE;IACrG,SAAS,qBAAqB,CAC5B,KAKkD;QAElD,MAAM,EAAE,KAAK,EAAE,OAAO,EAAE,KAAK,EAAE,WAAW,EAAE,MAAM,EAAE,GAAG,SAAS,EAAE,GAAG,KAAK,CAAC;QAC3E,MAAM,qBAAqB,GAAG,wBAAwB,CAAC,EAAE,KAAK,EAAE,OAAO,EAAE,CAAC,CAAC;QAC3E,MAAM,EACJ,IAAI,EACJ,WAAW,EACX,KAAK,EACL,YAAY,EACZ,IAAI,EACJ,KAAK,EAAE,eAAe,EACtB,QAAQ,EACR,YAAY,EACZ,QAAQ,EACR,MAAM,GACP,GAAG,qBAAqB,CAAC;QAE1B,MAAM,EAAE,GAAG,IAAI,IAAI,GAAG,KAAK,QAAQ,CAAC;QAEpC,MAAM,UAAU,GAAG,WAAW,IAAI,eAAe,IAAI,QAAQ,CAAC,IAAI,CAAC;QAEnE,MAAM,iBAAiB,GAAG,QAAQ,CAAC,wBAAwB,CAAC,CAAC,CAAC,oBAAC,cAAc,YAAmB,CAAC,CAAC,CAAC,IAAI,CAAC;QAExG,OAAO,CACL;YACE,oBAAC,KAAK,IAAC,OAAO,EAAE,EAAE;gBACf,UAAU;;gBAAG,iBAAiB,CACzB;YACR,6BAAK,SAAS,EAAE,MAAM,CAAC,CAAC,CAAC,2FAA2F,CAAC,CAAC,CAAC,UAAU;gBAC/H,6BAAK,SAAS,EAAC,4BAA4B;oBACzC,oBAAC,KAAK,IACJ,IAAI,EAAE,IAAI,EACV,IAAI,EAAE,IAAI,IAAI,MAAM,EACpB,EAAE,EAAE,EAAE,EACN,KAAK,EAAE,KAAK,IAAI,EAAE,EAClB,YAAY,EAAE,YAAY,EAC1B,QAAQ,EAAE,QAAQ,EAClB,MAAM,EAAE,MAAM,EACd,QAAQ,EAAE,QAAQ,CAAC,wBAAwB,IAAI,KAAK,EACpD,SAAS,EAAE,MAAM,CAAC,CAAC,CAAC,qEAAqE,CAAC,CAAC,CAAC,EAAE,KAC1F,SAAS,EACb,WAAW,EAAE,WAAW,GACxB;oBACD,MAAM,IAAI,6BAAK,SAAS,EAAC,8BAA8B,IAAE,MAAM,CAAO,CACnE;gBACL,YAAY,IAAI,2BAAG,SAAS,EAAC,sBAAsB,IAAE,YAAY,CAAK,CACnE,CACF,CACP,CAAC;IACJ,CAAC;IAED,OAAO,SAAS,CAAC,qBAAqB,CAAC,CAAC;AAC1C,CAAC,CAAC","sourcesContent":["import React, { type InputHTMLAttributes, type ReactNode } from \"react\";\nimport type { Control } from \"../../../useActionForm.js\";\nimport { autoInput } from \"../../AutoInput.js\";\nimport { useStringInputController } from \"../../hooks/useStringInputController.js\";\nimport { ShadcnRequired } from \"../ShadcnRequired.js\";\nimport type { ShadcnElements } from \"../elements.js\";\n\n/**\n * Make the Shadcn components for the auto string input\n * @param elements - The Shadcn elements to use\n * @returns The Shadcn components for the auto string input\n */\nexport const makeShadcnAutoStringInput = ({ Input, Label }: Pick<ShadcnElements, \"Input\" | \"Label\">) => {\n  function ShadcnAutoStringInput(\n    props: {\n      field: string;\n      control?: Control<any>;\n      label?: ReactNode;\n      suffix?: React.ReactNode;\n    } & Partial<InputHTMLAttributes<HTMLInputElement>>\n  ) {\n    const { field, control, label: customLabel, suffix, ...restProps } = props;\n    const stringInputController = useStringInputController({ field, control });\n    const {\n      name,\n      placeholder,\n      value,\n      autoComplete,\n      type,\n      label: controllerLabel,\n      metadata,\n      errorMessage,\n      onChange,\n      onBlur,\n    } = stringInputController;\n\n    const id = name || `${field}-input`;\n\n    const inputLabel = customLabel || controllerLabel || metadata.name;\n\n    const requiredIndicator = metadata.requiredArgumentForInput ? <ShadcnRequired>*</ShadcnRequired> : null;\n\n    return (\n      <div>\n        <Label htmlFor={id}>\n          {inputLabel} {requiredIndicator}\n        </Label>\n        <div className={suffix ? \"relative group border border-input rounded-md focus-within:ring-1 focus-within:ring-ring \" : \"relative\"}>\n          <div className=\"relative flex items-center\">\n            <Input\n              name={name}\n              type={type || \"text\"}\n              id={id}\n              value={value ?? \"\"}\n              autoComplete={autoComplete}\n              onChange={onChange}\n              onBlur={onBlur}\n              required={metadata.requiredArgumentForInput || false}\n              className={suffix ? \"border-0 shadow-none rounded-none focus:ring-0 focus-visible:ring-0\" : \"\"}\n              {...restProps}\n              placeholder={placeholder}\n            />\n            {suffix && <div className=\" h-10 flex items-center px-3\">{suffix}</div>}\n          </div>\n          {errorMessage && <p className=\"text-sm text-red-500\">{errorMessage}</p>}\n        </div>\n      </div>\n    );\n  }\n\n  return autoInput(ShadcnAutoStringInput);\n};\n"]}