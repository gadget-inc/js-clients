{"version":3,"file":"ShadcnAutoHasOneForm.js","sourceRoot":"","sources":["../../../../../../src/auto/shadcn/inputs/relationships/ShadcnAutoHasOneForm.tsx"],"names":[],"mappings":"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","sourcesContent":["import { CommandSeparator } from \"cmdk\";\nimport { EllipsisVerticalIcon, PlusIcon } from \"lucide-react\";\nimport React, { useCallback } from \"react\";\nimport { useHasOneForm } from \"../../../../useHasOneForm.js\";\nimport { debounce } from \"../../../../utils.js\";\nimport { autoRelationshipForm } from \"../../../AutoInput.js\";\nimport { RelationshipContext } from \"../../../hooks/useAutoRelationship.js\";\nimport { optionRecordsToLoadCount } from \"../../../hooks/useRelatedModel.js\";\nimport type { OptionLabel } from \"../../../interfaces/AutoRelationshipInputProps.js\";\nimport type { ShadcnElements } from \"../../elements.js\";\nimport { makeShadcnRenderOptionLabel } from \"../../utils.js\";\nimport { makeShadcnAutoComboInput } from \"../ShadcnAutoComboInput.js\";\n\nexport const makeShadcnAutoHasOneForm = ({\n  Badge,\n  Button,\n  Command,\n  CommandItem,\n  CommandInput,\n  CommandLoading,\n  DropdownMenu,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuTrigger,\n  Label,\n  CommandList,\n  CommandEmpty,\n  CommandGroup,\n  Checkbox,\n  ScrollArea,\n  Dialog,\n  DialogContent,\n  DialogClose,\n  DialogFooter,\n  DialogHeader,\n  DialogTitle,\n}: Pick<\n  ShadcnElements,\n  | \"Badge\"\n  | \"Button\"\n  | \"Command\"\n  | \"CommandItem\"\n  | \"CommandInput\"\n  | \"CommandLoading\"\n  | \"Label\"\n  | \"CommandList\"\n  | \"CommandEmpty\"\n  | \"CommandGroup\"\n  | \"Checkbox\"\n  | \"DropdownMenu\"\n  | \"DropdownMenuContent\"\n  | \"DropdownMenuItem\"\n  | \"DropdownMenuLabel\"\n  | \"DropdownMenuSeparator\"\n  | \"DropdownMenuTrigger\"\n  | \"ScrollArea\"\n  | \"Dialog\"\n  | \"DialogContent\"\n  | \"DialogTrigger\"\n  | \"DialogHeader\"\n  | \"DialogTitle\"\n  | \"DialogDescription\"\n  | \"DialogFooter\"\n  | \"DialogClose\"\n>) => {\n  const renderOptionLabel = makeShadcnRenderOptionLabel({ Label, Badge, Button });\n\n  const ShadcnComboInput = makeShadcnAutoComboInput({\n    Command,\n    CommandInput,\n    Label,\n    CommandItem,\n    CommandList,\n    CommandEmpty,\n    CommandLoading,\n    CommandGroup,\n    Checkbox,\n    ScrollArea,\n  });\n\n  function ShadcnHasOneForm(props: {\n    field: string;\n    children: React.ReactNode;\n    renderSelectedRecord?: (record: Record<string, any>) => React.ReactNode;\n    primaryLabel?: OptionLabel;\n    secondaryLabel?: OptionLabel;\n    tertiaryLabel?: OptionLabel;\n  }) {\n    const { field } = props;\n    const {\n      path,\n      metadata,\n      setValue,\n      getValues,\n      record,\n      actionsOpen,\n      setActionsOpen,\n      modalOpen,\n      setModalOpen,\n      search,\n      searchFilterOptions,\n      pagination,\n      records,\n      isLoading,\n      pathPrefix,\n      metaDataPathPrefix,\n      hasRecord,\n      recordOption,\n      childName,\n    } = useHasOneForm(props);\n\n    const handleScrolledToBottom = useCallback(\n      debounce(() => {\n        if (pagination.hasNextPage && searchFilterOptions.length >= optionRecordsToLoadCount) {\n          pagination.loadNextPage();\n        }\n      }, 300),\n      [pagination, searchFilterOptions.length]\n    );\n\n    return (\n      <RelationshipContext.Provider\n        value={{ transformPath: (path) => pathPrefix + \".\" + path, transformMetadataPath: (path) => metaDataPathPrefix + \".\" + path }}\n      >\n        <div>\n          <div className=\"flex flex-row justify-between items-center\">\n            <h2 className=\"text-lg font-medium\">{childName}</h2>\n            {hasRecord && (\n              <DropdownMenu open={actionsOpen} onOpenChange={setActionsOpen}>\n                <DropdownMenuTrigger data-testid={`${path}-dropdown-menu-trigger`} asChild>\n                  <Button variant=\"ghost\">\n                    <EllipsisVerticalIcon className=\"w-4 h-4\" />\n                  </Button>\n                </DropdownMenuTrigger>\n                <DropdownMenuContent className=\"bg-white\">\n                  <DropdownMenuItem\n                    value=\"edit\"\n                    onSelect={() => {\n                      setModalOpen(true);\n                      setActionsOpen(false);\n                    }}\n                  >\n                    Edit {childName.toLocaleLowerCase()}\n                  </DropdownMenuItem>\n                  <DropdownMenuItem\n                    value=\"remove\"\n                    onSelect={() => {\n                      if (!record) return;\n                      const { __typename, id: recordId, ...rest } = record;\n                      const nulledValues = Object.fromEntries(Object.keys(rest).map((key) => [key, null]));\n                      setValue(path, { ...nulledValues, __typename, _unlink: recordId });\n                    }}\n                    variant=\"destructive\"\n                  >\n                    Remove {childName.toLocaleLowerCase()}\n                  </DropdownMenuItem>\n                </DropdownMenuContent>\n              </DropdownMenu>\n            )}\n          </div>\n          {hasRecord ? (\n            props.renderSelectedRecord ? (\n              props.renderSelectedRecord(record as Record<string, any>)\n            ) : (\n              <div className=\"flex flex-col gap-2\">\n                <div className=\"flex flex-row justify-between gap-2 mt-2\">\n                  {renderOptionLabel(recordOption!.label, \"primary\")}\n                  {recordOption!.tertiaryLabel && renderOptionLabel(recordOption!.tertiaryLabel, \"tertiary\")}\n                </div>\n                {recordOption!.secondaryLabel && renderOptionLabel(recordOption!.secondaryLabel, \"secondary\")}\n              </div>\n            )\n          ) : (\n            <ShadcnComboInput\n              selectedRecordTag={null}\n              path={path}\n              hideLabel\n              metadata={metadata}\n              field={field}\n              options={searchFilterOptions}\n              onSelect={(record) => {\n                setValue(path, { ...record, _link: record.id });\n              }}\n              isLoading={isLoading}\n              errorMessage={\"\"}\n              actions={[\n                <CommandGroup key={\"add-record\"}>\n                  <CommandItem\n                    onSelect={() => {\n                      setModalOpen(true);\n                    }}\n                  >\n                    <div className=\"flex flex-row items-center gap-2\">\n                      <PlusIcon className=\"w-4 h-4\" />\n                      Add {childName}\n                    </div>\n                  </CommandItem>\n                  <CommandSeparator />\n                </CommandGroup>,\n              ]}\n              records={records}\n              checkSelected={() => false}\n              allowMultiple={false}\n              willLoadMoreOptions={pagination.hasNextPage && searchFilterOptions.length >= optionRecordsToLoadCount}\n              onScrolledToBottom={handleScrolledToBottom}\n              onChange={search.set}\n              defaultValue={search.value}\n            />\n          )}\n        </div>\n        {\n          <Dialog open={modalOpen} onOpenChange={() => setModalOpen(!modalOpen)}>\n            <DialogContent className=\"bg-white\">\n              <DialogHeader>\n                <DialogTitle>Add {childName}</DialogTitle>\n              </DialogHeader>\n              <div>{props.children}</div>\n              <DialogFooter className=\"\">\n                <DialogClose asChild>\n                  <Button type=\"button\" variant=\"secondary\">\n                    Close\n                  </Button>\n                </DialogClose>\n                <Button\n                  type=\"button\"\n                  variant=\"default\"\n                  onClick={() => {\n                    const { _unlink, _link, ...rest } = getValues(path);\n                    setValue(path, rest);\n\n                    setModalOpen(false);\n                  }}\n                >\n                  Save\n                </Button>\n              </DialogFooter>\n            </DialogContent>\n          </Dialog>\n        }\n      </RelationshipContext.Provider>\n    );\n  }\n\n  return autoRelationshipForm(ShadcnHasOneForm);\n};\n"]}