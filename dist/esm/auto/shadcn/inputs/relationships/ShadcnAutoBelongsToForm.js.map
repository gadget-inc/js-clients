{"version":3,"file":"ShadcnAutoBelongsToForm.js","sourceRoot":"","sources":["../../../../../../src/auto/shadcn/inputs/relationships/ShadcnAutoBelongsToForm.tsx"],"names":[],"mappings":"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","sourcesContent":["import { EllipsisVerticalIcon } from \"lucide-react\";\nimport React from \"react\";\nimport { useBelongsToForm } from \"../../../../useBelongsToForm.js\";\nimport { autoRelationshipForm } from \"../../../AutoInput.js\";\nimport { RelationshipContext } from \"../../../hooks/useAutoRelationship.js\";\nimport type { AutoRelationshipFormProps } from \"../../../interfaces/AutoRelationshipInputProps.js\";\nimport type { ShadcnElements } from \"../../elements.js\";\nimport { makeShadcnRenderOptionLabel } from \"../../utils.js\";\nimport { makeSearchableSingleRelatedModelRecordSelector } from \"./SearchableSingleRelatedModelRecordSelector.js\";\n\nexport const makeShadcnAutoBelongsToForm = ({\n  Badge,\n  Button,\n  Command,\n  CommandItem,\n  CommandInput,\n  DropdownMenu,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuTrigger,\n  Label,\n  CommandList,\n  CommandEmpty,\n  CommandGroup,\n  Checkbox,\n  Dialog,\n  DialogContent,\n  DialogClose,\n  DialogFooter,\n  DialogHeader,\n  DialogTitle,\n}: Pick<\n  ShadcnElements,\n  | \"Badge\"\n  | \"Button\"\n  | \"Command\"\n  | \"CommandItem\"\n  | \"CommandInput\"\n  | \"Label\"\n  | \"CommandList\"\n  | \"CommandEmpty\"\n  | \"CommandGroup\"\n  | \"Checkbox\"\n  | \"DropdownMenu\"\n  | \"DropdownMenuContent\"\n  | \"DropdownMenuItem\"\n  | \"DropdownMenuTrigger\"\n  | \"Dialog\"\n  | \"DialogContent\"\n  | \"DialogHeader\"\n  | \"DialogTitle\"\n  | \"DialogFooter\"\n  | \"DialogClose\"\n>) => {\n  const renderOptionLabel = makeShadcnRenderOptionLabel({ Label, Badge, Button });\n\n  const SearchableSingleRelatedModelRecordSelector = makeSearchableSingleRelatedModelRecordSelector({\n    Command,\n    CommandItem,\n    CommandInput,\n    Label,\n    CommandList,\n    CommandEmpty,\n    CommandGroup,\n    Checkbox,\n  });\n\n  function ShadcnAutoBelongsToForm(props: AutoRelationshipFormProps) {\n    const { field, label } = props;\n    const form = useBelongsToForm(props);\n    const {\n      record,\n      actionsOpen,\n      setActionsOpen,\n      isEditing,\n      setIsEditing,\n      pathPrefix,\n      hasRecord,\n      recordOption,\n      relatedModelName,\n      path,\n      setValue,\n      getValues,\n      metaDataPathPrefix,\n    } = form;\n\n    return (\n      <div>\n        <div>\n          <div className=\"flex flex-row justify-between items-center mb-2\">\n            {label ?? <h2 className=\"text-lg font-medium h-9\">{relatedModelName}</h2>}\n            {hasRecord && (\n              <DropdownMenu open={actionsOpen} onOpenChange={setActionsOpen}>\n                <DropdownMenuTrigger\n                  data-testid={`${path}-dropdown-menu-trigger`}\n                  className=\"focus-visible:outline-none focus-visible:ring-0\"\n                >\n                  <Button variant=\"ghost\" className=\"w-4\" onClick={() => setActionsOpen(!actionsOpen)}>\n                    <EllipsisVerticalIcon className=\"w-4 h-2\" />\n                  </Button>\n                </DropdownMenuTrigger>\n                <DropdownMenuContent className=\"bg-background\">\n                  <DropdownMenuItem\n                    value=\"edit\"\n                    onSelect={() => {\n                      setIsEditing(true);\n                      setActionsOpen(false);\n                    }}\n                  >\n                    Edit {relatedModelName.toLocaleLowerCase()}\n                  </DropdownMenuItem>\n                  <DropdownMenuItem\n                    value=\"remove\"\n                    onSelect={() => {\n                      const { __typename, id: recordId, ...rest } = record;\n                      const nulledValues = Object.fromEntries(Object.keys(rest).map((key) => [key, null]));\n                      setValue(path, { ...nulledValues, __typename, _unlink: recordId });\n                    }}\n                    variant=\"destructive\"\n                  >\n                    Remove {relatedModelName.toLocaleLowerCase()}\n                  </DropdownMenuItem>\n                </DropdownMenuContent>\n              </DropdownMenu>\n            )}\n          </div>\n          {hasRecord ? (\n            <div className=\"flex flex-row justify-between border-t\">\n              <div className=\"flex flex-col gap-2 pt-3\">\n                {renderOptionLabel(recordOption!.primary, \"primary\")}\n                {recordOption!.secondary && renderOptionLabel(recordOption!.secondary, \"secondary\")}\n              </div>\n              <div className=\"mt-2\">{recordOption!.tertiary && renderOptionLabel(recordOption!.tertiary, \"tertiary\")}</div>\n            </div>\n          ) : (\n            <SearchableSingleRelatedModelRecordSelector form={form} field={field} />\n          )}\n        </div>\n\n        <Dialog open={isEditing} onOpenChange={() => setIsEditing(!isEditing)}>\n          <RelationshipContext.Provider\n            value={{ transformPath: (path) => pathPrefix + \".\" + path, transformMetadataPath: (path) => metaDataPathPrefix + \".\" + path }}\n          >\n            <DialogContent className=\"bg-background\">\n              <DialogHeader>\n                <DialogTitle>Add {relatedModelName}</DialogTitle>\n              </DialogHeader>\n              <div>{props.children}</div>\n              <DialogFooter className=\"\">\n                <DialogClose asChild>\n                  <Button type=\"button\" variant=\"secondary\">\n                    Close\n                  </Button>\n                </DialogClose>\n                <Button\n                  type=\"button\"\n                  variant=\"default\"\n                  onClick={() => {\n                    const { _unlink, _link, ...rest } = getValues(path);\n                    setValue(path, rest);\n                    setIsEditing(false);\n                  }}\n                >\n                  Save\n                </Button>\n              </DialogFooter>\n            </DialogContent>\n          </RelationshipContext.Provider>\n        </Dialog>\n      </div>\n    );\n  }\n\n  return autoRelationshipForm(ShadcnAutoBelongsToForm);\n};\n"]}