{"version":3,"file":"ShadcnAutoBelongsToInput.js","sourceRoot":"","sources":["../../../../../../src/auto/shadcn/inputs/relationships/ShadcnAutoBelongsToInput.tsx"],"names":[],"mappings":"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","sourcesContent":["import { XIcon } from \"lucide-react\";\nimport React from \"react\";\nimport { autoInput } from \"../../../AutoInput.js\";\nimport { useBelongsToInputController } from \"../../../hooks/useBelongsToController.js\";\nimport { getRecordAsOption, useOptionLabelForField } from \"../../../hooks/useRelatedModel.js\";\nimport type { AutoRelationshipInputProps } from \"../../../interfaces/AutoRelationshipInputProps.js\";\nimport type { ShadcnElements } from \"../../elements.js\";\nimport { makeShadcnAutoComboInput } from \"../ShadcnAutoComboInput.js\";\n\nexport const makeShadcnAutoBelongsToInput = ({\n  Badge,\n  Button,\n  Command,\n  CommandItem,\n  CommandInput,\n  Label,\n  CommandList,\n  CommandEmpty,\n  CommandGroup,\n  Checkbox,\n}: Pick<\n  ShadcnElements,\n  \"Badge\" | \"Button\" | \"Command\" | \"CommandItem\" | \"CommandList\" | \"CommandEmpty\" | \"CommandGroup\" | \"CommandInput\" | \"Label\" | \"Checkbox\"\n>) => {\n  const ShadcnComboInput = makeShadcnAutoComboInput({\n    Command,\n    CommandInput,\n    Label,\n    CommandItem,\n    CommandList,\n    CommandEmpty,\n    CommandGroup,\n    Checkbox,\n  });\n\n  function ShadcnAutoBelongsToInput(props: AutoRelationshipInputProps) {\n    //TODO: Implement Load More\n    const {\n      fieldMetadata: { path, metadata },\n      relatedModelOptions: { options, searchFilterOptions, pagination, search, relatedModel },\n      isLoading,\n      errorMessage,\n      selectedRecord,\n      danglingSelectedRecordId,\n      onSelectRecord,\n      onRemoveRecord,\n    } = useBelongsToInputController(props);\n\n    const optionLabel = useOptionLabelForField(props.field, props.optionLabel);\n    const selectedOption = selectedRecord ? getRecordAsOption(selectedRecord, optionLabel) : null;\n\n    const selectedRecordTag =\n      selectedOption && selectedOption.id ? (\n        <Badge key={`selectedRecordTag_${selectedOption.id}`} variant={\"outline\"}>\n          {selectedOption.label}\n          <Button aria-label={`Remove`} onClick={onRemoveRecord} variant=\"ghost\" size=\"icon\">\n            <XIcon />\n          </Button>\n        </Badge>\n      ) : danglingSelectedRecordId ? (\n        <Badge key={`selectedRecordTag_${danglingSelectedRecordId}`} variant={\"outline\"}>\n          <p id={`${danglingSelectedRecordId}`} style={{ color: \"red\" }}>\n            id: {danglingSelectedRecordId}\n          </p>\n          <Button aria-label={`Remove`} onClick={onRemoveRecord} variant=\"ghost\" size=\"icon\">\n            <XIcon />\n          </Button>\n        </Badge>\n      ) : null;\n\n    const onSelect = (record: Record<string, any>) => {\n      const recordId = record.id;\n      const idIsAlreadySelected = selectedRecord?.id === recordId;\n\n      idIsAlreadySelected\n        ? onRemoveRecord() // clear selection\n        : onSelectRecord(record); // make single selection\n    };\n\n    return (\n      <ShadcnComboInput\n        {...props}\n        options={options}\n        path={path}\n        metadata={metadata}\n        selectedRecordTag={selectedRecordTag}\n        onSelect={onSelect}\n        isLoading={isLoading}\n        errorMessage={errorMessage}\n        records={relatedModel.records}\n      />\n    );\n  }\n\n  return autoInput(ShadcnAutoBelongsToInput);\n};\n"]}