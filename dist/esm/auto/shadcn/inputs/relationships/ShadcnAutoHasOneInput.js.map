{"version":3,"file":"ShadcnAutoHasOneInput.js","sourceRoot":"","sources":["../../../../../../src/auto/shadcn/inputs/relationships/ShadcnAutoHasOneInput.tsx"],"names":[],"mappings":"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","sourcesContent":["import { XIcon } from \"lucide-react\";\nimport React, { useCallback } from \"react\";\nimport { debounce } from \"../../../../utils.js\";\nimport { autoInput } from \"../../../AutoInput.js\";\nimport { useHasOneInputController } from \"../../../hooks/useHasOneController.js\";\nimport { getRecordAsOption, optionRecordsToLoadCount, useOptionLabelForField } from \"../../../hooks/useRelatedModel.js\";\nimport type { AutoRelationshipInputProps } from \"../../../interfaces/AutoRelationshipInputProps.js\";\nimport type { ShadcnElements } from \"../../elements.js\";\nimport { makeShadcnAutoComboInput } from \"../ShadcnAutoComboInput.js\";\n\nexport const makeShadcnAutoHasOneInput = ({\n  Badge,\n  Button,\n  Command,\n  CommandItem,\n  CommandInput,\n  Label,\n  CommandList,\n  CommandEmpty,\n  CommandGroup,\n  Checkbox,\n}: Pick<\n  ShadcnElements,\n  \"Badge\" | \"Button\" | \"Command\" | \"CommandItem\" | \"CommandList\" | \"CommandEmpty\" | \"CommandGroup\" | \"CommandInput\" | \"Label\" | \"Checkbox\"\n>) => {\n  const ShadcnComboInput = makeShadcnAutoComboInput({\n    Command,\n    CommandInput,\n    Label,\n    CommandItem,\n    CommandList,\n    CommandEmpty,\n    CommandGroup,\n    Checkbox,\n  });\n\n  function ShadcnAutoHasOneInput(props: AutoRelationshipInputProps) {\n    const { field } = props;\n    const {\n      fieldMetadata: { path, metadata },\n      relatedModelOptions: { options, searchFilterOptions, search, pagination, relatedModel },\n      selectedRecord,\n      errorMessage,\n      isLoading,\n      onSelectRecord,\n      onRemoveRecord,\n    } = useHasOneInputController(props);\n\n    const optionLabel = useOptionLabelForField(field, props.optionLabel);\n\n    const selectedOption = selectedRecord ? getRecordAsOption(selectedRecord, optionLabel) : null;\n\n    const selectedRecordTag = selectedOption ? (\n      <Badge variant={\"outline\"} key={`selectedRecordTag_${selectedOption.id}`}>\n        <p id={`${selectedOption.id}_${selectedOption.label}`}>{selectedOption.label ?? `id: ${selectedOption.id}`}</p>\n        <Button aria-label={`Remove`} onClick={() => selectedRecord && onRemoveRecord(selectedRecord)} variant=\"ghost\" size=\"icon\">\n          <XIcon />\n        </Button>\n      </Badge>\n    ) : null;\n\n    const handleScrolledToBottom = useCallback(\n      debounce(() => {\n        if (pagination.hasNextPage && options.length >= optionRecordsToLoadCount) {\n          pagination.loadNextPage();\n        }\n      }, 300),\n      [pagination, options.length]\n    );\n\n    return (\n      <ShadcnComboInput\n        {...props}\n        options={searchFilterOptions}\n        path={path}\n        metadata={metadata}\n        onChange={search.set}\n        defaultValue={search.value}\n        onScrolledToBottom={handleScrolledToBottom}\n        willLoadMoreOptions={pagination.hasNextPage && options.length >= optionRecordsToLoadCount}\n        selectedRecordTag={selectedRecordTag}\n        onSelect={onSelectRecord}\n        checkSelected={(id) => selectedRecord?.id === id}\n        isLoading={isLoading}\n        errorMessage={errorMessage}\n        records={relatedModel.records}\n      />\n    );\n  }\n\n  return autoInput(ShadcnAutoHasOneInput);\n};\n"]}