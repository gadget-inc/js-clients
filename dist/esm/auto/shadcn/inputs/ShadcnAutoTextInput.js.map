{"version":3,"file":"ShadcnAutoTextInput.js","sourceRoot":"","sources":["../../../../../src/auto/shadcn/inputs/ShadcnAutoTextInput.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAmC,MAAM,OAAO,CAAC;AAExD,OAAO,EAAE,SAAS,EAAE,MAAM,oBAAoB,CAAC;AAC/C,OAAO,EAAE,wBAAwB,EAAE,MAAM,yCAAyC,CAAC;AAGnF,MAAM,CAAC,MAAM,uBAAuB,GAAG,CAAC,EAAE,KAAK,EAAE,KAAK,EAA2C,EAAE,EAAE;IACnG,SAAS,mBAAmB,CAC1B,KAKkD;QAElD,MAAM,EAAE,KAAK,EAAE,OAAO,EAAE,KAAK,EAAE,WAAW,EAAE,MAAM,EAAE,GAAG,SAAS,EAAE,GAAG,KAAK,CAAC;QAC3E,MAAM,qBAAqB,GAAG,wBAAwB,CAAC,EAAE,KAAK,EAAE,OAAO,EAAE,CAAC,CAAC;QAC3E,MAAM,EAAE,GAAG,GAAG,KAAK,QAAQ,CAAC;QAC5B,MAAM,EACJ,IAAI,EACJ,WAAW,EACX,KAAK,EACL,YAAY,EACZ,IAAI,EACJ,KAAK,EAAE,eAAe,EACtB,QAAQ,EACR,YAAY,EACZ,QAAQ,EACR,MAAM,GACP,GAAG,qBAAqB,CAAC;QAE1B,MAAM,UAAU,GAAG,WAAW,IAAI,eAAe,IAAI,QAAQ,CAAC,IAAI,CAAC;QAEnE,OAAO,CACL;YACE,oBAAC,KAAK,IAAC,OAAO,EAAE,EAAE,IAAG,UAAU,CAAS;YACxC,6BAAK,SAAS,EAAC,4BAA4B;gBACzC,oBAAC,KAAK,IACJ,IAAI,EAAE,IAAI,EACV,IAAI,EAAE,IAAI,IAAI,MAAM,EACpB,EAAE,EAAE,EAAE,EACN,KAAK,EAAE,KAAK,IAAI,EAAE,EAClB,YAAY,EAAE,YAAY,EAC1B,QAAQ,EAAE,QAAQ,EAClB,MAAM,EAAE,MAAM,EACd,QAAQ,EAAE,QAAQ,CAAC,wBAAwB,IAAI,KAAK,KAChD,SAAS,EACb,WAAW,EAAE,WAAW,IAAI,UAAU,GACtC;gBACD,MAAM,IAAI,6BAAK,SAAS,EAAC,EAAE,IAAE,MAAM,CAAO,CACvC;YACL,YAAY,IAAI,2BAAG,SAAS,EAAC,sBAAsB,IAAE,YAAY,CAAK,CACnE,CACP,CAAC;IACJ,CAAC;IAED,OAAO,SAAS,CAAC,mBAAmB,CAAC,CAAC;AACxC,CAAC,CAAC","sourcesContent":["import React, { type InputHTMLAttributes } from \"react\";\nimport type { Control } from \"../../../useActionForm.js\";\nimport { autoInput } from \"../../AutoInput.js\";\nimport { useStringInputController } from \"../../hooks/useStringInputController.js\";\nimport type { ShadcnElements } from \"../elements.js\";\n\nexport const makeShadcnAutoTextInput = ({ Input, Label }: Pick<ShadcnElements, \"Input\" | \"Label\">) => {\n  function ShadcnAutoTextInput(\n    props: {\n      field: string;\n      control?: Control<any>;\n      label?: string;\n      suffix?: React.ReactNode;\n    } & Partial<InputHTMLAttributes<HTMLInputElement>>\n  ) {\n    const { field, control, label: customLabel, suffix, ...restProps } = props;\n    const stringInputController = useStringInputController({ field, control });\n    const id = `${field}-input`;\n    const {\n      name,\n      placeholder,\n      value,\n      autoComplete,\n      type,\n      label: controllerLabel,\n      metadata,\n      errorMessage,\n      onChange,\n      onBlur,\n    } = stringInputController;\n\n    const inputLabel = customLabel || controllerLabel || metadata.name;\n\n    return (\n      <div>\n        <Label htmlFor={id}>{inputLabel}</Label>\n        <div className=\"relative flex items-center\">\n          <Input\n            name={name}\n            type={type || \"text\"}\n            id={id}\n            value={value ?? \"\"}\n            autoComplete={autoComplete}\n            onChange={onChange}\n            onBlur={onBlur}\n            required={metadata.requiredArgumentForInput || false}\n            {...restProps}\n            placeholder={placeholder || inputLabel}\n          />\n          {suffix && <div className=\"\">{suffix}</div>}\n        </div>\n        {errorMessage && <p className=\"text-sm text-red-500\">{errorMessage}</p>}\n      </div>\n    );\n  }\n\n  return autoInput(ShadcnAutoTextInput);\n};\n"]}