{"version":3,"file":"ShadcnAutoTextAreaInput.js","sourceRoot":"","sources":["../../../../../src/auto/shadcn/inputs/ShadcnAutoTextAreaInput.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,MAAM,OAAO,CAAC;AAC1B,OAAO,EAAE,SAAS,EAAE,MAAM,oBAAoB,CAAC;AAC/C,OAAO,EAAE,wBAAwB,EAAE,MAAM,yCAAyC,CAAC;AAInF,MAAM,CAAC,MAAM,2BAA2B,GAAG,CAAC,EAAE,QAAQ,EAAE,KAAK,EAA8C,EAAE,EAAE;IAC7G,SAAS,uBAAuB,CAC9B,KAG2C;QAE3C,MAAM,EAAE,KAAK,EAAE,KAAK,EAAE,WAAW,EAAE,MAAM,EAAE,GAAG,SAAS,EAAE,GAAG,KAAK,CAAC;QAClE,MAAM,EACJ,IAAI,EACJ,WAAW,EACX,KAAK,EACL,YAAY,EACZ,KAAK,EAAE,eAAe,EACtB,QAAQ,EACR,YAAY,EACZ,QAAQ,EACR,MAAM,GACP,GAAG,wBAAwB,CAAC,KAAK,CAAC,CAAC;QAEpC,MAAM,EAAE,GAAG,IAAI,IAAI,GAAG,KAAK,QAAQ,CAAC;QAEpC,MAAM,UAAU,GAAG,WAAW,IAAI,eAAe,IAAI,QAAQ,CAAC,IAAI,CAAC;QAEnE,OAAO,CACL;YACE,oBAAC,KAAK,IAAC,OAAO,EAAE,EAAE,IAAG,UAAU,CAAS;YACxC,6BAAK,SAAS,EAAE,MAAM,CAAC,CAAC,CAAC,2FAA2F,CAAC,CAAC,CAAC,UAAU;gBAC/H,6BAAK,SAAS,EAAC,4BAA4B;oBACzC,oBAAC,QAAQ,IACP,IAAI,EAAE,IAAI,EACV,EAAE,EAAE,EAAE,EACN,KAAK,EAAE,KAAK,IAAI,EAAE,EAClB,YAAY,EAAE,YAAY,EAC1B,QAAQ,EAAE,QAAQ,EAClB,MAAM,EAAE,MAAM,EACd,QAAQ,EAAE,QAAQ,CAAC,wBAAwB,IAAI,KAAK,EACpD,SAAS,EAAE,MAAM,CAAC,CAAC,CAAC,qEAAqE,CAAC,CAAC,CAAC,EAAE,EAC9F,WAAW,EAAE,WAAW,KACpB,SAAS,GACb;oBACD,MAAM,IAAI,6BAAK,SAAS,EAAC,8BAA8B,IAAE,MAAM,CAAO,CACnE;gBACL,YAAY,IAAI,2BAAG,SAAS,EAAC,sBAAsB,IAAE,YAAY,CAAK,CACnE,CACF,CACP,CAAC;IACJ,CAAC;IAED,OAAO,SAAS,CAAC,uBAAuB,CAAC,CAAC;AAC5C,CAAC,CAAC","sourcesContent":["import React from \"react\";\nimport { autoInput } from \"../../AutoInput.js\";\nimport { useStringInputController } from \"../../hooks/useStringInputController.js\";\nimport { type AutoTextInputProps } from \"../../shared/AutoInputTypes.js\";\nimport type { ShadcnElements, TextareaProps } from \"../elements.js\";\n\nexport const makeShadcnAutoTextAreaInput = ({ Textarea, Label }: Pick<ShadcnElements, \"Textarea\" | \"Label\">) => {\n  function ShadcnAutoTextAreaInput(\n    props: {\n      suffix?: React.ReactNode;\n    } & AutoTextInputProps &\n      Omit<TextareaProps, \"value\" | \"onChange\">\n  ) {\n    const { field, label: customLabel, suffix, ...restProps } = props;\n    const {\n      name,\n      placeholder,\n      value,\n      autoComplete,\n      label: controllerLabel,\n      metadata,\n      errorMessage,\n      onChange,\n      onBlur,\n    } = useStringInputController(props);\n\n    const id = name || `${field}-input`;\n\n    const inputLabel = customLabel || controllerLabel || metadata.name;\n\n    return (\n      <div>\n        <Label htmlFor={id}>{inputLabel}</Label>\n        <div className={suffix ? \"relative group border border-input rounded-md focus-within:ring-1 focus-within:ring-ring \" : \"relative\"}>\n          <div className=\"relative flex items-center\">\n            <Textarea\n              name={name}\n              id={id}\n              value={value ?? \"\"}\n              autoComplete={autoComplete}\n              onChange={onChange}\n              onBlur={onBlur}\n              required={metadata.requiredArgumentForInput || false}\n              className={suffix ? \"border-0 shadow-none rounded-none focus:ring-0 focus-visible:ring-0\" : \"\"}\n              placeholder={placeholder}\n              {...restProps}\n            />\n            {suffix && <div className=\" h-10 flex items-center px-3\">{suffix}</div>}\n          </div>\n          {errorMessage && <p className=\"text-sm text-red-500\">{errorMessage}</p>}\n        </div>\n      </div>\n    );\n  }\n\n  return autoInput(ShadcnAutoTextAreaInput);\n};\n"]}