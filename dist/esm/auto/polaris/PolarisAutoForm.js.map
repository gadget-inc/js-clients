{"version":3,"file":"PolarisAutoForm.js","sourceRoot":"","sources":["../../../../src/auto/polaris/PolarisAutoForm.tsx"],"names":[],"mappings":"AAEA,OAAO,EAAE,UAAU,EAAE,IAAI,EAAE,UAAU,EAAE,gBAAgB,EAAE,mBAAmB,EAAE,MAAM,kBAAkB,CAAC;AACvG,OAAO,KAAK,MAAM,OAAO,CAAC;AAC1B,OAAO,EAAE,YAAY,EAAE,MAAM,iBAAiB,CAAC;AAG/C,OAAO,EAAE,WAAW,EAAE,MAAM,gBAAgB,CAAC;AAC7C,OAAO,EAAE,uBAAuB,EAAE,MAAM,uBAAuB,CAAC;AAChE,OAAO,EAAE,gBAAgB,EAAE,MAAM,8BAA8B,CAAC;AAChE,OAAO,EAAE,iBAAiB,EAAE,MAAM,+BAA+B,CAAC;AAClE,OAAO,EAAE,wBAAwB,EAAE,yBAAyB,EAAE,MAAM,uCAAuC,CAAC;AAE5G,MAAM,CAAC,MAAM,mBAAmB,GAAG,GAAG,EAAE,CAAC,CACvC;IACE,oBAAC,mBAAmB,IAAC,IAAI,EAAC,QAAQ,GAAG;IACrC,oBAAC,gBAAgB,OAAG,CACnB,CACJ,CAAC;AAEF;;GAEG;AACH,MAAM,CAAC,MAAM,eAAe,GAAG;AAK7B,gFAAgF;AAChF,KAA4F,EAC5F,EAAE;IACF,MAAM,EACJ,MAAM,EAAE,OAAO,EACf,MAAM,EACN,MAAM,EACN,GAAG,IAAI,EACR,GAAG,KAAgH,CAAC;IACrH,MAAM,EAAE,QAAQ,EAAE,gBAAgB,EAAE,aAAa,EAAE,MAAM,EAAE,MAAM,EAAE,SAAS,EAAE,kBAAkB,EAAE,SAAS,EAAE,mBAAmB,EAAE,GAChI,WAAW,CAAC,KAAK,CAAC,CAAC;IAErB,MAAM,uBAAuB,GAA4B;QACvD,MAAM;QACN,MAAM;QACN,QAAQ;QACR,YAAY,EAAE;YACZ,YAAY,EAAE,kBAAkB;YAChC,KAAK,EAAE,SAAS,IAAI,aAAa;SAClC;QACD,KAAK,EAAE;YACL,aAAa,EAAE,MAAM,CAAC,kBAAkB;YACxC,SAAS,EAAE,MAAM,CAAC,SAAS;SAC5B;KACF,CAAC;IAEF,IAAI,KAAK,CAAC,cAAc,IAAI,kBAAkB,EAAE,CAAC;QAC/C,OAAO,KAAK,CAAC,cAAc,CAAC;IAC9B,CAAC;IAED,IAAI,gBAAgB,EAAE,CAAC;QACrB,OAAO,CACL,oBAAC,IAAI,OAAK,IAAI,EAAE,QAAQ,EAAE,MAAM;YAC9B,oBAAC,UAAU;gBACT,oBAAC,mBAAmB,OAAG;oBACZ,CACR,CACR,CAAC;IACJ,CAAC;IAED,MAAM,WAAW,GAAG,KAAK,CAAC,QAAQ,IAAI,CACpC;QACG,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC,oBAAC,yBAAyB,OAAG,CAAC,CAAC,CAAC,oBAAC,wBAAwB,OAAG;QAC/E,CAAC,aAAa,IAAI,CACjB;YACG,MAAM,CAAC,GAAG,CAAC,CAAC,EAAE,QAAQ,EAAE,EAAE,EAAE,CAAC,CAC5B,oBAAC,gBAAgB,IAAC,KAAK,EAAE,QAAQ,CAAC,aAAa,EAAE,GAAG,EAAE,QAAQ,CAAC,aAAa,GAAI,CACjF,CAAC;YACF;gBACE,oBAAC,iBAAiB,QAAE,KAAK,CAAC,WAAW,IAAI,QAAQ,CAAqB,CAClE,CACL,CACJ,CACA,CACJ,CAAC;IAEF,OAAO,CACL,oBAAC,uBAAuB,CAAC,QAAQ,IAAC,KAAK,EAAE,uBAAuB;QAC9D,oBAAC,YAAY,OAAK,mBAAmB;YACnC,oBAAC,IAAI,OAAK,IAAI,EAAE,QAAQ,EAAE,MAAM;gBAC9B,oBAAC,UAAU,IAAC,GAAG,EAAC,KAAK,IAAE,WAAW,CAAc,CAC3C,CACM,CACkB,CACpC,CAAC;AACJ,CAAC,CAAC","sourcesContent":["import type { ActionFunction } from \"@gadgetinc/api-client-core\";\nimport type { FormProps } from \"@shopify/polaris\";\nimport { BlockStack, Form, FormLayout, SkeletonBodyText, SkeletonDisplayText } from \"@shopify/polaris\";\nimport React from \"react\";\nimport { FormProvider } from \"react-hook-form\";\nimport type { OptionsType } from \"../../utils.js\";\nimport type { AutoFormProps } from \"../AutoForm.js\";\nimport { useAutoForm } from \"../AutoForm.js\";\nimport { AutoFormMetadataContext } from \"../AutoFormContext.js\";\nimport { PolarisAutoInput } from \"./inputs/PolarisAutoInput.js\";\nimport { PolarisAutoSubmit } from \"./submit/PolarisAutoSubmit.js\";\nimport { PolarisSubmitErrorBanner, PolarisSubmitResultBanner } from \"./submit/PolarisSubmitResultBanner.js\";\n\nexport const PolarisFormSkeleton = () => (\n  <>\n    <SkeletonDisplayText size=\"medium\" />\n    <SkeletonBodyText />\n  </>\n);\n\n/**\n * Renders a form for an action on a model automatically using Polaris\n */\nexport const PolarisAutoForm = <\n  GivenOptions extends OptionsType,\n  SchemaT,\n  ActionFunc extends ActionFunction<GivenOptions, any, any, SchemaT, any>\n>(\n  //polaris form props also take an 'action' property, which we need to omit here.\n  props: AutoFormProps<GivenOptions, SchemaT, ActionFunc> & Omit<Partial<FormProps>, \"action\">\n) => {\n  const {\n    record: _record,\n    action,\n    findBy,\n    ...rest\n  } = props as AutoFormProps<GivenOptions, SchemaT, ActionFunc> & Omit<Partial<FormProps>, \"action\"> & { findBy: any };\n  const { metadata, fetchingMetadata, metadataError, fields, submit, formError, isSubmitSuccessful, isLoading, originalFormMethods } =\n    useAutoForm(props);\n\n  const autoFormMetadataContext: AutoFormMetadataContext = {\n    findBy,\n    submit,\n    metadata,\n    submitResult: {\n      isSuccessful: isSubmitSuccessful,\n      error: formError ?? metadataError,\n    },\n    model: {\n      apiIdentifier: action.modelApiIdentifier,\n      namespace: action.namespace,\n    },\n  };\n\n  if (props.successContent && isSubmitSuccessful) {\n    return props.successContent;\n  }\n\n  if (fetchingMetadata) {\n    return (\n      <Form {...rest} onSubmit={submit}>\n        <FormLayout>\n          <PolarisFormSkeleton />;\n        </FormLayout>\n      </Form>\n    );\n  }\n\n  const formContent = props.children ?? (\n    <>\n      {!props.onSuccess ? <PolarisSubmitResultBanner /> : <PolarisSubmitErrorBanner />}\n      {!metadataError && (\n        <>\n          {fields.map(({ metadata }) => (\n            <PolarisAutoInput field={metadata.apiIdentifier} key={metadata.apiIdentifier} />\n          ))}\n          <div>\n            <PolarisAutoSubmit>{props.submitLabel ?? \"Submit\"}</PolarisAutoSubmit>\n          </div>\n        </>\n      )}\n    </>\n  );\n\n  return (\n    <AutoFormMetadataContext.Provider value={autoFormMetadataContext}>\n      <FormProvider {...originalFormMethods}>\n        <Form {...rest} onSubmit={submit}>\n          <BlockStack gap=\"400\">{formContent}</BlockStack>\n        </Form>\n      </FormProvider>\n    </AutoFormMetadataContext.Provider>\n  );\n};\n"]}