{"version":3,"file":"PolarisAutoForm.js","sourceRoot":"","sources":["../../../../src/auto/polaris/PolarisAutoForm.tsx"],"names":[],"mappings":"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","sourcesContent":["import type { OptionsType } from \"@gadgetinc/client-hooks\";\nimport type { ActionFunction, GlobalActionFunction } from \"@gadgetinc/core\";\nimport type { FormProps } from \"@shopify/polaris\";\nimport { BlockStack, Form, FormLayout, SkeletonBodyText, SkeletonDisplayText, Text } from \"@shopify/polaris\";\nimport React from \"react\";\nimport { FormProvider } from \"../../useActionForm.js\";\nimport { humanizeCamelCase } from \"../../utils.js\";\nimport type { AutoFormProps } from \"../AutoForm.js\";\nimport { useAutoForm } from \"../AutoForm.js\";\nimport { validateAutoFormProps } from \"../AutoFormActionValidators.js\";\nimport { AutoFormFieldsFromChildComponentsProvider, AutoFormMetadataContext } from \"../AutoFormContext.js\";\nimport { PolarisAutoInput } from \"./inputs/PolarisAutoInput.js\";\nimport { PolarisAutoSubmit } from \"./submit/PolarisAutoSubmit.js\";\nimport { PolarisSubmitErrorBanner, PolarisSubmitSuccessfulBanner } from \"./submit/PolarisSubmitResultBanner.js\";\n\n/**\n * Skeleton loader\n * @example\n * ```tsx\n * <AutoForm action={api.modelA.create}>\n *   {isLoading ? <AutoFormSkeleton /> : <AutoFormContent />}\n * </AutoForm>\n * ```\n */\nexport const PolarisAutoFormSkeleton = () => (\n  <>\n    <FormLayout>\n      <SkeletonDisplayText size=\"medium\" />\n      <SkeletonBodyText />\n    </FormLayout>\n  </>\n);\n\nexport type PolarisAutoFormProps<\n  GivenOptions extends OptionsType,\n  SchemaT,\n  ActionFunc extends ActionFunction<GivenOptions, any, any, SchemaT, any> | GlobalActionFunction<any>\n> = AutoFormProps<GivenOptions, SchemaT, ActionFunc> & Omit<Partial<FormProps>, \"action\">;\n\n/**\n * Renders a form for an action on a model using Polaris.\n */\nexport const PolarisAutoForm = <\n  GivenOptions extends OptionsType,\n  SchemaT,\n  ActionFunc extends ActionFunction<GivenOptions, any, any, SchemaT, any> | GlobalActionFunction<any>\n>(\n  props: PolarisAutoFormProps<GivenOptions, SchemaT, ActionFunc>\n) => {\n  const { action, findBy } = props;\n\n  validateAutoFormProps(props);\n\n  // Forces re-render when the action or findBy changes.\n  const componentKey = `${\"modelApiIdentifier\" in action ? `${action.modelApiIdentifier}.` : \"\"}${action.operationName}.${JSON.stringify(\n    findBy\n  )}`;\n\n  return (\n    <AutoFormFieldsFromChildComponentsProvider hasCustomFormChildren={React.Children.count(props.children) > 0}>\n      <PolarisAutoFormComponent\n        key={componentKey}\n        {...(props as PolarisAutoFormProps<GivenOptions, SchemaT, ActionFunc> & { findBy: any })}\n      />\n    </AutoFormFieldsFromChildComponentsProvider>\n  );\n};\n\nconst PolarisAutoFormComponent = <\n  GivenOptions extends OptionsType,\n  SchemaT,\n  ActionFunc extends ActionFunction<GivenOptions, any, any, SchemaT, any> | GlobalActionFunction<any>\n>(\n  //Polaris form props also take an 'action' property, which we must omit here.\n  props: PolarisAutoFormProps<GivenOptions, SchemaT, ActionFunc>\n) => {\n  const { record: _record, action, findBy, ...rest } = props as PolarisAutoFormProps<GivenOptions, SchemaT, ActionFunc> & { findBy: any };\n\n  const {\n    metadata,\n    fetchingMetadata,\n    isLoading,\n    metadataError,\n    fields,\n    submit,\n    formError,\n    isSubmitting,\n    isSubmitSuccessful,\n    originalFormMethods,\n  } = useAutoForm(props);\n\n  const formTitle = \"title\" in props && props.title !== undefined ? props.title : humanizeCamelCase(action.operationName);\n\n  if (props.successContent && isSubmitSuccessful) {\n    return props.successContent;\n  }\n\n  const autoFormMetadataContext: AutoFormMetadataContext = {\n    findBy,\n    submit,\n    metadata,\n    submitResult: {\n      isSuccessful: isSubmitSuccessful,\n      error: formError ?? metadataError,\n      isSubmitting,\n    },\n    model: {\n      apiIdentifier: \"modelApiIdentifier\" in action ? action.modelApiIdentifier : undefined,\n      namespace: action.namespace,\n    },\n    fields,\n  };\n\n  if (fetchingMetadata) {\n    return (\n      <Form {...rest} onSubmit={submit}>\n        {props.loadingSkeleton ?? <PolarisAutoFormSkeleton />}\n      </Form>\n    );\n  }\n\n  const formContent = props.children ?? (\n    <>\n      {formTitle && (\n        <Text variant=\"headingLg\" as=\"h5\">\n          {formTitle}\n        </Text>\n      )}\n      {!props.onSuccess && <PolarisSubmitSuccessfulBanner />}\n      {!props.onFailure && <PolarisSubmitErrorBanner />}\n      {!metadataError && (\n        <>\n          {fields.map(({ metadata }) => (\n            <PolarisAutoInput field={metadata.apiIdentifier} key={metadata.apiIdentifier} />\n          ))}\n          <div>\n            <PolarisAutoSubmit>{\"submitLabel\" in props && props.submitLabel ? props.submitLabel : \"Submit\"} </PolarisAutoSubmit>\n          </div>\n        </>\n      )}\n    </>\n  );\n\n  return (\n    <AutoFormMetadataContext.Provider value={autoFormMetadataContext}>\n      <FormProvider {...originalFormMethods}>\n        <div style={{ opacity: isLoading || isSubmitting ? 0.3 : 1 }}>\n          <Form {...rest} onSubmit={submit}>\n            <BlockStack gap=\"400\">{formContent}</BlockStack>\n          </Form>\n        </div>\n      </FormProvider>\n    </AutoFormMetadataContext.Provider>\n  );\n};\n"]}