{"version":3,"file":"PolarisAutoNumberInput.js","sourceRoot":"","sources":["../../../../../src/auto/polaris/inputs/PolarisAutoNumberInput.tsx"],"names":[],"mappings":"AACA,OAAO,KAAK,MAAM,OAAO,CAAC;AAE1B,OAAO,EAAE,SAAS,EAAE,MAAM,oBAAoB,CAAC;AAC/C,OAAO,EAAE,wBAAwB,EAAE,MAAM,yCAAyC,CAAC;AACnF,OAAO,EAAE,oBAAoB,EAAE,MAAM,2BAA2B,CAAC;AAEjE,MAAM,CAAC,MAAM,sBAAsB,GAAG,SAAS,CAC7C,CACE,KAG2B,EAC3B,EAAE;IACF,MAAM,EAAE,KAAK,EAAE,OAAO,EAAE,GAAG,KAAK,CAAC;IACjC,MAAM,EAAE,IAAI,EAAE,QAAQ,EAAE,KAAK,EAAE,GAAG,wBAAwB,CAAC,EAAE,KAAK,EAAE,OAAO,EAAE,CAAC,CAAC;IAC/E,MAAM,SAAS,GAAG,IAA8B,CAAC;IAEjD,MAAM,IAAI,GACR,SAAS,KAAK,QAAQ;QACtB,QAAQ,CAAC,aAAa,CAAC,UAAU,KAAK,oBAAoB;QAC1D,QAAQ,CAAC,aAAa,CAAC,QAAQ;QAC/B,QAAQ,CAAC,aAAa,CAAC,QAAQ,GAAG,CAAC;QACjC,CAAC,CAAC,2BAA2B,CAAC,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC;QAC9D,CAAC,CAAC,KAAK;YACP,CAAC,CAAC,2BAA2B,CAAC,qBAAqB,CAAC,GAAG,KAAK,EAAE,CAAC,CAAC;YAChE,CAAC,CAAC,CAAC,CAAC;IAER,OAAO,oBAAC,oBAAoB,IAAC,IAAI,EAAE,IAAI,KAAM,KAAK,GAAI,CAAC;AACzD,CAAC,CACF,CAAC;AAEF,MAAM,2BAA2B,GAAG,CAAC,gBAAwB,EAAE,EAAE,CAC/D,gBAAgB,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,GAAG,CAAC,MAAM,CAAC,gBAAgB,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;AAEhF,MAAM,qBAAqB,GAAG,CAAC,KAAa,EAAE,EAAE;IAC9C,IAAI,KAAK,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE,CAAC;QACxB,sEAAsE;QACtE,OAAO,CAAC,CAAC;IACX,CAAC;IACD,MAAM,CAAC,EAAE,QAAQ,CAAC,GAAG,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;IACtC,OAAO,QAAQ,EAAE,MAAM,IAAI,CAAC,CAAC;AAC/B,CAAC,CAAC","sourcesContent":["import type { TextFieldProps } from \"@shopify/polaris\";\nimport React from \"react\";\nimport type { Control } from \"../../../useActionForm.js\";\nimport { autoInput } from \"../../AutoInput.js\";\nimport { useStringInputController } from \"../../hooks/useStringInputController.js\";\nimport { PolarisAutoTextInput } from \"./PolarisAutoTextInput.js\";\n\nexport const PolarisAutoNumberInput = autoInput(\n  (\n    props: {\n      field: string; // The field API identifier\n      control?: Control<any>;\n    } & Partial<TextFieldProps>\n  ) => {\n    const { field, control } = props;\n    const { type, metadata, value } = useStringInputController({ field, control });\n    const fieldType = type as TextFieldProps[\"type\"];\n\n    const step =\n      fieldType === \"number\" &&\n      metadata.configuration.__typename === \"GadgetNumberConfig\" &&\n      metadata.configuration.decimals &&\n      metadata.configuration.decimals > 0\n        ? getStepFromNumberOfDecimals(metadata.configuration.decimals)\n        : value\n        ? getStepFromNumberOfDecimals(countNumberOfDecimals(`${value}`))\n        : 1;\n\n    return <PolarisAutoTextInput step={step} {...props} />;\n  }\n);\n\nconst getStepFromNumberOfDecimals = (numberOfDecimals: number) =>\n  numberOfDecimals === 0 ? 1 : Number(`0.${\"0\".repeat(numberOfDecimals - 1)}1`);\n\nconst countNumberOfDecimals = (value: string) => {\n  if (value.includes(\"e\")) {\n    // +e scientific notation for large numbers does not get decimal steps\n    return 0;\n  }\n  const [, decimals] = value.split(\".\");\n  return decimals?.length ?? 0;\n};\n"]}