{"version":3,"file":"PolarisAutoRolesInput.js","sourceRoot":"","sources":["../../../../../src/auto/polaris/inputs/PolarisAutoRolesInput.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,MAAM,OAAO,CAAC;AAC1B,OAAO,EAAE,kBAAkB,EAAE,MAAM,mBAAmB,CAAC;AACvD,OAAO,EAAE,SAAS,EAAE,MAAM,oBAAoB,CAAC;AAC/C,OAAO,EAAE,sBAAsB,EAAE,MAAM,uCAAuC,CAAC;AAG/E,OAAO,EAAE,2BAA2B,EAAE,MAAM,mCAAmC,CAAC;AAKhF;;;;;;;;;;;GAWG;AACH,MAAM,CAAC,MAAM,qBAAqB,GAAG,SAAS,CAAC,CAAC,KAAiC,EAAE,EAAE;IACnF,MAAM,EAAE,OAAO,EAAE,OAAO,EAAE,UAAU,EAAE,UAAU,EAAE,gBAAgB,EAAE,UAAU,EAAE,QAAQ,EAAE,GAAG,sBAAsB,CAAC,KAAK,CAAC,CAAC;IAE3H,IAAI,UAAU,EAAE,CAAC;QACf,MAAM,UAAU,CAAC;IACnB,CAAC;IACD,IAAI,UAAU,EAAE,CAAC;QACf,MAAM,UAAU,CAAC;IACnB,CAAC;IAED,IAAI,OAAO,IAAI,CAAC,OAAO,IAAI,OAAO,CAAC,MAAM,KAAK,CAAC,EAAE,CAAC;QAChD,yGAAyG;QACzG,OAAO,IAAI,CAAC;IACd,CAAC;IAED,OAAO,CACL,oBAAC,2BAA2B,IAC1B,OAAO,EAAE,OAAO,EAChB,aAAa,QACb,KAAK,EAAE,KAAK,CAAC,KAAK,IAAI,QAAQ,CAAC,IAAI,KAC/B,kBAAkB,CAAC,UAAU,CAAC,EAClC,KAAK,EAAE,gBAAgB,GACvB,CACH,CAAC;AACJ,CAAC,CAAC,CAAC","sourcesContent":["import React from \"react\";\nimport { getPropsWithoutRef } from \"../../../utils.js\";\nimport { autoInput } from \"../../AutoInput.js\";\nimport { useRoleInputController } from \"../../hooks/useRoleInputController.js\";\nimport { type AutoRolesInputProps } from \"../../shared/AutoInputTypes.js\";\nimport type { PolarisFixedOptionsMultiComboboxProps } from \"../PolarisFixedOptionsCombobox.js\";\nimport { PolarisFixedOptionsCombobox } from \"../PolarisFixedOptionsCombobox.js\";\n\ntype PolarisAutoRolesInputProps = AutoRolesInputProps &\n  Partial<Omit<PolarisFixedOptionsMultiComboboxProps, \"allowMultiple\" | \"value\" | \"onChange\">>;\n\n/**\n * A RoleList selector within AutoForm.\n * @example\n * ```tsx\n * <AutoForm action={api.modelA.create}>\n *   <AutoRolesInput field=\"roles\" />\n * </AutoForm>\n * ```\n * @param props.field - The RoleList field API identifier.\n * @param props.label - Label of the RoleList selector.\n * @returns The AutoRolesInput component\n */\nexport const PolarisAutoRolesInput = autoInput((props: PolarisAutoRolesInputProps) => {\n  const { options, loading, rolesError, fieldError, selectedRoleKeys, fieldProps, metadata } = useRoleInputController(props);\n\n  if (rolesError) {\n    throw rolesError;\n  }\n  if (fieldError) {\n    throw fieldError;\n  }\n\n  if (loading || !options || options.length === 0) {\n    // Don't render until role options exist. There must always be at least one role option `unauthenticated`\n    return null;\n  }\n\n  return (\n    <PolarisFixedOptionsCombobox\n      options={options}\n      allowMultiple\n      label={props.label ?? metadata.name}\n      {...getPropsWithoutRef(fieldProps)}\n      value={selectedRoleKeys}\n    />\n  );\n});\n"]}