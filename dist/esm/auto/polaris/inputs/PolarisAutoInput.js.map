{"version":3,"file":"PolarisAutoInput.js","sourceRoot":"","sources":["../../../../../src/auto/polaris/inputs/PolarisAutoInput.tsx"],"names":[],"mappings":"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","sourcesContent":["import type { TextFieldProps } from \"@shopify/polaris\";\nimport { Checkbox, TextField } from \"@shopify/polaris\";\nimport React from \"react\";\nimport type { Control } from \"react-hook-form\";\nimport { useController, useForm, useFormContext } from \"react-hook-form\";\nimport type { GadgetEnumConfig, GadgetFieldType } from \"../../../internal/gql/graphql.js\";\nimport type { FieldMetadata } from \"../../../metadata.js\";\nimport { PolarisBelongsToInput } from \"./PolarisBelongsToInput.js\";\nimport { FieldType } from \"../../../metadata.js\";\nimport { PolarisDateTimePicker } from \"../PolarisDateTimePicker.js\";\nimport { PolarisFileInput } from \"../PolarisFileInput.js\";\nimport { PolarisFixedOptionsCombobox } from \"../PolarisFixedOptionsCombobox.js\";\nimport { PolarisJSONInput } from \"../PolarisJSONInput.js\";\nimport { PolarisRolesCombobox } from \"../PolarisRolesCombobox.js\";\nimport { useFormFields } from \"../../AutoForm.js\";\nimport { useAutoFormMetadata } from \"../../AutoFormContext.js\";\n\nconst FieldTypeToInputType: Partial<Record<GadgetFieldType, TextFieldProps[\"type\"]>> = {\n  [FieldType.Number]: \"number\",\n  [FieldType.Email]: \"email\",\n  [FieldType.Password]: \"password\",\n  [FieldType.EncryptedString]: \"password\",\n};\n\nexport const PolarisAutoInput = (props: { field: string }) => {\n  const { metadata } = useAutoFormMetadata();\n  const fields = useFormFields(metadata, {});\n  const fieldMetadata = fields.find((field) => field[1].apiIdentifier === props.field);\n\n  if (!fieldMetadata) {\n    throw new Error(`Field ${props.field} not found in metadata`);\n  }\n\n  const path = fieldMetadata[0];\n  const _field = fieldMetadata[1];\n\n  const {\n    field: fieldProps,\n    fieldState: { error },\n  } = useController({\n    name: path,\n    rules: { required: _field.requiredArgumentForInput },\n  });\n  // many polaris components don't take refs because they are weenies, see https://github.com/Shopify/polaris/issues/1083\n  // omit the ref from the forwarded along props so that we don't get a warning\n  const { ref: _ref, ...field } = fieldProps;\n\n  const config = _field.configuration;\n  switch (config.fieldType) {\n    case FieldType.String:\n    case FieldType.Number:\n    case FieldType.Email:\n    case FieldType.Password:\n    case FieldType.EncryptedString:\n    case FieldType.Color:\n    case FieldType.Url: {\n      return (\n        <TextField\n          label={_field.name}\n          type={FieldTypeToInputType[_field.fieldType]}\n          autoComplete=\"off\"\n          {...field}\n          error={error?.message}\n        />\n      );\n    }\n    case FieldType.Boolean: {\n      return <Checkbox label={_field.name} {...field} error={error?.message} />;\n    }\n    case FieldType.DateTime: {\n      return (\n        <PolarisDateTimePicker dateLabel={_field.name} includeTime={(config as any).includeTime} {...field} error={error?.message} />\n      );\n    }\n    case FieldType.Json: {\n      return <PolarisJSONInput label={_field.name} multiline={4} monospaced autoComplete=\"off\" {...field} />;\n    }\n    case FieldType.Enum: {\n      const config = _field.configuration as GadgetEnumConfig;\n      return (\n        <PolarisFixedOptionsCombobox\n          label={_field.name}\n          options={config.options.map((option) => ({ value: option.name, label: option.name }))}\n          allowMultiple={config.allowMultiple}\n          {...field}\n        />\n      );\n    }\n    case FieldType.File: {\n      return <PolarisFileInput label={_field.name} {...field} />;\n    }\n    case FieldType.RoleAssignments: {\n      return <PolarisRolesCombobox label={_field.name} {...field} />;\n    }\n    case FieldType.HasMany:\n    case FieldType.HasManyThrough:\n    case FieldType.HasOne:\n    case FieldType.BelongsTo: {\n      // TODO: implement relationship field inputs\n      return <PolarisBelongsToInput field={_field.apiIdentifier} />;\n    }\n    case FieldType.RichText: {\n      // TODO: implement rich text input\n      return null;\n    }\n    case FieldType.Money: {\n      // TODO: implement money input\n      return null;\n    }\n    case FieldType.Vector: {\n      return null;\n    }\n    default: {\n      throw new Error(`Unsupported field type for Polaris AutoForm: ${_field.fieldType}`);\n    }\n  }\n};\n"]}