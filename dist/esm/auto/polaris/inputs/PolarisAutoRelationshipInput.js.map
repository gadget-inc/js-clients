{"version":3,"file":"PolarisAutoRelationshipInput.js","sourceRoot":"","sources":["../../../../../src/auto/polaris/inputs/PolarisAutoRelationshipInput.tsx"],"names":[],"mappings":"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","sourcesContent":["import { Combobox, Icon, Listbox, Tag, Text } from \"@shopify/polaris\";\nimport { SearchIcon } from \"@shopify/polaris-icons\";\nimport React from \"react\";\nimport { Control } from \"react-hook-form\";\nimport { numberOfRecordsToLoad, useRelationshipInputController } from \"../../hooks/useRelationshipInputController.js\";\n\nexport const PolarisAutoRelationshipInput = (props: {\n  field: string;\n  control?: Control<any>;\n  optionLabel?: string | ((record: Record<string, any>) => string);\n}) => {\n  const { field, control, optionLabel } = props;\n\n  const { path, isHasMany, relatedModel, metadata, pagination, search, selection } = useRelationshipInputController({\n    field: field,\n    control: control,\n    optionLabel: optionLabel,\n  });\n\n  if (isHasMany) {\n    // TODO - Update to account for HasMany relationship\n    return null;\n  }\n\n  const selectedRecordTag = (\n    <Tag onRemove={() => selection.set(undefined)}>\n      <p style={{ color: selection.error ? \"red\" : undefined }}>{selection.label}</p>\n    </Tag>\n  );\n\n  const dropdownContent = (\n    <Listbox onSelect={(recordId) => selection.set(selection.id === recordId ? undefined : recordId)}>\n      {relatedModel.options.length ? (\n        relatedModel.options.map((option) => (\n          <SelectableOption {...option} selected={selection.id === option.recordId} key={option.recordId} />\n        ))\n      ) : (\n        <NoRecordsMessage />\n      )}\n      {relatedModel.isLoadingRelatedRecords && <Listbox.Loading accessibilityLabel=\"Loading\" />}\n    </Listbox>\n  );\n\n  return (\n    <Combobox\n      activator={\n        <Combobox.TextField\n          prefix={<Icon source={SearchIcon} />}\n          onChange={search.set}\n          value={search.value}\n          label={metadata.name}\n          name={path}\n          placeholder=\"Search\"\n          autoComplete=\"off\"\n          verticalContent={selection.id && selectedRecordTag}\n        />\n      }\n      onScrolledToBottom={pagination.loadNextPageOfRecords}\n      onClose={pagination.resetPagination}\n      willLoadMoreOptions={relatedModel.hasNextPage && relatedModel.options.length >= numberOfRecordsToLoad}\n    >\n      <>{dropdownContent}</>\n    </Combobox>\n  );\n};\n\nconst SelectableOption = (props: { label: string; recordId: string; selected: boolean }) => {\n  const { label, recordId, selected } = props;\n  return (\n    <Listbox.Option key={recordId} value={recordId} selected={selected}>\n      {label}\n    </Listbox.Option>\n  );\n};\n\nconst NoRecordsMessage = () => (\n  <div style={{ padding: \"16px\" }}>\n    <Text as=\"p\" tone=\"subdued\">\n      No records found\n    </Text>\n  </div>\n);\n"]}