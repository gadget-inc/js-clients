{"version":3,"file":"PolarisAutoFileInput.js","sourceRoot":"","sources":["../../../../../src/auto/polaris/inputs/PolarisAutoFileInput.tsx"],"names":[],"mappings":"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","sourcesContent":["import type { DropZoneProps } from \"@shopify/polaris\";\nimport { Box, DropZone, InlineError, InlineStack, Thumbnail } from \"@shopify/polaris\";\nimport { NoteIcon } from \"@shopify/polaris-icons\";\nimport { filesize } from \"filesize\";\nimport React, { useMemo } from \"react\";\nimport type { Control } from \"react-hook-form\";\nimport { isAutoFileFieldValue } from \"../../../validationSchema.js\";\nimport { getFileSizeValidationMessage, imageFileTypes, useFileInputController } from \"../../hooks/useFileInputController.js\";\n\nexport const PolarisAutoFileInput = (props: { field: string; control?: Control<any> } & DropZoneProps) => {\n  const { field: fieldApiIdentifier, control, ...rest } = props;\n  const { fieldProps, errorMessage, imageThumbnailURL, onFileUpload, clearFileValue, canClearFileValue, validations, metadata } =\n    useFileInputController({\n      field: fieldApiIdentifier,\n      control,\n    });\n\n  const fileUploadContainer = useMemo(() => {\n    if (fieldProps.value) return null;\n\n    const actionHintParts = [\"Accepts\"];\n    if (validations.onlyImages) {\n      actionHintParts.push(`.jpg, .webp, .svg${validations.onlyImages.allowAnimatedImages ? \", .gif\" : \"\"}, and .png`);\n    }\n\n    if (validations.fileSize) {\n      const validation = validations.fileSize;\n      const message = getFileSizeValidationMessage(validation, {\n        inRange: (min, max) => `between ${filesize(min)} and ${filesize(max)}`,\n        max: (max) => `larger than ${filesize(max)}`,\n        min: (min) => `smaller than ${filesize(min)}`,\n      });\n      if (message) actionHintParts.push(message);\n    }\n\n    return <DropZone.FileUpload actionTitle=\"Add file\" actionHint={actionHintParts.length === 1 ? \"\" : actionHintParts.join(\" \")} />;\n  }, [fieldProps.value, validations.fileSize, validations.onlyImages]);\n\n  let filePreview = null;\n  if (fieldProps.value && isAutoFileFieldValue(fieldProps.value)) {\n    filePreview = (\n      <Box padding=\"100\">\n        <InlineStack align=\"space-between\">\n          <InlineStack gap=\"200\" blockAlign=\"center\">\n            <Thumbnail\n              size=\"small\"\n              alt={fieldProps.value.fileName}\n              source={\n                imageThumbnailURL && [...imageFileTypes, \"image/gif\"].includes(fieldProps.value.mimeType) ? imageThumbnailURL : NoteIcon\n              }\n            />\n            <div>\n              {fieldProps.value.$uploading ? \"(Uploading) \" : \"\"}\n              {fieldProps.value.fileName}\n            </div>\n          </InlineStack>\n          {canClearFileValue && (\n            <div\n              onClick={(event) => {\n                event.preventDefault();\n                event.stopPropagation();\n                clearFileValue();\n              }}\n            >\n              Delete file\n            </div>\n            // <Button\n            //   icon={DeleteIcon}\n            //   variant=\"plain\"\n            //   accessibilityLabel=\"Delete file\"\n            //   onPointerDown={() => {\n            //     clearFileValue();\n            //   }}\n            //   id={`clear-file-${fieldApiIdentifier}`}\n            // />\n          )}\n        </InlineStack>\n      </Box>\n    );\n  }\n\n  const inputLabel = (\n    <>\n      {metadata.name} {metadata.requiredArgumentForInput ? <span style={{ color: \"var(--p-color-text-critical)\" }}>*</span> : null}\n    </>\n  );\n\n  return (\n    <>\n      <DropZone\n        variableHeight\n        label={inputLabel}\n        allowMultiple={false}\n        onDrop={(_droppedFiles, acceptedFiles) => {\n          void onFileUpload(acceptedFiles);\n        }}\n        {...rest}\n        accept={validations.onlyImages?.acceptedTypes?.join(\",\")}\n      >\n        {filePreview}\n        {fileUploadContainer}\n      </DropZone>\n      {errorMessage && (\n        <div style={{ marginTop: \"4px\" }}>\n          <InlineError fieldID={fieldApiIdentifier} message={errorMessage} />\n        </div>\n      )}\n    </>\n  );\n};\n"]}