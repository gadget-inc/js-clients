{"version":3,"file":"PolarisAutoTimePicker.js","sourceRoot":"","sources":["../../../../../src/auto/polaris/inputs/PolarisAutoTimePicker.tsx"],"names":[],"mappings":"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","sourcesContent":["import type { TextFieldProps } from \"@shopify/polaris\";\nimport { Box, Icon, Listbox, Popover, Scrollable, Text, TextField } from \"@shopify/polaris\";\nimport { ClockIcon } from \"@shopify/polaris-icons\";\nimport React, { useEffect, useState } from \"react\";\nimport { useHover } from \"../../../auto/hooks/useHover.js\";\nimport { getDateTimeObjectFromDate, getTimeString, isValidDate, timeFormatRegex, zonedTimeToUtc } from \"../../../dateTimeUtils.js\";\nimport type { ControllerRenderProps, FieldValues } from \"../../../useActionForm.js\";\n\nconst hoursArr = Array.from({ length: 12 }, (_, i) => (i + 1).toString());\nconst minsArr = Array.from({ length: 60 }, (_, i) => i.toString().padStart(2, \"0\"));\nconst ampmArr = [\"AM\", \"PM\"];\n\nexport interface DateTimeState {\n  month: number;\n  year: number;\n  day: number;\n  hour: string;\n  minute: string;\n  ampm: string;\n}\n\ntype DateTimeKey = keyof DateTimeState;\n\nexport interface PolarisAutoTimePickerProps {\n  /**\n   * React Hook Form ControllerRenderProps object that controls the DateTime field\n   */\n  fieldProps: ControllerRenderProps<FieldValues, string>;\n  /**\n   * The HTML ID of the DateTime field\n   */\n  id?: string;\n  /**\n   * Props to pass to the Polaris TimePicker component\n   */\n  timePickerProps?: Partial<TextFieldProps>;\n  /**\n   * Indicates if the time popover should be hidden\n   */\n  hideTimePopover?: boolean;\n  /**\n   * The local time zone of the DateTime field\n   */\n  localTz?: string;\n}\n\nconst PolarisAutoTimePicker = (props: PolarisAutoTimePickerProps) => {\n  const {\n    fieldProps: { onChange, value },\n  } = props;\n\n  const [timeString, setTimeString] = useState(\n    value && isValidDate(new Date(value)) ? getTimeString(getDateTimeObjectFromDate(value)) : \"\"\n  );\n  const [timePopoverActive, setTimePopoverActive] = useState(false);\n  const [timeParseError, setTimeParseError] = useState(false);\n\n  const onTimeStringChange = (newValue: string) => {\n    setTimeString(newValue);\n\n    let trimmedValue = newValue.trim();\n    let hours = parseInt(trimmedValue.split(\":\")[0], 10);\n    const suffix = trimmedValue.split(\":\")[1];\n\n    if (hours === 0) {\n      trimmedValue = \"12:\" + suffix;\n    }\n\n    const result = timeFormatRegex.test(trimmedValue);\n\n    if (!result) {\n      setTimeParseError(true);\n      return;\n    }\n\n    const minutes = parseInt(suffix, 10);\n    const newAmpm = trimmedValue.slice(-2).toUpperCase();\n\n    if (newAmpm === \"PM\" && hours < 12) {\n      hours += 12;\n    } else if (newAmpm === \"AM\" && hours === 12) {\n      hours = 0;\n    }\n\n    const newDate = new Date();\n    newDate.setHours(hours, minutes, 0, 0);\n\n    if (!isValidDate(newDate)) {\n      setTimeParseError(true);\n      return;\n    }\n\n    setTimeParseError(false);\n    onChange(zonedTimeToUtc(newDate, props.localTz ?? \"UTC\"));\n  };\n\n  const currentHour = value && isValidDate(new Date(value)) ? getDateTimeObjectFromDate(value).hour : hoursArr[0];\n  const currentMinute = value && isValidDate(new Date(value)) ? getDateTimeObjectFromDate(value).minute.padStart(2, \"0\") : minsArr[0];\n  const currentAmpm = value && isValidDate(new Date(value)) ? getDateTimeObjectFromDate(value).ampm : ampmArr[0];\n\n  const hourProps = {\n    array: hoursArr,\n    formatter: (newValue: string) => `${newValue}:${currentMinute} ${currentAmpm}`,\n    key: \"hour\" as DateTimeKey,\n    selectedItem: currentHour,\n  };\n  const minProps = {\n    array: minsArr,\n    formatter: (newValue: string) => `${currentHour}:${newValue.padStart(2, \"0\")} ${currentAmpm}`,\n    key: \"minute\" as DateTimeKey,\n    selectedItem: currentMinute,\n  };\n  const ampmProps = {\n    array: ampmArr,\n    formatter: (newValue: string) => `${currentHour}:${currentMinute} ${newValue}`,\n    key: \"ampm\" as DateTimeKey,\n    selectedItem: currentAmpm,\n  };\n\n  useEffect(() => {\n    if (!value) return;\n    const dateValue = new Date(value);\n    if (!isValidDate(dateValue)) return;\n    setTimeString(getTimeString(getDateTimeObjectFromDate(dateValue)));\n  }, [value, setTimeString]);\n\n  return (\n    <>\n      <Popover\n        active={timePopoverActive}\n        onClose={() => setTimePopoverActive(false)}\n        preferredAlignment=\"right\"\n        activator={\n          <TextField\n            prefix={<Icon source={ClockIcon} />}\n            id={props.id ? `${props.id}-time` : undefined}\n            data-testid={props.id ? `${props.id}-time` : undefined}\n            label={props.timePickerProps?.label ?? \"Time\"}\n            autoComplete=\"off\"\n            value={timeString}\n            onChange={onTimeStringChange}\n            onFocus={() => setTimePopoverActive(true)}\n            error={timeParseError && `Invalid time format`}\n            {...props.timePickerProps}\n          />\n        }\n      >\n        <Popover.Pane fixed>\n          {!props.hideTimePopover && (\n            <div style={{ overflow: \"hidden\", padding: \"15px 8px\" }}>\n              <div style={{ display: \"flex\" }}>\n                {[hourProps, minProps, ampmProps].map((timeComponentProps, i) => (\n                  <Scrollable key={i} style={{ overflowY: \"scroll\", height: \"250px\" }}>\n                    <Listbox onSelect={(value: string) => onTimeStringChange(timeComponentProps.formatter(value))}>\n                      <TimeSelectionDropdownItems items={timeComponentProps.array} selectedItem={timeComponentProps.selectedItem} />\n                    </Listbox>\n                  </Scrollable>\n                ))}\n              </div>\n            </div>\n          )}\n        </Popover.Pane>\n      </Popover>\n    </>\n  );\n};\n\nexport default PolarisAutoTimePicker;\n\nconst TimeSelectionDropdownItems = (props: { items: string[]; selectedItem?: string }) => {\n  const { items, selectedItem } = props;\n  return items.map((item, i) => <DropdownItem key={`${i}-${item}`} item={item} isSelected={selectedItem === item} />);\n};\n\nconst DropdownItem = ({ item, isSelected }: { item: string; isSelected: boolean }) => {\n  const [isHovered, hoverProps] = useHover();\n  return (\n    <div style={{ textAlign: \"center\", cursor: \"default\", padding: \"0px 4px\" }}>\n      <Listbox.Option value={item}>\n        <div style={{ cursor: \"pointer\" }} {...hoverProps}>\n          {isSelected || isHovered ? (\n            <Box padding=\"100\" background=\"bg-inverse\" borderRadius=\"200\" minHeight=\"30px\" minWidth=\"30px\">\n              <Text as=\"p\" tone=\"text-inverse\">\n                {item}\n              </Text>\n            </Box>\n          ) : (\n            <Box minHeight=\"30px\" minWidth=\"30px\" padding=\"100\">\n              {item}\n            </Box>\n          )}\n        </div>\n      </Listbox.Option>\n    </div>\n  );\n};\n"]}