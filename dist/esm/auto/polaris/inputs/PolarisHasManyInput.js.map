{"version":3,"file":"PolarisHasManyInput.js","sourceRoot":"","sources":["../../../../../src/auto/polaris/inputs/PolarisHasManyInput.tsx"],"names":[],"mappings":"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","sourcesContent":["import { assert } from \"@gadgetinc/api-client-core\";\nimport { Autocomplete, LegacyStack, Tag } from \"@shopify/polaris\";\nimport React, { useCallback, useState } from \"react\";\nimport { useFieldArray, useFormContext } from \"react-hook-form\";\nimport type { GadgetBelongsToConfig } from \"src/internal/gql/graphql.js\";\nimport { useApi } from \"../../../GadgetProvider.js\";\nimport { useFindMany } from \"../../../useFindMany.js\";\nimport { getModelManager } from \"../../../utils.js\";\nimport { useFieldMetadata } from \"../../hooks/useFieldMetadata.js\";\n\nexport const PolarisHasManyInput = (props: { field: string }) => {\n  const { path, metadata } = useFieldMetadata(props.field);\n\n  const api = useApi();\n  const { getValues } = useFormContext();\n\n  const { fields, remove, replace } = useFieldArray({\n    name: path,\n  });\n\n  const config = metadata.configuration as GadgetBelongsToConfig;\n\n  if (!config || !config.relatedModel) {\n    throw new Error(`Field ${props.field} not found in metadata`);\n  }\n\n  const modelManager = assert(\n    getModelManager(api, config.relatedModel.apiIdentifier, config.relatedModel.namespace),\n    \"no model manager found for action function\"\n  );\n\n  const [{ data, fetching, error }, _refetch] = useFindMany(modelManager as any, { first: 25 });\n\n  const [inputValue, setInputValue] = useState(\"\");\n\n  const updateText = useCallback((value: string) => {\n    setInputValue(value);\n  }, []);\n\n  if (fetching || !data) {\n    return <p>Loading...</p>;\n  }\n\n  const options = data.map((record: Record<string, any>) => {\n    return { label: record.name, value: record.id };\n  });\n\n  const verticalContentMarkup =\n    fields.length > 0 ? (\n      <LegacyStack spacing=\"extraTight\" alignment=\"center\">\n        {fields.map((field, i) => {\n          const id = getValues(path)[i].id;\n          const option = options.find((option) => option.value === id);\n          return (\n            <Tag\n              key={`option${field.id}`}\n              onRemove={() => {\n                const index = fields.findIndex((entry) => entry.id == field.id);\n                remove(index);\n              }}\n            >\n              {option?.label}\n            </Tag>\n          );\n        })}\n      </LegacyStack>\n    ) : null;\n\n  const textField = (\n    <Autocomplete.TextField\n      onChange={updateText}\n      label={metadata.name}\n      value={inputValue}\n      verticalContent={verticalContentMarkup}\n      autoComplete=\"off\"\n    />\n  );\n\n  return (\n    <Autocomplete\n      allowMultiple\n      options={options}\n      selected={fields.map((field, i) => getValues(path)[i].id)}\n      textField={textField}\n      onSelect={(selection) => {\n        replace(selection.map((id) => ({ id: id })));\n      }}\n      listTitle={metadata.name}\n    />\n  );\n};\n"]}