{"version":3,"file":"PolarisAutoEnumInput.js","sourceRoot":"","sources":["../../../../../src/auto/polaris/inputs/PolarisAutoEnumInput.tsx"],"names":[],"mappings":"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","sourcesContent":["import type { ComboboxProps } from \"@shopify/polaris\";\nimport { AutoSelection, Box, Combobox, InlineStack, Listbox, Tag, Text } from \"@shopify/polaris\";\nimport React, { useCallback } from \"react\";\nimport type { Control } from \"../../../useActionForm.js\";\nimport { autoInput } from \"../../AutoInput.js\";\nimport { useEnumInputController } from \"../../hooks/useEnumInputController.js\";\n\nexport const PolarisAutoEnumInput = autoInput(\n  (props: { field: string; control?: Control<any>; label?: string } & Partial<Omit<ComboboxProps, \"allowMultiple\">>) => {\n    const { field: fieldApiIdentifier, control, label: labelProp, ...comboboxProps } = props;\n    const {\n      allowMultiple,\n      allowOther,\n      onSelectionChange,\n      selectedOptions,\n      allOptions,\n      filteredOptions,\n      searchQuery,\n      label,\n      metadata,\n      isError,\n      errorMessage,\n    } = useEnumInputController({ field: fieldApiIdentifier, control });\n    const { value: searchValue, setValue: setSearchValue } = searchQuery;\n\n    let selectedTagsElement = null;\n    if (selectedOptions.length > 0) {\n      selectedTagsElement = (\n        <InlineStack gap=\"150\">\n          {selectedOptions.map((tag) => (\n            <Tag key={`option-${tag}`} onRemove={() => onSelectionChange(tag)}>\n              {tag}\n            </Tag>\n          ))}\n        </InlineStack>\n      );\n    }\n\n    const formatOptionText = useCallback(\n      (option: string) => {\n        const trimValue = searchValue.trim().toLocaleLowerCase();\n        const matchIndex = option.toLocaleLowerCase().indexOf(trimValue);\n\n        if (!searchValue || matchIndex === -1) return option;\n\n        const start = option.slice(0, matchIndex);\n        const highlight = option.slice(matchIndex, matchIndex + trimValue.length);\n        const end = option.slice(matchIndex + trimValue.length, option.length);\n\n        return (\n          <p>\n            {start}\n            <Text fontWeight=\"bold\" as=\"span\">\n              {highlight}\n            </Text>\n            {end}\n          </p>\n        );\n      },\n      [searchValue]\n    );\n\n    let optionItemElement = null;\n    if (allOptions.length > 0) {\n      optionItemElement = filteredOptions.map((option) => {\n        return (\n          <Listbox.Option key={option} value={option} selected={selectedOptions.includes(option)} accessibilityLabel={option}>\n            <Listbox.TextOption selected={selectedOptions.includes(option)}>{formatOptionText(option)}</Listbox.TextOption>\n          </Listbox.Option>\n        );\n      });\n    }\n\n    let addExtraOptionElement = null;\n    if (allowOther && searchValue && !allOptions.includes(searchValue) && searchValue.trim().length > 0) {\n      addExtraOptionElement = <Listbox.Action value={searchValue}>{`Add \"${searchValue}\"`}</Listbox.Action>;\n    }\n\n    let emptyStateElement = null;\n    if (!allowOther && (!optionItemElement || optionItemElement.length === 0) && searchValue) {\n      emptyStateElement = (\n        <Box padding=\"100\">\n          <Text as=\"span\" alignment=\"center\" tone=\"subdued\">{`No options found matching \"${searchValue}\"`}</Text>\n        </Box>\n      );\n    }\n\n    let listBoxElement = null;\n    if (optionItemElement || addExtraOptionElement || emptyStateElement) {\n      listBoxElement = (\n        <Listbox\n          autoSelection={AutoSelection.None}\n          onSelect={(selected) => {\n            onSelectionChange(selected);\n            if (allowMultiple) {\n              setSearchValue(\"\");\n            }\n          }}\n        >\n          {emptyStateElement}\n          {addExtraOptionElement}\n          {optionItemElement}\n        </Listbox>\n      );\n    }\n\n    const inputLabel = (\n      <>\n        {labelProp ?? label} {metadata.requiredArgumentForInput ? <span style={{ color: \"var(--p-color-text-critical)\" }}>*</span> : null}\n      </>\n    );\n\n    return (\n      <Combobox\n        allowMultiple={allowMultiple}\n        activator={\n          <Combobox.TextField\n            autoComplete=\"off\"\n            label={inputLabel}\n            value={searchValue}\n            placeholder=\"Search\"\n            verticalContent={selectedTagsElement}\n            onChange={setSearchValue}\n            id={`${props.field}-combobox-textfield`}\n            error={errorMessage}\n          />\n        }\n        {...comboboxProps}\n      >\n        {listBoxElement}\n      </Combobox>\n    );\n  }\n);\n"]}