{"version":3,"file":"PolarisAutoBelongsToForm.js","sourceRoot":"","sources":["../../../../../../src/auto/polaris/inputs/relationships/PolarisAutoBelongsToForm.tsx"],"names":[],"mappings":"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","sourcesContent":["import {\n  ActionList,\n  AutoSelection,\n  BlockStack,\n  Button,\n  ButtonGroup,\n  Icon,\n  InlineGrid,\n  InlineStack,\n  Listbox,\n  Modal,\n  Popover,\n  Text,\n} from \"@shopify/polaris\";\nimport { MenuHorizontalIcon, PlusCircleIcon } from \"@shopify/polaris-icons\";\nimport React, { useEffect, useState } from \"react\";\nimport { useFormContext } from \"../../../../useActionForm.js\";\nimport { get } from \"../../../../utils.js\";\nimport { autoInput } from \"../../../AutoInput.js\";\nimport { RelationshipContext, useAutoRelationship, useRelationshipContext } from \"../../../hooks/useAutoRelationship.js\";\nimport { useBelongsToController } from \"../../../hooks/useBelongsToController.js\";\nimport { getRecordAsOption, useOptionLabelForField } from \"../../../hooks/useRelatedModel.js\";\nimport type { OptionLabel } from \"../../../interfaces/AutoRelationshipInputProps.js\";\nimport { RelatedModelOptionsPopover, RelatedModelOptionsSearch } from \"./RelatedModelOptions.js\";\nimport { renderOptionLabel } from \"./utils.js\";\n\nexport const PolarisAutoBelongsToForm = autoInput(\n  (props: {\n    field: string;\n    children: React.ReactNode;\n    renderSelectedRecord?: (record: Record<string, any>) => React.ReactNode;\n    primaryLabel?: OptionLabel;\n    secondaryLabel?: OptionLabel;\n    tertiaryLabel?: OptionLabel;\n  }) => {\n    const { field } = props;\n    const { path, metadata } = useAutoRelationship({ field });\n    const {\n      setValue,\n      getValues,\n      formState: { defaultValues, submitCount, isSubmitSuccessful },\n    } = useFormContext();\n    const { record, relatedModelOptions } = useBelongsToController(props);\n    const [actionsOpen, setActionsOpen] = useState(false);\n    const [searchOpen, setSearchOpen] = useState(false);\n    const [modalOpen, setModalOpen] = useState(false);\n    const {\n      search,\n      searchFilterOptions,\n      pagination,\n      relatedModel: { records, fetching: isLoading },\n    } = relatedModelOptions;\n    const relationshipContext = useRelationshipContext();\n    const pathPrefix = relationshipContext?.transformPath ? relationshipContext.transformPath(props.field) : props.field;\n\n    const primaryLabel = useOptionLabelForField(field, props.primaryLabel);\n    const hasRecord = !!(record && !(\"_unlink\" in record && record._unlink));\n    const recordOption = record ? getRecordAsOption(record, primaryLabel, props.secondaryLabel, props.tertiaryLabel) : null;\n\n    const defaultRecordId = get(defaultValues, path)?.id;\n\n    // if the child record is created we need to set the id to the default record id\n    // that comes from the response to the action mutation\n    useEffect(() => {\n      if (isSubmitSuccessful && record && !record.id && !(\"_link\" in record) && !(\"_unlink\" in record) && defaultRecordId) {\n        setValue(path + \".id\", defaultRecordId);\n      }\n    }, [record, defaultRecordId, path, setValue, submitCount, isSubmitSuccessful]);\n\n    const parentName = metadata.name ?? \"Unknown\";\n\n    return (\n      <>\n        <BlockStack gap=\"300\">\n          <InlineGrid columns=\"1fr auto\">\n            <Text as=\"h2\" variant=\"headingSm\">\n              {parentName}\n            </Text>\n            {hasRecord && (\n              <Popover\n                active={actionsOpen}\n                activator={<Button onClick={() => setActionsOpen((prev) => !prev)} icon={MenuHorizontalIcon} />}\n                onClose={() => setActionsOpen(false)}\n              >\n                <ActionList\n                  actionRole=\"menuitem\"\n                  items={[\n                    {\n                      content: `Edit ${parentName.toLocaleLowerCase()}`,\n                      onAction: () => {\n                        setModalOpen(true);\n                        setActionsOpen(false);\n                      },\n                    },\n                    {\n                      content: `Remove ${parentName.toLocaleLowerCase()}`,\n                      onAction: () => {\n                        const { __typename, ...rest } = record;\n                        const nulledValues = Object.fromEntries(Object.keys(rest).map((key) => [key, null]));\n                        setValue(path, { ...nulledValues, __typename, _unlink: true });\n                        setActionsOpen(false);\n                      },\n                      destructive: true,\n                    },\n                  ]}\n                />\n              </Popover>\n            )}\n          </InlineGrid>\n          {hasRecord ? (\n            props.renderSelectedRecord ? (\n              props.renderSelectedRecord(record)\n            ) : (\n              <InlineStack align=\"space-between\">\n                <BlockStack gap=\"200\">\n                  {renderOptionLabel(recordOption!.label, \"primary\")}\n                  {recordOption!.secondaryLabel && renderOptionLabel(recordOption!.secondaryLabel, \"secondary\")}\n                </BlockStack>\n                {recordOption!.tertiaryLabel && renderOptionLabel(recordOption!.tertiaryLabel, \"tertiary\")}\n              </InlineStack>\n            )\n          ) : (\n            <RelatedModelOptionsPopover\n              active={searchOpen}\n              activator={\n                <RelatedModelOptionsSearch\n                  modelName={parentName}\n                  value={search.value}\n                  onChange={search.set}\n                  onFocus={() => setSearchOpen(true)}\n                />\n              }\n              onClose={() => setSearchOpen(false)}\n              onScrolledToBottom={pagination.loadNextPage}\n              actions={[\n                <Listbox.Action key=\"add-new-record\" value=\"add-new-record\" divider>\n                  <InlineStack gap=\"200\">\n                    <Icon source={PlusCircleIcon} />\n                    Add {parentName}\n                  </InlineStack>\n                </Listbox.Action>,\n              ]}\n              options={searchFilterOptions}\n              records={records}\n              onSelect={(record) => {\n                if (record.id === \"add-new-record\") {\n                  setModalOpen(true);\n                } else {\n                  setValue(path, { ...record, _link: record.id });\n                }\n              }}\n              isLoading={isLoading}\n              autoSelection={AutoSelection.None}\n            />\n          )}\n        </BlockStack>\n        <Modal open={modalOpen} onClose={() => setModalOpen(false)} title={`Add ${parentName}`}>\n          <RelationshipContext.Provider value={{ transformPath: (path) => pathPrefix + \".\" + path }}>\n            <Modal.Section>{props.children}</Modal.Section>\n            <Modal.Section>\n              <div style={{ float: \"right\", paddingBottom: \"16px\" }}>\n                <ButtonGroup>\n                  <Button variant=\"secondary\" onClick={() => setModalOpen(false)}>\n                    Cancel\n                  </Button>\n                  <Button\n                    variant=\"primary\"\n                    onClick={() => {\n                      const { _unlink, _link, id: recordId, ...rest } = getValues(path);\n\n                      if (recordId) {\n                        setValue(path, { ...rest, id: recordId });\n                      } else {\n                        setValue(path, rest);\n                      }\n                      setModalOpen(false);\n                    }}\n                  >\n                    Save\n                  </Button>\n                </ButtonGroup>\n              </div>\n            </Modal.Section>\n          </RelationshipContext.Provider>\n        </Modal>\n      </>\n    );\n  }\n);\n"]}