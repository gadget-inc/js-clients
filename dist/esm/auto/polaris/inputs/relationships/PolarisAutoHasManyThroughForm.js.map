{"version":3,"file":"PolarisAutoHasManyThroughForm.js","sourceRoot":"","sources":["../../../../../../src/auto/polaris/inputs/relationships/PolarisAutoHasManyThroughForm.tsx"],"names":[],"mappings":"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","sourcesContent":["import { AutoSelection, BlockStack, Box, Button, Icon, InlineGrid, InlineStack, Listbox, Text } from \"@shopify/polaris\";\nimport { PlusCircleIcon, XCircleIcon } from \"@shopify/polaris-icons\";\nimport React, { useEffect, useMemo, useState } from \"react\";\nimport { useFormContext } from \"../../../../useActionForm.js\";\nimport { extractPathsFromChildren } from \"../../../AutoForm.js\";\nimport { autoInput } from \"../../../AutoInput.js\";\nimport { RelationshipContext, useAutoRelationship } from \"../../../hooks/useAutoRelationship.js\";\nimport { useHasManyThroughController } from \"../../../hooks/useHasManyThroughController.js\";\nimport { getRecordAsOption, useOptionLabelForField } from \"../../../hooks/useRelatedModel.js\";\nimport type { OptionLabel } from \"../../../interfaces/AutoRelationshipInputProps.js\";\nimport { RelatedModelOptionsPopover, RelatedModelOptionsSearch } from \"./RelatedModelOptions.js\";\nimport { renderOptionLabel } from \"./utils.js\";\n\nexport const PolarisAutoHasManyThroughRelationshipForm = autoInput(\n  (props: {\n    field: string;\n    children: React.ReactNode;\n    primaryLabel?: OptionLabel;\n    secondaryLabel?: OptionLabel;\n    tertiaryLabel?: OptionLabel;\n  }) => {\n    const { field, children } = props;\n    const { pathPrefix, metadata } = useAutoRelationship({ field });\n    const { setValue } = useFormContext();\n    const childPaths = children && extractPathsFromChildren(children);\n    const hasChildForm = childPaths && childPaths.length > 0;\n    const { fieldArrayPath, fieldArray, records, relatedModelOptions, inverseRelatedModelField, joinModelField, joinModelApiIdentifier } =\n      useHasManyThroughController(props);\n    const { fields, append, remove } = fieldArray;\n\n    useEffect(() => {\n      for (const [index, field] of fields.entries()) {\n        if (\n          inverseRelatedModelField &&\n          (field as any)[inverseRelatedModelField] &&\n          (field as any)[inverseRelatedModelField].id &&\n          !(\"_link\" in field)\n        ) {\n          // use setValue so that we don't trigger a re-render\n          setValue(`${fieldArrayPath}.${index}.${inverseRelatedModelField}._link`, (field as any)[inverseRelatedModelField].id);\n        }\n      }\n    }, [setValue, inverseRelatedModelField, fields, fieldArrayPath]);\n\n    const [addingSibling, setAddingSibling] = useState(false);\n    const listboxId = `HasManyThroughListboxInPopover-${field}`;\n\n    if (metadata.configuration.__typename !== \"GadgetHasManyThroughConfig\") {\n      throw new Error(\"PolarisAutoHasManyThroughRelationshipForm can only be used for HasManyThrough fields\");\n    }\n\n    const {\n      search,\n      searchFilterOptions: siblingModelOptions,\n      relatedModel: { fetching: siblingRecordsLoading, records: siblingRecords },\n      pagination: siblingPagination,\n    } = relatedModelOptions;\n    const siblingModelName = metadata.configuration.relatedModel?.name ?? \"Unknown\";\n\n    const joinRecords = useMemo(() => {\n      return fields.flatMap((field, idx): [string, number, Record<string, any>][] => {\n        const record = records[idx];\n\n        if (!record) {\n          return [];\n        }\n\n        return [[field._fieldArrayKey, idx, record]];\n      });\n    }, [fields, records]);\n\n    const primaryLabel = useOptionLabelForField(field, props.primaryLabel);\n\n    return (\n      <BlockStack gap=\"200\">\n        <InlineGrid columns=\"1fr auto\">\n          <Text as=\"h2\" variant=\"headingSm\">\n            {siblingModelName}\n          </Text>\n          <RelatedModelOptionsPopover\n            active={addingSibling}\n            activator={\n              <Button onClick={() => setAddingSibling((prev) => !prev)} disclosure>\n                Add {siblingModelName ?? \"related model\"}\n              </Button>\n            }\n            onClose={() => setAddingSibling(false)}\n            onScrolledToBottom={siblingPagination.loadNextPage}\n            search={\n              <RelatedModelOptionsSearch modelName={siblingModelName} value={search.value} onChange={search.set} ariaControls={listboxId} />\n            }\n            options={siblingModelOptions}\n            records={siblingRecords}\n            onSelect={(record) => {\n              inverseRelatedModelField && append({ [inverseRelatedModelField]: { ...record, _link: record.id } });\n            }}\n            isLoading={siblingRecordsLoading}\n            autoSelection={AutoSelection.None}\n            renderOption={(option) => (\n              <Listbox.Action key={option.id} value={option.id}>\n                <InlineStack gap=\"200\">\n                  <Icon source={PlusCircleIcon} />\n                  <BlockStack gap=\"050\">\n                    {renderOptionLabel(option.label, \"primary\")}\n                    {option.secondaryLabel && renderOptionLabel(option.secondaryLabel, \"secondary\")}\n                  </BlockStack>\n                </InlineStack>\n              </Listbox.Action>\n            )}\n          />\n        </InlineGrid>\n\n        {joinRecords.length > 0 ? (\n          <BlockStack as=\"ul\">\n            {joinRecords.map(([fieldKey, idx, record]) => {\n              const siblingRecord = inverseRelatedModelField && record[inverseRelatedModelField];\n\n              const siblingOption = getRecordAsOption(siblingRecord, primaryLabel, props.secondaryLabel, props.tertiaryLabel);\n\n              return (\n                <Box key={fieldKey} padding=\"300\">\n                  <InlineGrid columns=\"1fr auto\" gap=\"200\" alignItems=\"center\">\n                    <Box borderColor=\"border\" borderWidth=\"025\" borderRadius=\"200\">\n                      <Box padding=\"200\">\n                        <InlineGrid columns=\"1fr 1fr 1fr\">\n                          {renderOptionLabel(siblingOption.label, \"primary\")}\n                          {siblingOption?.secondaryLabel && renderOptionLabel(siblingOption.secondaryLabel, \"secondary\")}\n                          {siblingOption?.tertiaryLabel && renderOptionLabel(siblingOption.tertiaryLabel, \"tertiary\")}\n                        </InlineGrid>\n                      </Box>\n                      {hasChildForm && (\n                        <Box borderColor=\"border\" borderBlockStartWidth=\"025\">\n                          <Box padding=\"200\">\n                            <RelationshipContext.Provider\n                              value={{\n                                transformPath: (path) => `${joinModelField}.${idx}.${path.replace(`${joinModelApiIdentifier}.`, \"\")}`,\n                                transformMetadataPath: (path) => `${pathPrefix}.${path}`,\n                                fieldArray,\n                              }}\n                            >\n                              {props.children}\n                            </RelationshipContext.Provider>\n                          </Box>\n                        </Box>\n                      )}\n                    </Box>\n                    <Box>\n                      <Button\n                        variant=\"tertiary\"\n                        icon={XCircleIcon}\n                        onClick={() => {\n                          remove(idx);\n                        }}\n                      />\n                    </Box>\n                  </InlineGrid>\n                </Box>\n              );\n            })}\n          </BlockStack>\n        ) : (\n          <Box borderColor=\"border\" borderWidth=\"025\" borderRadius=\"200\">\n            <Box padding=\"300\">\n              <InlineStack align=\"center\">\n                <Text as=\"p\" variant=\"bodyMd\" tone=\"subdued\">\n                  No {siblingModelName} yet\n                </Text>\n              </InlineStack>\n            </Box>\n          </Box>\n        )}\n      </BlockStack>\n    );\n  }\n);\n"]}