{"version":3,"file":"SearchableSingleRelatedModelRecordSelector.js","sourceRoot":"","sources":["../../../../../../src/auto/polaris/inputs/relationships/SearchableSingleRelatedModelRecordSelector.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,aAAa,EAAE,IAAI,EAAE,WAAW,EAAE,OAAO,EAAE,MAAM,kBAAkB,CAAC;AAC7E,OAAO,EAAE,cAAc,EAAE,MAAM,wBAAwB,CAAC;AACxD,OAAO,KAAK,MAAM,OAAO,CAAC;AAE1B,OAAO,EAAE,0BAA0B,EAAE,yBAAyB,EAAE,MAAM,0BAA0B,CAAC;AAEjG,MAAM,CAAC,MAAM,0CAA0C,GAAG,CAAC,KAK1D,EAAE,EAAE;IACH,MAAM,EACJ,MAAM,EACN,UAAU,EACV,aAAa,EACb,UAAU,EACV,OAAO,EACP,SAAS,EACT,mBAAmB,EACnB,gBAAgB,EAChB,IAAI,EACJ,QAAQ,EACR,YAAY,GACb,GAAG,KAAK,CAAC,IAAI,CAAC;IACf,OAAO,CACL;QACE,oBAAC,0BAA0B,IACzB,MAAM,EAAE,UAAU,EAClB,SAAS,EACP,oBAAC,yBAAyB,IACxB,SAAS,EAAE,gBAAgB,EAC3B,KAAK,EAAE,MAAM,CAAC,KAAK,EACnB,QAAQ,EAAE,MAAM,CAAC,GAAG,EACpB,OAAO,EAAE,GAAG,EAAE,CAAC,aAAa,CAAC,IAAI,CAAC,GAClC,EAEJ,OAAO,EAAE,GAAG,EAAE,CAAC,aAAa,CAAC,KAAK,CAAC,EACnC,kBAAkB,EAAE,UAAU,CAAC,YAAY,EAC3C,OAAO,EAAE;gBACP,oBAAC,OAAO,CAAC,MAAM,IAAC,GAAG,EAAC,gBAAgB,EAAC,KAAK,EAAC,gBAAgB,EAAC,OAAO;oBACjE,oBAAC,WAAW,IAAC,GAAG,EAAC,KAAK;wBACpB,oBAAC,IAAI,IAAC,MAAM,EAAE,cAAc,GAAI;;wBAC3B,gBAAgB,CACT,CACC;aAClB,EACD,OAAO,EAAE,mBAAmB,EAC5B,OAAO,EAAE,OAAO,EAChB,QAAQ,EAAE,CAAC,MAAM,EAAE,EAAE;gBACnB,IAAI,MAAM,CAAC,EAAE,KAAK,gBAAgB,EAAE,CAAC;oBACnC,KAAK,CAAC,QAAQ,EAAE,YAAY,EAAE,EAAE,IAAI,YAAY,CAAC,IAAI,CAAC,CAAC;gBACzD,CAAC;qBAAM,CAAC;oBACN,QAAQ,CAAC,IAAI,EAAE,EAAE,GAAG,MAAM,EAAE,KAAK,EAAE,MAAM,CAAC,EAAE,EAAE,CAAC,CAAC;gBAClD,CAAC;gBACD,aAAa,CAAC,KAAK,CAAC,CAAC;YACvB,CAAC,EACD,SAAS,EAAE,SAAS,EACpB,aAAa,EAAE,aAAa,CAAC,IAAI,GACjC,CACD,CACJ,CAAC;AACJ,CAAC,CAAC","sourcesContent":["import { AutoSelection, Icon, InlineStack, Listbox } from \"@shopify/polaris\";\nimport { PlusCircleIcon } from \"@shopify/polaris-icons\";\nimport React from \"react\";\nimport { type useSingleRelatedRecordRelationshipForm } from \"src/useSingleRelatedRecordRelationshipForm.js\";\nimport { RelatedModelOptionsPopover, RelatedModelOptionsSearch } from \"./RelatedModelOptions.js\";\n\nexport const SearchableSingleRelatedModelRecordSelector = (props: {\n  form: ReturnType<typeof useSingleRelatedRecordRelationshipForm>;\n  override?: {\n    addNewRecord?: () => void;\n  };\n}) => {\n  const {\n    search,\n    searchOpen,\n    setSearchOpen,\n    pagination,\n    records,\n    isLoading,\n    searchFilterOptions,\n    relatedModelName,\n    path,\n    setValue,\n    setIsEditing,\n  } = props.form;\n  return (\n    <>\n      <RelatedModelOptionsPopover\n        active={searchOpen}\n        activator={\n          <RelatedModelOptionsSearch\n            modelName={relatedModelName}\n            value={search.value}\n            onChange={search.set}\n            onFocus={() => setSearchOpen(true)}\n          />\n        }\n        onClose={() => setSearchOpen(false)}\n        onScrolledToBottom={pagination.loadNextPage}\n        actions={[\n          <Listbox.Action key=\"add-new-record\" value=\"add-new-record\" divider>\n            <InlineStack gap=\"200\">\n              <Icon source={PlusCircleIcon} />\n              Add {relatedModelName}\n            </InlineStack>\n          </Listbox.Action>,\n        ]}\n        options={searchFilterOptions}\n        records={records}\n        onSelect={(record) => {\n          if (record.id === \"add-new-record\") {\n            props.override?.addNewRecord?.() ?? setIsEditing(true);\n          } else {\n            setValue(path, { ...record, _link: record.id });\n          }\n          setSearchOpen(false);\n        }}\n        isLoading={isLoading}\n        autoSelection={AutoSelection.None}\n      />\n    </>\n  );\n};\n"]}