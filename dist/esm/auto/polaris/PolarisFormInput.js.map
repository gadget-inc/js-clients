{"version":3,"file":"PolarisFormInput.js","sourceRoot":"","sources":["../../../../src/auto/polaris/PolarisFormInput.tsx"],"names":[],"mappings":"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","sourcesContent":["import type { TextFieldProps } from \"@shopify/polaris\";\nimport { Checkbox, TextField } from \"@shopify/polaris\";\nimport React from \"react\";\nimport type { Control } from \"react-hook-form\";\nimport { useController } from \"react-hook-form\";\nimport type { GadgetEnumConfig, GadgetFieldType } from \"../../internal/gql/graphql.js\";\nimport type { FieldMetadata } from \"../../metadata.js\";\nimport { FieldType } from \"../../metadata.js\";\nimport { PolarisDateTimePicker } from \"./PolarisDateTimePicker.js\";\nimport { PolarisFileInput } from \"./PolarisFileInput.js\";\nimport { PolarisFixedOptionsCombobox } from \"./PolarisFixedOptionsCombobox.js\";\nimport { PolarisJSONInput } from \"./PolarisJSONInput.js\";\nimport { PolarisRolesCombobox } from \"./PolarisRolesCombobox.js\";\nimport { PolarisBelongsToInput } from \"./inputs/PolarisBelongsToInput.js\";\nimport { PolarisHasManyInput } from \"./inputs/PolarisHasManyInput.js\";\n\nconst FieldTypeToInputType: Partial<Record<GadgetFieldType, TextFieldProps[\"type\"]>> = {\n  [FieldType.Number]: \"number\",\n  [FieldType.Email]: \"email\",\n  [FieldType.Password]: \"password\",\n  [FieldType.EncryptedString]: \"password\",\n};\n\nexport const PolarisFormInput = (props: { path: string; field: FieldMetadata; control: Control<any> }) => {\n  const {\n    field: fieldProps,\n    fieldState: { error },\n  } = useController({\n    name: props.path,\n    control: props.control,\n    rules: { required: props.field.requiredArgumentForInput },\n  });\n  // many polaris components don't take refs because they are weenies, see https://github.com/Shopify/polaris/issues/1083\n  // omit the ref from the forwarded along props so that we don't get a warning\n  const { ref: _ref, ...field } = fieldProps;\n\n  const config = props.field.configuration;\n  switch (config.fieldType) {\n    case FieldType.String:\n    case FieldType.Number:\n    case FieldType.Email:\n    case FieldType.Password:\n    case FieldType.EncryptedString:\n    case FieldType.Color:\n    case FieldType.Url: {\n      return (\n        <TextField\n          label={props.field.name}\n          type={FieldTypeToInputType[props.field.fieldType]}\n          autoComplete=\"off\"\n          {...field}\n          error={error?.message}\n        />\n      );\n    }\n    case FieldType.Boolean: {\n      return <Checkbox label={props.field.name} {...field} error={error?.message} />;\n    }\n    case FieldType.DateTime: {\n      return (\n        <PolarisDateTimePicker dateLabel={props.field.name} includeTime={(config as any).includeTime} {...field} error={error?.message} />\n      );\n    }\n    case FieldType.Json: {\n      return <PolarisJSONInput label={props.field.name} multiline={4} monospaced autoComplete=\"off\" {...field} />;\n    }\n    case FieldType.Enum: {\n      const config = props.field.configuration as GadgetEnumConfig;\n      return (\n        <PolarisFixedOptionsCombobox\n          label={props.field.name}\n          options={config.options.map((option) => ({ value: option.name, label: option.name }))}\n          allowMultiple={config.allowMultiple}\n          {...field}\n        />\n      );\n    }\n    case FieldType.File: {\n      return <PolarisFileInput label={props.field.name} {...field} />;\n    }\n    case FieldType.RoleAssignments: {\n      return <PolarisRolesCombobox label={props.field.name} {...field} />;\n    }\n    case FieldType.HasMany:\n    case FieldType.HasManyThrough: {\n      return <PolarisHasManyInput field={props.field.apiIdentifier} />;\n    }\n    case FieldType.HasOne:\n    case FieldType.BelongsTo: {\n      // TODO: implement relationship field inputs\n      return <PolarisBelongsToInput field={props.field.apiIdentifier} />;\n    }\n    case FieldType.RichText: {\n      // TODO: implement rich text input\n      return null;\n    }\n    case FieldType.Money: {\n      // TODO: implement money input\n      return null;\n    }\n    case FieldType.Vector: {\n      return null;\n    }\n    default: {\n      throw new Error(`Unsupported field type for Polaris AutoForm: ${props.field.fieldType}`);\n    }\n  }\n};\n"]}