{"version":3,"file":"PolarisAutoTable.js","sourceRoot":"","sources":["../../../../src/auto/polaris/PolarisAutoTable.tsx"],"names":[],"mappings":"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","sourcesContent":["import type { FindManyFunction, SortOrder } from \"@gadgetinc/api-client-core\";\nimport type { IndexTableProps } from \"@shopify/polaris\";\nimport {\n  Banner,\n  BlockStack,\n  Box,\n  DataTable,\n  EmptySearchResult,\n  IndexFilters,\n  IndexTable,\n  SkeletonBodyText,\n  useSetIndexFiltersMode,\n} from \"@shopify/polaris\";\nimport pluralize from \"pluralize\";\nimport type { ReactNode } from \"react\";\nimport React, { useCallback, useMemo, useState } from \"react\";\nimport { useTable } from \"../../useTable.js\";\nimport type { TableColumn, TableRow } from \"../../useTableUtils/types.js\";\nimport type { ColumnValueType, OptionsType } from \"../../utils.js\";\nimport type { AutoTableProps } from \"../AutoTable.js\";\nimport { useTableBulkActions } from \"../hooks/useTableBulkActions.js\";\nimport { PolarisAutoBulkActionModal } from \"./PolarisAutoBulkActionModal.js\";\nimport { PolarisAutoTableCellRenderer } from \"./tableCells/PolarisAutoTableCellRenderer.js\";\n\nconst PolarisSkeletonTable = (props: { columns: number }) => {\n  const count = Array.from(Array(props.columns));\n  return (\n    <DataTable\n      columnContentTypes={count.map(() => \"text\")}\n      headings={count.map((i) => (\n        <Box width=\"100px\" key={i}>\n          <SkeletonBodyText lines={1} />\n        </Box>\n      ))}\n      rows={Array.from(Array(3)).map((_) => count.map((i) => <SkeletonBodyText key={i} lines={1} />))}\n    />\n  );\n};\nconst gadgetToPolarisDirection = (direction?: SortOrder) => {\n  if (direction === \"Ascending\") {\n    return \"ascending\";\n  } else if (direction === \"Descending\") {\n    return \"descending\";\n  }\n  return undefined;\n};\n\nconst getColumnIndex = (columns: TableColumn[], apiIdentifier: string | undefined) => {\n  return columns.findIndex((column) => column.apiIdentifier === apiIdentifier);\n};\n\nconst getNextDirection = (sortDirection: SortOrder | undefined) => {\n  switch (sortDirection) {\n    case \"Descending\":\n      return \"Ascending\";\n    case \"Ascending\":\n      return undefined;\n    case undefined:\n    default:\n      return \"Descending\";\n  }\n};\n\n/**\n * Renders a table of records from the backend automatically for a given model using Polaris\n */\nexport const PolarisAutoTable = <\n  GivenOptions extends OptionsType,\n  SchemaT,\n  FinderFunction extends FindManyFunction<GivenOptions, any, SchemaT, any>,\n  Options extends FinderFunction[\"optionsType\"]\n>(\n  props: AutoTableProps<GivenOptions, SchemaT, FinderFunction, Options>\n) => {\n  const { model } = props;\n  const componentKey = `${[model.findMany.namespace, model.findMany.modelApiIdentifier].join(\"_\")}AutoTable`;\n\n  return <PolarisAutoTableComponent key={componentKey} {...props} />;\n};\n\nconst PolarisAutoTableComponent = <\n  GivenOptions extends OptionsType,\n  SchemaT,\n  FinderFunction extends FindManyFunction<GivenOptions, any, SchemaT, any>,\n  Options extends FinderFunction[\"optionsType\"]\n>(\n  props: AutoTableProps<GivenOptions, SchemaT, FinderFunction, Options>\n) => {\n  const { onClick } = props;\n\n  const [{ rows, columns, metadata, fetching, error, page, search, sort, selection }, refresh] = useTable<\n    GivenOptions,\n    SchemaT,\n    FinderFunction,\n    Options\n  >(props.model, {\n    select: props.select,\n    columns: props.columns,\n    excludeColumns: props.excludeColumns,\n    pageSize: props.pageSize,\n    live: props.live,\n    sort: props.initialSort,\n    filter: props.filter,\n  } as any);\n\n  const [sortColumnApiIdentifier, setSortColumnApiIdentifier] = useState<string | undefined>(\n    props.initialSort ? Object.keys(props.initialSort)[0] : undefined\n  );\n  const [sortDirection, setSortDirection] = useState<SortOrder | undefined>(\n    props.initialSort ? Object.values(props.initialSort)[0] : undefined\n  );\n\n  const handleColumnSort = (headingIndex: number) => {\n    if (columns) {\n      const columnApiIdentifier = columns[headingIndex].apiIdentifier;\n      const nextDirection = columnApiIdentifier !== sortColumnApiIdentifier ? \"Descending\" : getNextDirection(sortDirection);\n      setSortDirection(nextDirection);\n      setSortColumnApiIdentifier(nextDirection ? columnApiIdentifier : undefined);\n      sort(columnApiIdentifier, nextDirection);\n    }\n  };\n\n  const onClickCallback = useCallback(\n    (row: TableRow) => {\n      return () => onClick?.(row);\n    },\n    [onClick]\n  );\n\n  const { mode, setMode } = useSetIndexFiltersMode();\n\n  const polarisTableProps = useMemo(() => {\n    const headings = [] as unknown as IndexTableProps[\"headings\"];\n    const sortable: boolean[] = [];\n\n    if (columns) {\n      for (const column of columns) {\n        headings.push({ title: column.name });\n        sortable.push(column.sortable);\n      }\n    }\n\n    return { headings, sortable };\n  }, [columns]);\n\n  const { bulkActionOptions, selectedModelActionDetails } = useTableBulkActions({\n    model: props.model,\n    actions: props.actions,\n    excludeActions: props.excludeActions,\n  });\n\n  if (!error && ((fetching && !rows) || !columns)) {\n    return <PolarisSkeletonTable columns={3} />;\n  }\n\n  const resourceName = {\n    singular: metadata?.name ?? \"\",\n    plural: metadata ? pluralize(metadata.name) : \"\",\n  };\n\n  const selectedRows = (rows ?? []).filter((row) => selection.recordIds.includes(row.id as string));\n\n  return (\n    <BlockStack>\n      <PolarisAutoBulkActionModal\n        model={props.model}\n        modelActionDetails={selectedModelActionDetails}\n        ids={selection.recordIds}\n        selectedRows={selectedRows}\n      />\n      <IndexFilters\n        mode={mode}\n        setMode={setMode}\n        appliedFilters={[]}\n        filters={[]}\n        onClearAll={() => undefined}\n        tabs={[]}\n        selected={1}\n        loading={fetching}\n        cancelAction={{ onAction: () => search.clear() }}\n        disabled={!!error}\n        // Search\n        queryValue={search.value}\n        onQueryChange={search.set}\n        onQueryClear={search.clear}\n      />\n\n      {error && (\n        <Box paddingBlockStart=\"200\" paddingBlockEnd=\"1000\">\n          <Banner title={error.message} tone=\"critical\" />\n        </Box>\n      )}\n\n      <IndexTable\n        selectedItemsCount={selection.recordIds.length}\n        {...disablePaginatedSelectAllButton}\n        onSelectionChange={selection.onSelectionChange}\n        {...polarisTableProps}\n        bulkActions={bulkActionOptions.map((option) => ({\n          content: option.humanizedName,\n          onAction: option.callback ? () => option.callback?.(selection.recordIds, selectedRows) : option.selectModelAction,\n        }))}\n        resourceName={resourceName}\n        emptyState={<EmptySearchResult title={`No ${resourceName.plural} yet`} description={\"\"} withIllustration />}\n        loading={fetching}\n        hasMoreItems={page.hasNextPage}\n        itemCount={\n          error\n            ? 1 // Don't show the empty state if there's an error\n            : rows?.length ?? 0\n        }\n        pagination={{\n          hasNext: page.hasNextPage,\n          hasPrevious: page.hasPreviousPage,\n          onNext: page.goToNextPage,\n          onPrevious: page.goToPreviousPage,\n        }}\n        sortDirection={gadgetToPolarisDirection(sortDirection)}\n        sortColumnIndex={columns ? getColumnIndex(columns, sortColumnApiIdentifier) : undefined}\n        onSort={(headingIndex) => handleColumnSort(headingIndex)}\n      >\n        {rows &&\n          columns &&\n          rows.map((row, index) => (\n            <IndexTable.Row\n              key={row.id as string}\n              id={row.id as string}\n              position={index}\n              onClick={onClick ? onClickCallback(row) : undefined}\n              selected={selection.recordIds.includes(row.id as string)}\n            >\n              {columns.map((column) => (\n                <IndexTable.Cell key={column.apiIdentifier}>\n                  <div style={{ maxWidth: \"200px\" }}>\n                    {column.isCustomCell ? (\n                      (row[column.apiIdentifier] as ReactNode)\n                    ) : (\n                      <PolarisAutoTableCellRenderer column={column} value={row[column.apiIdentifier] as ColumnValueType} />\n                    )}\n                  </div>\n                </IndexTable.Cell>\n              ))}\n            </IndexTable.Row>\n          ))}\n      </IndexTable>\n      <button onClick={refresh}>Refresh table</button>\n    </BlockStack>\n  );\n};\n\nconst disablePaginatedSelectAllButton = {\n  paginatedSelectAllActionText: \"\", // Empty string to hide the select all button. We only allow selection on the current page\n};\n"]}