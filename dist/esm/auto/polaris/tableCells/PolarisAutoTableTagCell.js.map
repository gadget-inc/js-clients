{"version":3,"file":"PolarisAutoTableTagCell.js","sourceRoot":"","sources":["../../../../../src/auto/polaris/tableCells/PolarisAutoTableTagCell.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,WAAW,EAAE,GAAG,EAAE,IAAI,EAAE,MAAM,kBAAkB,CAAC;AAC1D,OAAO,KAAK,EAAE,EAAE,SAAS,EAAE,MAAM,EAAE,QAAQ,EAAE,MAAM,OAAO,CAAC;AAE3D,OAAO,EAAE,2BAA2B,EAAE,MAAM,4CAA4C,CAAC;AAEzF,MAAM,CAAC,MAAM,uBAAuB,GAAG,CAAC,KAAoF,EAAE,EAAE;IAC9H,MAAM,EAAE,KAAK,EAAE,GAAG,KAAK,CAAC;IACxB,MAAM,CAAC,QAAQ,EAAE,WAAW,CAAC,GAAG,QAAQ,CAAC,KAAK,CAAC,CAAC;IAChD,MAAM,GAAG,GAAG,MAAM,CAAiB,IAAI,CAAC,CAAC;IACzC,MAAM,EAAE,aAAa,EAAE,cAAc,EAAE,GAAG,2BAA2B,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC;IAEjF,SAAS,CAAC,GAAG,EAAE;QACb,IAAI,GAAG,CAAC,OAAO,EAAE,CAAC;YAChB,WAAW,CAAC,GAAG,CAAC,OAAO,CAAC,WAAW,GAAG,GAAG,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC;QACjE,CAAC;IACH,CAAC,EAAE,CAAC,aAAa,CAAC,CAAC,CAAC;IAEpB,MAAM,iBAAiB,GAAG,oBAAC,IAAI,IAAC,EAAE,EAAC,MAAM,UAAW,CAAC;IAErD,OAAO,CACL,oBAAC,WAAW,IAAC,GAAG,EAAC,KAAK,EAAC,IAAI,EAAE,KAAK;QAChC,6BACE,KAAK,EAAE;gBACL,KAAK,EAAE,QAAQ,CAAC,CAAC,CAAC,mBAAmB,CAAC,CAAC,CAAC,MAAM;gBAC9C,SAAS,EAAE,QAAQ;aACpB,EACD,GAAG,EAAE,GAAG;YAER,oBAAC,WAAW,IAAC,GAAG,EAAC,KAAK,EAAC,IAAI,EAAE,KAAK;gBAC/B,aAAa,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC,CAC1B,oBAAC,GAAG,IAAC,GAAG,EAAE,GAAG,IAAG,GAAG,CAAO,CAC3B,CAAC;gBACD,cAAc,IAAI,iBAAiB,CACxB,CACV;QACL,QAAQ,IAAI,iBAAiB,CAClB,CACf,CAAC;AACJ,CAAC,CAAC","sourcesContent":["import { InlineStack, Tag, Text } from \"@shopify/polaris\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport type { Nullable, RoleAssignmentsValueType } from \"../../../utils.js\";\nimport { useTagsForTableCellRenderer } from \"../../hooks/useTagsForTableCellRenderer.js\";\n\nexport const PolarisAutoTableTagCell = (props: { value: Nullable<string> | Nullable<string>[] | RoleAssignmentsValueType[] }) => {\n  const { value } = props;\n  const [showMore, setShowMore] = useState(false);\n  const ref = useRef<HTMLDivElement>(null);\n  const { shortenedTags, hasOmittedTags } = useTagsForTableCellRenderer({ value });\n\n  useEffect(() => {\n    if (ref.current) {\n      setShowMore(ref.current.scrollWidth > ref.current.clientWidth);\n    }\n  }, [shortenedTags]);\n\n  const showMoreComponent = <Text as=\"span\">...</Text>;\n\n  return (\n    <InlineStack gap=\"100\" wrap={false}>\n      <div\n        style={{\n          width: showMore ? \"calc(100% - 20px)\" : \"auto\",\n          overflowX: \"hidden\",\n        }}\n        ref={ref}\n      >\n        <InlineStack gap=\"100\" wrap={false}>\n          {shortenedTags.map((tag) => (\n            <Tag key={tag}>{tag}</Tag>\n          ))}\n          {hasOmittedTags && showMoreComponent}\n        </InlineStack>\n      </div>\n      {showMore && showMoreComponent}\n    </InlineStack>\n  );\n};\n"]}