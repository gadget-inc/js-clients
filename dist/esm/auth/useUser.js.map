{"version":3,"file":"useUser.js","sourceRoot":"","sources":["../../../src/auth/useUser.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,MAAM,EAAE,MAAM,sBAAsB,CAAC;AAC9C,OAAO,EAAE,UAAU,EAAE,MAAM,iBAAiB,CAAC;AAE7C;;;GAGG;AACH,MAAM,CAAC,MAAM,OAAO,GAAG,GAAG,EAAE;IAC1B,MAAM,GAAG,GAAG,MAAM,EAAE,CAAC;IACrB,IAAI,CAAC,CAAC,MAAM,IAAI,GAAG,CAAC,EAAE;QACpB,MAAM,IAAI,KAAK,CAAC,uCAAuC,CAAC,CAAC;KAC1D;IACD,MAAM,OAAO,GAAG,UAAU,EAAE,CAAC;IAC7B,OAAO,OAAO,IAAI,OAAO,CAAC,IAAI,CAAC;AACjC,CAAC,CAAC","sourcesContent":["import { useApi } from \"../GadgetProvider.js\";\nimport { useSession } from \"./useSession.js\";\n\n/**\n * Used for fetching the current `User` record from Gadget. Will return `null` if the session is unauthenticated. Will suspend while the user is being fetched.\n * @returns The current user associated with the session or `null`.\n */\nexport const useUser = () => {\n  const api = useApi();\n  if (!(\"user\" in api)) {\n    throw new Error(\"api client does not have a User model\");\n  }\n  const session = useSession();\n  return session && session.user;\n};\n"]}