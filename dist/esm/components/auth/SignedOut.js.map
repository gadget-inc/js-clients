{"version":3,"file":"SignedOut.js","sourceRoot":"","sources":["../../../../src/components/auth/SignedOut.tsx"],"names":[],"mappings":"AACA,OAAO,KAAK,MAAM,OAAO,CAAC;AAC1B,OAAO,EAAE,OAAO,EAAE,MAAM,uBAAuB,CAAC;AAChD,OAAO,EAAE,kBAAkB,EAAE,MAAM,qBAAqB,CAAC;AAEzD;;GAEG;AACH,MAAM,CAAC,MAAM,SAAS,GAAG,CAAC,KAA8B,EAAE,EAAE;IAC1D,MAAM,EAAE,OAAO,EAAE,IAAI,EAAE,GAAG,OAAO,EAAE,CAAC;IACpC,IAAI,CAAC,OAAO,IAAI,kBAAkB,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,EAAE;QACpD,OAAO,0CAAG,KAAK,CAAC,QAAQ,CAAI,CAAC;KAC9B;SAAM;QACL,OAAO,IAAI,CAAC;KACb;AACH,CAAC,CAAC","sourcesContent":["import type { ReactNode } from \"react\";\nimport React from \"react\";\nimport { useAuth } from \"../../auth/useAuth.js\";\nimport { isSessionSignedOut } from \"../../auth/utils.js\";\n\n/**\n * Renders its `children` if the current `Session` is signed out (no associated `User`), otherwise renders nothing.\n */\nexport const SignedOut = (props: { children: ReactNode }) => {\n  const { session, user } = useAuth();\n  if (!session || isSessionSignedOut(session) || !user) {\n    return <>{props.children}</>;\n  } else {\n    return null;\n  }\n};\n"]}