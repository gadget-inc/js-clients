{"version":3,"file":"useRequestDisplayMode.js","sourceRoot":"","sources":["../../../src/hooks/useRequestDisplayMode.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,WAAW,EAAE,MAAM,OAAO,CAAC;AAGpC;;;;;;;;;;;;;;;;;GAiBG;AACH,MAAM,UAAU,qBAAqB;IACnC,MAAM,kBAAkB,GAAG,WAAW,CAAC,KAAK,EAAE,IAAiB,EAAE,EAAE;QACjE,IAAI,OAAO,MAAM,KAAK,WAAW,IAAI,MAAM,EAAE,MAAM,EAAE,kBAAkB,EAAE,CAAC;YACxE,OAAO,MAAM,MAAM,CAAC,MAAM,CAAC,kBAAkB,CAAC,EAAE,IAAI,EAAE,CAAC,CAAC;QAC1D,CAAC;QACD,OAAO,EAAE,IAAI,EAAE,CAAC;IAClB,CAAC,EAAE,EAAE,CAAC,CAAC;IAEP,OAAO,kBAAkB,CAAC;AAC5B,CAAC","sourcesContent":["import { useCallback } from \"react\";\nimport { type DisplayMode } from \"../types.js\";\n\n/**\n * Hook for requesting a change to the app's display mode.\n *\n * This hook provides a callback function to request that ChatGPT change how your\n * app is displayed. The host may reject the request or modify it (e.g., on mobile,\n * picture-in-picture is always coerced to fullscreen).\n *\n * @returns A callback function that takes a display mode and returns the granted mode\n *\n * @example\n * ```tsx\n * const requestDisplayMode = useRequestDisplayMode();\n * const goFullscreen = async () => {\n *   const result = await requestDisplayMode(\"fullscreen\");\n *   console.log(\"Granted mode:\", result.mode);\n * };\n * ```\n */\nexport function useRequestDisplayMode() {\n  const requestDisplayMode = useCallback(async (mode: DisplayMode) => {\n    if (typeof window !== \"undefined\" && window?.openai?.requestDisplayMode) {\n      return await window.openai.requestDisplayMode({ mode });\n    }\n    return { mode };\n  }, []);\n\n  return requestDisplayMode;\n}\n"]}