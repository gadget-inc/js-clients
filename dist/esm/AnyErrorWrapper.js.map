{"version":3,"file":"AnyErrorWrapper.js","sourceRoot":"","sources":["../../src/AnyErrorWrapper.ts"],"names":[],"mappings":"","sourcesContent":["/**\n * An error returned by any of the Gadget hooks.\n * Always has a message, but can be inspected to retrieve more detailed errors from either the network, the raw GraphQL layer, or Gadget specific errors like validation errors.\n * Not intended for creating outside of Gadget-owned code.\n **/\nexport interface AnyErrorWrapper<ExecutionErrorT extends Error = Error> extends Error {\n  /** Error message for this error. Derived from the other errors this wraps. */\n  message: string;\n  /**\n   * A list of errors encountered by the backend when processing a request. Populated if the client successfully communicated with the backend, but the backend was unable to process the request and rejected it with an error.\n   * Includes GraphQL syntax errors, missing or invalid argument errors, data validation errors, or unexpected errors encountered when running backend logic.\n   **/\n  executionErrors: ExecutionErrorT[];\n  /**\n   * An error encountered when trying to communicate with the backend from the client. Includes things like connection timeouts, connection interrupts, or no internet connection errors\n   **/\n  networkError?: Error;\n\n  /**\n   * The response from the server, if any was retrieved.\n   */\n  response?: any;\n}\n"]}